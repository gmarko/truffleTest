{
	"id": "a7f350ca583a969ffb480da2692df851",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/whore.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2022-03-07\r\n*/\r\n\r\n// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Address.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    /** CHANGE FUCTION\r\n        function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }*/\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n    require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n    recipient.transfer(amount);\r\n}\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    /**\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }*/\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n\r\n        function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n\r\n     */\r\n    \r\n    \r\n    /**CHANGE FUNCTION\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }*/\r\n    function functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) internal returns (bytes memory) {\r\n    require(isContract(target), \"Address: call to non-contract\");\r\n\r\n    // Send the Ether to the target contract using transfer\r\n    address payable targetPayable = payable(target);\r\n    require(address(this).balance >= weiValue, \"Address: insufficient balance\");\r\n    targetPayable.transfer(weiValue);\r\n\r\n    // Call the function on the target contract\r\n    (bool success, bytes memory returndata) = target.call(data);\r\n    if (success) {\r\n        return returndata;\r\n    } else {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n            // solhint-disable-next-line no-inline-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\r\n     * a default value of 18.\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor (string memory name, string memory symbol) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = 18;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets {decimals} to a value other than the default one of 18.\r\n     *\r\n     * WARNING: This function should only be called from the constructor. Most\r\n     * applications that interact with token contracts will not expect\r\n     * {decimals} to ever change, and may work incorrectly if it does.\r\n     */\r\n    function _setupDecimals(uint8 decimals_) internal {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: contracts/VERSAToken.sol\r\n\r\npragma solidity 0.6.0;\r\n\r\n\r\n\r\n\r\n// VERSAToken with Governance.\r\ncontract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\r\n    function mint(address _to, uint256 _amount) public onlyOwner {\r\n        _mint(_to, _amount);\r\n        _moveDelegates(address(0), _delegates[_to], _amount);\r\n    }\r\n\r\n    // Copied and modified from YAM code:\r\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\r\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\r\n    // Which is copied and modified from COMPOUND:\r\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\r\n\r\n    /// @notice A record of each accounts delegate\r\n    mapping (address => address) internal _delegates;\r\n\r\n    /// @notice A checkpoint for marking number of votes from a given block\r\n    struct Checkpoint {\r\n        uint32 fromBlock;\r\n        uint256 votes;\r\n    }\r\n\r\n    /// @notice A record of votes checkpoints for each account, by index\r\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\r\n\r\n    /// @notice The number of checkpoints for each account\r\n    mapping (address => uint32) public numCheckpoints;\r\n\r\n    /// @notice The EIP-712 typehash for the contract's domain\r\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\r\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\r\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\r\n\r\n    /// @notice A record of states for signing / validating signatures\r\n    mapping (address => uint) public nonces;\r\n\r\n      /// @notice An event thats emitted when an account changes its delegate\r\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\r\n\r\n    /// @notice An event thats emitted when a delegate account's vote balance changes\r\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\r\n\r\n    /**\r\n     * @notice Delegate votes from `msg.sender` to `delegatee`\r\n     * @param delegator The address to get delegatee for\r\n     */\r\n    function delegates(address delegator)\r\n        external\r\n        view\r\n        returns (address)\r\n    {\r\n        return _delegates[delegator];\r\n    }\r\n\r\n   /**\r\n    * @notice Delegate votes from `msg.sender` to `delegatee`\r\n    * @param delegatee The address to delegate votes to\r\n    */\r\n    function delegate(address delegatee) external {\r\n        return _delegate(msg.sender, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Delegates votes from signatory to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     * @param nonce The contract state required to match the signature\r\n     * @param expiry The time at which to expire the signature\r\n     * @param v The recovery byte of the signature\r\n     * @param r Half of the ECDSA signature pair\r\n     * @param s Half of the ECDSA signature pair\r\n     */\r\n    function delegateBySig(\r\n        address delegatee,\r\n        uint nonce,\r\n        uint expiry,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    )\r\n        external\r\n    {\r\n        bytes32 domainSeparator = keccak256(\r\n            abi.encode(\r\n                DOMAIN_TYPEHASH,\r\n                keccak256(bytes(name())),\r\n                getChainId(),\r\n                address(this)\r\n            )\r\n        );\r\n\r\n        bytes32 structHash = keccak256(\r\n            abi.encode(\r\n                DELEGATION_TYPEHASH,\r\n                delegatee,\r\n                nonce,\r\n                expiry\r\n            )\r\n        );\r\n\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                \"\\x19\\x01\",\r\n                domainSeparator,\r\n                structHash\r\n            )\r\n        );\r\n\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(signatory != address(0), \"VERSA::delegateBySig: invalid signature\");\r\n        require(nonce == nonces[signatory]++, \"VERSA::delegateBySig: invalid nonce\");\r\n        require(now <= expiry, \"VERSA::delegateBySig: signature expired\");\r\n        return _delegate(signatory, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the current votes balance for `account`\r\n     * @param account The address to get votes balance\r\n     * @return The number of current votes for `account`\r\n     */\r\n    function getCurrentVotes(address account)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Determine the prior number of votes for an account as of a block number\r\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\r\n     * @param account The address of the account to check\r\n     * @param blockNumber The block number to get the vote balance at\r\n     * @return The number of votes the account had as of the given block\r\n     */\r\n    function getPriorVotes(address account, uint blockNumber)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(blockNumber < block.number, \"VERSA::getPriorVotes: not yet determined\");\r\n\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        if (nCheckpoints == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // First check most recent balance\r\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r\n            return checkpoints[account][nCheckpoints - 1].votes;\r\n        }\r\n\r\n        // Next check implicit zero balance\r\n        if (checkpoints[account][0].fromBlock > blockNumber) {\r\n            return 0;\r\n        }\r\n\r\n        uint32 lower = 0;\r\n        uint32 upper = nCheckpoints - 1;\r\n        while (upper > lower) {\r\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\r\n            Checkpoint memory cp = checkpoints[account][center];\r\n            if (cp.fromBlock == blockNumber) {\r\n                return cp.votes;\r\n            } else if (cp.fromBlock < blockNumber) {\r\n                lower = center;\r\n            } else {\r\n                upper = center - 1;\r\n            }\r\n        }\r\n        return checkpoints[account][lower].votes;\r\n    }\r\n\r\n    function _delegate(address delegator, address delegatee)\r\n        internal\r\n    {\r\n        address currentDelegate = _delegates[delegator];\r\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying VERSAs (not scaled);\r\n        _delegates[delegator] = delegatee;\r\n\r\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\r\n\r\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\r\n    }\r\n\r\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r\n        if (srcRep != dstRep && amount > 0) {\r\n            if (srcRep != address(0)) {\r\n                // decrease old representative\r\n                uint32 srcRepNum = numCheckpoints[srcRep];\r\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\r\n                uint256 srcRepNew = srcRepOld.sub(amount);\r\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\r\n            }\r\n\r\n            if (dstRep != address(0)) {\r\n                // increase new representative\r\n                uint32 dstRepNum = numCheckpoints[dstRep];\r\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\r\n                uint256 dstRepNew = dstRepOld.add(amount);\r\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _writeCheckpoint(\r\n        address delegatee,\r\n        uint32 nCheckpoints,\r\n        uint256 oldVotes,\r\n        uint256 newVotes\r\n    )\r\n        internal\r\n    {\r\n        uint32 blockNumber = safe32(block.number, \"VERSA::_writeCheckpoint: block number exceeds 32 bits\");\r\n\r\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\r\n        } else {\r\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\r\n            numCheckpoints[delegatee] = nCheckpoints + 1;\r\n        }\r\n\r\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\r\n    }\r\n\r\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r\n        require(n < 2**32, errorMessage);\r\n        return uint32(n);\r\n    }\r\n\r\n    function getChainId() internal pure returns (uint) {\r\n        uint256 chainId;\r\n        assembly { chainId := chainid() }\r\n        return chainId;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/whore.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/whore.sol\":9395:17215  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/whore.sol\":9395:17215  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d305bde24d09fd2fd7a8c92a739337b4e017e8b31866ea0607dad3b4795bc6bc64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d305bde24d09fd2fd7a8c92a739337b4e017e8b31866ea0607dad3b4795bc6bc64736f6c63430006000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SDIV 0xBD 0xE2 0x4D MULMOD REVERT 0x2F 0xD7 0xA8 0xC9 0x2A PUSH20 0x9337B4E017E8B31866EA0607DAD3B4795BC6BC64 PUSH20 0x6F6C634300060000330000000000000000000000 ",
							"sourceMap": "9395:7820:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d305bde24d09fd2fd7a8c92a739337b4e017e8b31866ea0607dad3b4795bc6bc64736f6c63430006000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SDIV 0xBD 0xE2 0x4D MULMOD REVERT 0x2F 0xD7 0xA8 0xC9 0x2A PUSH20 0x9337B4E017E8B31866EA0607DAD3B4795BC6BC64 PUSH20 0x6F6C634300060000330000000000000000000000 ",
							"sourceMap": "9395:7820:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9395,
									"end": 17215,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9395,
									"end": 17215,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d305bde24d09fd2fd7a8c92a739337b4e017e8b31866ea0607dad3b4795bc6bc64736f6c63430006000033",
									".code": [
										{
											"begin": 9395,
											"end": 17215,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "ADDRESS"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "EQ"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "MSTORE"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "DUP1"
										},
										{
											"begin": 9395,
											"end": 17215,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface.  * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}.  * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms].  * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications.  * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.      * To select a different value for {decimals}, use {_setupDecimals}.      * All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/whore.sol\":18503:28222  contract ERC20 is Context, IERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"contracts/whore.sol\":19275:19279  name */\n  dup2\n    /* \"contracts/whore.sol\":19267:19272  _name */\n  0x03\n    /* \"contracts/whore.sol\":19267:19279  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/whore.sol\":19300:19306  symbol */\n  dup1\n    /* \"contracts/whore.sol\":19290:19297  _symbol */\n  0x04\n    /* \"contracts/whore.sol\":19290:19306  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/whore.sol\":19329:19331  18 */\n  0x12\n    /* \"contracts/whore.sol\":19317:19326  _decimals */\n  0x05\n  0x00\n    /* \"contracts/whore.sol\":19317:19331  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  pop\n  pop\n    /* \"contracts/whore.sol\":18503:28222  contract ERC20 is Context, IERC20 {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/whore.sol\":18503:28222  contract ERC20 is Context, IERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/whore.sol\":18503:28222  contract ERC20 is Context, IERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_19:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_41:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n    tag_16:\n        /* \"contracts/whore.sol\":19446:19459  string memory */\n      0x60\n        /* \"contracts/whore.sol\":19479:19484  _name */\n      0x03\n        /* \"contracts/whore.sol\":19472:19484  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"contracts/whore.sol\":21598:21602  bool */\n      0x00\n        /* \"contracts/whore.sol\":21615:21654  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"contracts/whore.sol\":21624:21636  _msgSender() */\n      tag_58\n        /* \"contracts/whore.sol\":21624:21634  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":21624:21636  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/whore.sol\":21638:21645  spender */\n      dup5\n        /* \"contracts/whore.sol\":21647:21653  amount */\n      dup5\n        /* \"contracts/whore.sol\":21615:21623  _approve */\n      tag_60\n        /* \"contracts/whore.sol\":21615:21654  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/whore.sol\":21672:21676  true */\n      0x01\n        /* \"contracts/whore.sol\":21665:21676  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n    tag_25:\n        /* \"contracts/whore.sol\":20537:20544  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":20564:20576  _totalSupply */\n      sload(0x02)\n        /* \"contracts/whore.sol\":20557:20576  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_28:\n        /* \"contracts/whore.sol\":22264:22268  bool */\n      0x00\n        /* \"contracts/whore.sol\":22281:22317  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"contracts/whore.sol\":22291:22297  sender */\n      dup5\n        /* \"contracts/whore.sol\":22299:22308  recipient */\n      dup5\n        /* \"contracts/whore.sol\":22310:22316  amount */\n      dup5\n        /* \"contracts/whore.sol\":22281:22290  _transfer */\n      tag_64\n        /* \"contracts/whore.sol\":22281:22317  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/whore.sol\":22328:22449  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"contracts/whore.sol\":22337:22343  sender */\n      dup5\n        /* \"contracts/whore.sol\":22345:22357  _msgSender() */\n      tag_66\n        /* \"contracts/whore.sol\":22345:22355  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":22345:22357  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"contracts/whore.sol\":22397:22403  amount */\n      dup6\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":22359:22370  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":22359:22378  _allowances[sender] */\n      0x00\n        /* \"contracts/whore.sol\":22371:22377  sender */\n      dup12\n        /* \"contracts/whore.sol\":22359:22378  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":22359:22392  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":22379:22391  _msgSender() */\n      tag_68\n        /* \"contracts/whore.sol\":22379:22389  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":22379:22391  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/whore.sol\":22359:22392  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":22359:22396  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/whore.sol\":22328:22336  _approve */\n      tag_60\n        /* \"contracts/whore.sol\":22328:22449  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/whore.sol\":22467:22471  true */\n      0x01\n        /* \"contracts/whore.sol\":22460:22471  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n    tag_30:\n        /* \"contracts/whore.sol\":20377:20382  uint8 */\n      0x00\n        /* \"contracts/whore.sol\":20402:20411  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/whore.sol\":20395:20411  return _decimals */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_33:\n        /* \"contracts/whore.sol\":22976:22980  bool */\n      0x00\n        /* \"contracts/whore.sol\":22993:23076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"contracts/whore.sol\":23002:23014  _msgSender() */\n      tag_73\n        /* \"contracts/whore.sol\":23002:23012  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":23002:23014  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/whore.sol\":23016:23023  spender */\n      dup5\n        /* \"contracts/whore.sol\":23025:23075  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"contracts/whore.sol\":23064:23074  addedValue */\n      dup6\n        /* \"contracts/whore.sol\":23025:23036  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":23025:23050  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":23037:23049  _msgSender() */\n      tag_75\n        /* \"contracts/whore.sol\":23037:23047  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":23037:23049  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/whore.sol\":23025:23050  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":23025:23059  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/whore.sol\":23051:23058  spender */\n      dup10\n        /* \"contracts/whore.sol\":23025:23059  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":23025:23063  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"contracts/whore.sol\":23025:23075  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"contracts/whore.sol\":22993:23001  _approve */\n      tag_60\n        /* \"contracts/whore.sol\":22993:23076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/whore.sol\":23094:23098  true */\n      0x01\n        /* \"contracts/whore.sol\":23087:23098  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_36:\n        /* \"contracts/whore.sol\":20713:20720  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":20740:20749  _balances */\n      dup1\n        /* \"contracts/whore.sol\":20740:20758  _balances[account] */\n      0x00\n        /* \"contracts/whore.sol\":20750:20757  account */\n      dup4\n        /* \"contracts/whore.sol\":20740:20758  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":20733:20758  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n    tag_38:\n        /* \"contracts/whore.sol\":19650:19663  string memory */\n      0x60\n        /* \"contracts/whore.sol\":19683:19690  _symbol */\n      0x04\n        /* \"contracts/whore.sol\":19676:19690  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"contracts/whore.sol\":23702:23706  bool */\n      0x00\n        /* \"contracts/whore.sol\":23719:23848  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"contracts/whore.sol\":23728:23740  _msgSender() */\n      tag_84\n        /* \"contracts/whore.sol\":23728:23738  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":23728:23740  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/whore.sol\":23742:23749  spender */\n      dup5\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"contracts/whore.sol\":23790:23805  subtractedValue */\n      dup6\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":23751:23762  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":23751:23776  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":23763:23775  _msgSender() */\n      tag_86\n        /* \"contracts/whore.sol\":23763:23773  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":23763:23775  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/whore.sol\":23751:23776  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":23751:23785  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/whore.sol\":23777:23784  spender */\n      dup11\n        /* \"contracts/whore.sol\":23751:23785  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":23751:23789  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/whore.sol\":23719:23727  _approve */\n      tag_60\n        /* \"contracts/whore.sol\":23719:23848  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/whore.sol\":23866:23870  true */\n      0x01\n        /* \"contracts/whore.sol\":23859:23870  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_48:\n        /* \"contracts/whore.sol\":21065:21069  bool */\n      0x00\n        /* \"contracts/whore.sol\":21082:21124  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"contracts/whore.sol\":21092:21104  _msgSender() */\n      tag_89\n        /* \"contracts/whore.sol\":21092:21102  _msgSender */\n      tag_59\n        /* \"contracts/whore.sol\":21092:21104  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/whore.sol\":21106:21115  recipient */\n      dup5\n        /* \"contracts/whore.sol\":21117:21123  amount */\n      dup5\n        /* \"contracts/whore.sol\":21082:21091  _transfer */\n      tag_64\n        /* \"contracts/whore.sol\":21082:21124  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/whore.sol\":21142:21146  true */\n      0x01\n        /* \"contracts/whore.sol\":21135:21146  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_51:\n        /* \"contracts/whore.sol\":21306:21313  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":21333:21344  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":21333:21351  _allowances[owner] */\n      0x00\n        /* \"contracts/whore.sol\":21345:21350  owner */\n      dup5\n        /* \"contracts/whore.sol\":21333:21351  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":21333:21360  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/whore.sol\":21352:21359  spender */\n      dup4\n        /* \"contracts/whore.sol\":21333:21360  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":21326:21360  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_59:\n        /* \"contracts/whore.sol\":750:765  address payable */\n      0x00\n        /* \"contracts/whore.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/whore.sol\":778:795  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":26756:27102  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_60:\n        /* \"contracts/whore.sol\":26875:26876  0 */\n      0x00\n        /* \"contracts/whore.sol\":26858:26877  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":26858:26863  owner */\n      dup4\n        /* \"contracts/whore.sol\":26858:26877  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":26850:26918  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/whore.sol\":26956:26957  0 */\n      0x00\n        /* \"contracts/whore.sol\":26937:26958  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":26937:26944  spender */\n      dup3\n        /* \"contracts/whore.sol\":26937:26958  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":26929:26997  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/whore.sol\":27040:27046  amount */\n      dup1\n        /* \"contracts/whore.sol\":27010:27021  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":27010:27028  _allowances[owner] */\n      0x00\n        /* \"contracts/whore.sol\":27022:27027  owner */\n      dup6\n        /* \"contracts/whore.sol\":27010:27028  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":27010:27037  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/whore.sol\":27029:27036  spender */\n      dup5\n        /* \"contracts/whore.sol\":27010:27037  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":27010:27046  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":27078:27085  spender */\n      dup2\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":27071:27076  owner */\n      dup4\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/whore.sol\":27087:27093  amount */\n      dup4\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":26756:27102  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":24368:24907  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n    tag_64:\n        /* \"contracts/whore.sol\":24492:24493  0 */\n      0x00\n        /* \"contracts/whore.sol\":24474:24494  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24474:24480  sender */\n      dup4\n        /* \"contracts/whore.sol\":24474:24494  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":24466:24536  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/whore.sol\":24576:24577  0 */\n      0x00\n        /* \"contracts/whore.sol\":24555:24578  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24555:24564  recipient */\n      dup3\n        /* \"contracts/whore.sol\":24555:24578  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":24547:24618  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/whore.sol\":24631:24678  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"contracts/whore.sol\":24652:24658  sender */\n      dup4\n        /* \"contracts/whore.sol\":24660:24669  recipient */\n      dup4\n        /* \"contracts/whore.sol\":24671:24677  amount */\n      dup4\n        /* \"contracts/whore.sol\":24631:24651  _beforeTokenTransfer */\n      tag_99\n        /* \"contracts/whore.sol\":24631:24678  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"contracts/whore.sol\":24733:24739  amount */\n      dup2\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":24711:24720  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24711:24728  _balances[sender] */\n      dup1\n        /* \"contracts/whore.sol\":24721:24727  sender */\n      dup8\n        /* \"contracts/whore.sol\":24711:24728  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":24711:24732  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/whore.sol\":24691:24700  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24691:24708  _balances[sender] */\n      dup1\n        /* \"contracts/whore.sol\":24701:24707  sender */\n      dup6\n        /* \"contracts/whore.sol\":24691:24708  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":24691:24782  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":24816:24848  _balances[recipient].add(amount) */\n      tag_101\n        /* \"contracts/whore.sol\":24841:24847  amount */\n      dup2\n        /* \"contracts/whore.sol\":24816:24825  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24816:24836  _balances[recipient] */\n      dup1\n        /* \"contracts/whore.sol\":24826:24835  recipient */\n      dup6\n        /* \"contracts/whore.sol\":24816:24836  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":24816:24840  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"contracts/whore.sol\":24816:24848  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/whore.sol\":24793:24802  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24793:24813  _balances[recipient] */\n      dup1\n        /* \"contracts/whore.sol\":24803:24812  recipient */\n      dup5\n        /* \"contracts/whore.sol\":24793:24813  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":24793:24848  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":24881:24890  recipient */\n      dup2\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24873:24879  sender */\n      dup4\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/whore.sol\":24892:24898  amount */\n      dup4\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":24368:24907  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":5682:5874  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_69:\n        /* \"contracts/whore.sol\":5768:5775  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":5801:5802  a */\n      dup4\n        /* \"contracts/whore.sol\":5796:5797  b */\n      dup4\n        /* \"contracts/whore.sol\":5796:5802  b <= a */\n      gt\n      iszero\n        /* \"contracts/whore.sol\":5804:5816  errorMessage */\n      dup3\n        /* \"contracts/whore.sol\":5788:5817  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_104:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_104)\n    tag_106:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":5788:5817  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"contracts/whore.sol\":5828:5837  uint256 c */\n      0x00\n        /* \"contracts/whore.sol\":5844:5845  b */\n      dup4\n        /* \"contracts/whore.sol\":5840:5841  a */\n      dup6\n        /* \"contracts/whore.sol\":5840:5845  a - b */\n      sub\n        /* \"contracts/whore.sol\":5828:5845  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":5865:5866  c */\n      dup1\n        /* \"contracts/whore.sol\":5858:5866  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":5682:5874  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":4779:4960  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_76:\n        /* \"contracts/whore.sol\":4837:4844  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":4857:4866  uint256 c */\n      dup1\n        /* \"contracts/whore.sol\":4873:4874  b */\n      dup3\n        /* \"contracts/whore.sol\":4869:4870  a */\n      dup5\n        /* \"contracts/whore.sol\":4869:4874  a + b */\n      add\n        /* \"contracts/whore.sol\":4857:4874  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":4898:4899  a */\n      dup4\n        /* \"contracts/whore.sol\":4893:4894  c */\n      dup2\n        /* \"contracts/whore.sol\":4893:4899  c >= a */\n      lt\n      iszero\n        /* \"contracts/whore.sol\":4885:4931  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/whore.sol\":4951:4952  c */\n      dup1\n        /* \"contracts/whore.sol\":4944:4952  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":4779:4960  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":28127:28219  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122050e26f81138aecc6932a66257087849392e26c88e65938b8fe8d98b8a9b5f1c764736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013bb380380620013bb833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002ba565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b620002b791905b80821115620002b357600081600090555060010162000299565b5090565b90565b6110f180620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122050e26f81138aecc6932a66257087849392e26c88e65938b8fe8d98b8a9b5f1c764736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13BB CODESIZE SUB DUP1 PUSH3 0x13BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2BA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2B7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x299 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10F1 DUP1 PUSH3 0x2CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122050E2 PUSH16 0x81138AECC6932A66257087849392E26C DUP9 0xE6 MSIZE CODESIZE 0xB8 INVALID DUP14 SWAP9 0xB8 0xA9 0xB5 CALL 0xC7 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "18503:9719:0:-:0;;;19194:145;8:9:-1;5:2;;;30:1;27;20:12;5:2;19194:145:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19194:145:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;19194:145:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19194:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;19194:145:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19194:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19275:4;19267:5;:12;;;;;;;;;;;;:::i;:::-;;19300:6;19290:7;:16;;;;;;;;;;;;:::i;:::-;;19329:2;19317:9;;:14;;;;;;;;;;;;;;;;;;19194:145;;18503:9719;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122050e26f81138aecc6932a66257087849392e26c88e65938b8fe8d98b8a9b5f1c764736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122050E2 PUSH16 0x81138AECC6932A66257087849392E26C DUP9 0xE6 MSIZE CODESIZE 0xB8 INVALID DUP14 SWAP9 0xB8 0xA9 0xB5 CALL 0xC7 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "18503:9719:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18503:9719:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19409:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19409:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21515:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21515:169:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20484:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22158:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22158:321:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20336:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22888:218;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22888:218:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20647:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20647:119:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19611:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19611:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23609:269;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23609:269:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20979:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20979:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21217:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21217:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19409:83;19446:13;19479:5;19472:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19409:83;:::o;21515:169::-;21598:4;21615:39;21624:12;:10;:12::i;:::-;21638:7;21647:6;21615:8;:39::i;:::-;21672:4;21665:11;;21515:169;;;;:::o;20484:100::-;20537:7;20564:12;;20557:19;;20484:100;:::o;22158:321::-;22264:4;22281:36;22291:6;22299:9;22310:6;22281:9;:36::i;:::-;22328:121;22337:6;22345:12;:10;:12::i;:::-;22359:89;22397:6;22359:89;;;;;;;;;;;;;;;;;:11;:19;22371:6;22359:19;;;;;;;;;;;;;;;:33;22379:12;:10;:12::i;:::-;22359:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;22328:8;:121::i;:::-;22467:4;22460:11;;22158:321;;;;;:::o;20336:83::-;20377:5;20402:9;;;;;;;;;;;20395:16;;20336:83;:::o;22888:218::-;22976:4;22993:83;23002:12;:10;:12::i;:::-;23016:7;23025:50;23064:10;23025:11;:25;23037:12;:10;:12::i;:::-;23025:25;;;;;;;;;;;;;;;:34;23051:7;23025:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;22993:8;:83::i;:::-;23094:4;23087:11;;22888:218;;;;:::o;20647:119::-;20713:7;20740:9;:18;20750:7;20740:18;;;;;;;;;;;;;;;;20733:25;;20647:119;;;:::o;19611:87::-;19650:13;19683:7;19676:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19611:87;:::o;23609:269::-;23702:4;23719:129;23728:12;:10;:12::i;:::-;23742:7;23751:96;23790:15;23751:96;;;;;;;;;;;;;;;;;:11;:25;23763:12;:10;:12::i;:::-;23751:25;;;;;;;;;;;;;;;:34;23777:7;23751:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;23719:8;:129::i;:::-;23866:4;23859:11;;23609:269;;;;:::o;20979:175::-;21065:4;21082:42;21092:12;:10;:12::i;:::-;21106:9;21117:6;21082:9;:42::i;:::-;21142:4;21135:11;;20979:175;;;;:::o;21217:151::-;21306:7;21333:11;:18;21345:5;21333:18;;;;;;;;;;;;;;;:27;21352:7;21333:27;;;;;;;;;;;;;;;;21326:34;;21217:151;;;;:::o;697:106::-;750:15;785:10;778:17;;697:106;:::o;26756:346::-;26875:1;26858:19;;:5;:19;;;;26850:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26956:1;26937:21;;:7;:21;;;;26929:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27040:6;27010:11;:18;27022:5;27010:18;;;;;;;;;;;;;;;:27;27029:7;27010:27;;;;;;;;;;;;;;;:36;;;;27078:7;27062:32;;27071:5;27062:32;;;27087:6;27062:32;;;;;;;;;;;;;;;;;;26756:346;;;:::o;24368:539::-;24492:1;24474:20;;:6;:20;;;;24466:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24576:1;24555:23;;:9;:23;;;;24547:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24631:47;24652:6;24660:9;24671:6;24631:20;:47::i;:::-;24711:71;24733:6;24711:71;;;;;;;;;;;;;;;;;:9;:17;24721:6;24711:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;24691:9;:17;24701:6;24691:17;;;;;;;;;;;;;;;:91;;;;24816:32;24841:6;24816:9;:20;24826:9;24816:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;24793:9;:20;24803:9;24793:20;;;;;;;;;;;;;;;:55;;;;24881:9;24864:35;;24873:6;24864:35;;;24892:6;24864:35;;;;;;;;;;;;;;;;;;24368:539;;;:::o;5682:192::-;5768:7;5801:1;5796;:6;;5804:12;5788:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5788:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5828:9;5844:1;5840;:5;5828:17;;5865:1;5858:8;;;5682:192;;;;;:::o;4779:181::-;4837:7;4857:9;4873:1;4869;:5;4857:17;;4898:1;4893;:6;;4885:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4951:1;4944:8;;;4779:181;;;;:::o;28127:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSHSIZE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "CODESIZE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSHSIZE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "CODECOPY"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP3"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "AND"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ISZERO"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "JUMPI"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP3"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "EXP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "NOT"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "AND"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "JUMPDEST"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP3"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "AND"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ISZERO"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "JUMPI"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP3"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP4"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "EXP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SUB"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "NOT"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "AND"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "SWAP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "JUMPDEST"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19275,
									"end": 19279,
									"name": "DUP2"
								},
								{
									"begin": 19267,
									"end": 19272,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "DUP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "MLOAD"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "ADD"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP3"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP2"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "JUMPDEST"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "POP"
								},
								{
									"begin": 19300,
									"end": 19306,
									"name": "DUP1"
								},
								{
									"begin": 19290,
									"end": 19297,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "DUP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "MLOAD"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "ADD"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP3"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP2"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "JUMPDEST"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "POP"
								},
								{
									"begin": 19329,
									"end": 19331,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 19317,
									"end": 19326,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 19317,
									"end": 19326,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "EXP"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP2"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SLOAD"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP2"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "MUL"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "NOT"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "AND"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SWAP1"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP4"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "AND"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "MUL"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "OR"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SWAP1"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SSTORE"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SLOAD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "AND"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ISZERO"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "MUL"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SUB"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "AND"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DIV"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "MSTORE"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "KECCAK256"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DIV"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "LT"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPI"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "MLOAD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "NOT"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "AND"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP4"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "OR"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP6"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SSTORE"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP6"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SSTORE"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ISZERO"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPI"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "GT"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ISZERO"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPI"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "MLOAD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SSTORE"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP3"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "GT"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ISZERO"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPI"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP2"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SSTORE"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "ADD"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "POP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "SWAP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "JUMPDEST"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "DUP1"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "CODECOPY"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 18503,
									"end": 28222,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050e26f81138aecc6932a66257087849392e26c88e65938b8fe8d98b8a9b5f1c764736f6c63430006000033",
									".code": [
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "MSTORE"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "POP"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "LT"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "SHR"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "GT"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMP"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPDEST"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "EQ"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPI"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "JUMPDEST"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "DUP1"
										},
										{
											"begin": 18503,
											"end": 28222,
											"name": "REVERT"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "AND"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ISZERO"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPI"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "EXP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "NOT"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "AND"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "RETURN"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "AND"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MLOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MSTORE"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MLOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SUB"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "RETURN"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MLOAD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP3"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MSTORE"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "ADD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MLOAD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SUB"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "RETURN"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "AND"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "AND"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MLOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MSTORE"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MLOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SUB"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "RETURN"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MLOAD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP3"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "AND"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "AND"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MSTORE"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "ADD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MLOAD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SUB"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "RETURN"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "AND"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MLOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MSTORE"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MLOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SUB"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "RETURN"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "AND"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP3"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MLOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP3"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MSTORE"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MLOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SUB"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "RETURN"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ISZERO"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPI"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "EXP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "NOT"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "RETURN"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "AND"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MLOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MSTORE"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MLOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SUB"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "RETURN"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "AND"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MLOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MSTORE"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MLOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SUB"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "RETURN"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "AND"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "AND"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MLOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MSTORE"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MLOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SUB"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "RETURN"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19446,
											"end": 19459,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19479,
											"end": 19484,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "LT"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "KECCAK256"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "GT"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21598,
											"end": 21602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 21624,
											"end": 21634,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "JUMPDEST"
										},
										{
											"begin": 21638,
											"end": 21645,
											"name": "DUP5"
										},
										{
											"begin": 21647,
											"end": 21653,
											"name": "DUP5"
										},
										{
											"begin": 21615,
											"end": 21623,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "JUMPDEST"
										},
										{
											"begin": 21672,
											"end": 21676,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21665,
											"end": 21676,
											"name": "SWAP1"
										},
										{
											"begin": 21665,
											"end": 21676,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20537,
											"end": 20544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20564,
											"end": 20576,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 20564,
											"end": 20576,
											"name": "SLOAD"
										},
										{
											"begin": 20557,
											"end": 20576,
											"name": "SWAP1"
										},
										{
											"begin": 20557,
											"end": 20576,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22264,
											"end": 22268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 22291,
											"end": 22297,
											"name": "DUP5"
										},
										{
											"begin": 22299,
											"end": 22308,
											"name": "DUP5"
										},
										{
											"begin": 22310,
											"end": 22316,
											"name": "DUP5"
										},
										{
											"begin": 22281,
											"end": 22290,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "JUMPDEST"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 22337,
											"end": 22343,
											"name": "DUP5"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 22345,
											"end": 22355,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "JUMPDEST"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 22397,
											"end": 22403,
											"name": "DUP6"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MLOAD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "CODECOPY"
										},
										{
											"begin": 22359,
											"end": 22370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22377,
											"name": "DUP12"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "KECCAK256"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 22379,
											"end": 22389,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "JUMPDEST"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "KECCAK256"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "SLOAD"
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP3"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "JUMPDEST"
										},
										{
											"begin": 22328,
											"end": 22336,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "JUMPDEST"
										},
										{
											"begin": 22467,
											"end": 22471,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22460,
											"end": 22471,
											"name": "SWAP1"
										},
										{
											"begin": 22460,
											"end": 22471,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP4"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20377,
											"end": 20382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SLOAD"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "EXP"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "DIV"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "AND"
										},
										{
											"begin": 20395,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20395,
											"end": 20411,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22976,
											"end": 22980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 23002,
											"end": 23012,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "JUMPDEST"
										},
										{
											"begin": 23016,
											"end": 23023,
											"name": "DUP5"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 23064,
											"end": 23074,
											"name": "DUP6"
										},
										{
											"begin": 23025,
											"end": 23036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 23037,
											"end": 23047,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "JUMPDEST"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "KECCAK256"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23051,
											"end": 23058,
											"name": "DUP10"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "KECCAK256"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "SLOAD"
										},
										{
											"begin": 23025,
											"end": 23063,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 23025,
											"end": 23063,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "SWAP2"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "JUMPDEST"
										},
										{
											"begin": 22993,
											"end": 23001,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "JUMPDEST"
										},
										{
											"begin": 23094,
											"end": 23098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23087,
											"end": 23098,
											"name": "SWAP1"
										},
										{
											"begin": 23087,
											"end": 23098,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20713,
											"end": 20720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20740,
											"end": 20749,
											"name": "DUP1"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20750,
											"end": 20757,
											"name": "DUP4"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "AND"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "AND"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "DUP2"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "MSTORE"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "ADD"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "SWAP1"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "DUP2"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "MSTORE"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "ADD"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "KECCAK256"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "SLOAD"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "SWAP1"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19650,
											"end": 19663,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19683,
											"end": 19690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "LT"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "KECCAK256"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "GT"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 23728,
											"end": 23738,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23749,
											"name": "DUP5"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 23790,
											"end": 23805,
											"name": "DUP6"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MLOAD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "CODECOPY"
										},
										{
											"begin": 23751,
											"end": 23762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 23763,
											"end": 23773,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "JUMPDEST"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "KECCAK256"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23777,
											"end": 23784,
											"name": "DUP11"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "KECCAK256"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "SLOAD"
										},
										{
											"begin": 23751,
											"end": 23789,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 23751,
											"end": 23789,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP3"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "JUMPDEST"
										},
										{
											"begin": 23719,
											"end": 23727,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "JUMPDEST"
										},
										{
											"begin": 23866,
											"end": 23870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23859,
											"end": 23870,
											"name": "SWAP1"
										},
										{
											"begin": 23859,
											"end": 23870,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 21065,
											"end": 21069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 21092,
											"end": 21102,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "JUMPDEST"
										},
										{
											"begin": 21106,
											"end": 21115,
											"name": "DUP5"
										},
										{
											"begin": 21117,
											"end": 21123,
											"name": "DUP5"
										},
										{
											"begin": 21082,
											"end": 21091,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "JUMPDEST"
										},
										{
											"begin": 21142,
											"end": 21146,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21135,
											"end": 21146,
											"name": "SWAP1"
										},
										{
											"begin": 21135,
											"end": 21146,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21306,
											"end": 21313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21344,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21345,
											"end": 21350,
											"name": "DUP5"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21352,
											"end": 21359,
											"name": "DUP4"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "SLOAD"
										},
										{
											"begin": 21326,
											"end": 21360,
											"name": "SWAP1"
										},
										{
											"begin": 21326,
											"end": 21360,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER"
										},
										{
											"begin": 778,
											"end": 795,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "JUMPDEST"
										},
										{
											"begin": 26875,
											"end": 26876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "AND"
										},
										{
											"begin": 26858,
											"end": 26863,
											"name": "DUP4"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "AND"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "EQ"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "ISZERO"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "JUMPI"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MLOAD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP3"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SUB"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP3"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "CODECOPY"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "POP"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "POP"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MLOAD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SUB"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "REVERT"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "JUMPDEST"
										},
										{
											"begin": 26956,
											"end": 26957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "AND"
										},
										{
											"begin": 26937,
											"end": 26944,
											"name": "DUP3"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "AND"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "EQ"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "ISZERO"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "JUMPI"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MLOAD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP3"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SUB"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP3"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "CODECOPY"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "POP"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "POP"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MLOAD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SUB"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "REVERT"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "JUMPDEST"
										},
										{
											"begin": 27040,
											"end": 27046,
											"name": "DUP1"
										},
										{
											"begin": 27010,
											"end": 27021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27022,
											"end": 27027,
											"name": "DUP6"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "KECCAK256"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27029,
											"end": 27036,
											"name": "DUP5"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "KECCAK256"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "SSTORE"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "POP"
										},
										{
											"begin": 27078,
											"end": 27085,
											"name": "DUP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "AND"
										},
										{
											"begin": 27071,
											"end": 27076,
											"name": "DUP4"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "AND"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 27087,
											"end": 27093,
											"name": "DUP4"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MLOAD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP3"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MSTORE"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "ADD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "POP"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "POP"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MLOAD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SUB"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "LOG3"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "JUMPDEST"
										},
										{
											"begin": 24492,
											"end": 24493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "AND"
										},
										{
											"begin": 24474,
											"end": 24480,
											"name": "DUP4"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "AND"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "EQ"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "ISZERO"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "JUMPI"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MLOAD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP3"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SUB"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP3"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "CODECOPY"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "POP"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "POP"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MLOAD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SUB"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "REVERT"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "JUMPDEST"
										},
										{
											"begin": 24576,
											"end": 24577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "AND"
										},
										{
											"begin": 24555,
											"end": 24564,
											"name": "DUP3"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "AND"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "EQ"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "ISZERO"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "JUMPI"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MLOAD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP3"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SUB"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP3"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "CODECOPY"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "POP"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "POP"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MLOAD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SUB"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "REVERT"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "JUMPDEST"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 24652,
											"end": 24658,
											"name": "DUP4"
										},
										{
											"begin": 24660,
											"end": 24669,
											"name": "DUP4"
										},
										{
											"begin": 24671,
											"end": 24677,
											"name": "DUP4"
										},
										{
											"begin": 24631,
											"end": 24651,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "JUMPDEST"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 24733,
											"end": 24739,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MLOAD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "CODECOPY"
										},
										{
											"begin": 24711,
											"end": 24720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP1"
										},
										{
											"begin": 24721,
											"end": 24727,
											"name": "DUP8"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "KECCAK256"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "SLOAD"
										},
										{
											"begin": 24711,
											"end": 24732,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 24711,
											"end": 24732,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP3"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "JUMPDEST"
										},
										{
											"begin": 24691,
											"end": 24700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP1"
										},
										{
											"begin": 24701,
											"end": 24707,
											"name": "DUP6"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "AND"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "AND"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "MSTORE"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "ADD"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "SWAP1"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "MSTORE"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "ADD"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "KECCAK256"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "SWAP1"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "SSTORE"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "POP"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 24841,
											"end": 24847,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP1"
										},
										{
											"begin": 24826,
											"end": 24835,
											"name": "DUP6"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "MSTORE"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "ADD"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "MSTORE"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "ADD"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "KECCAK256"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "SLOAD"
										},
										{
											"begin": 24816,
											"end": 24840,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 24816,
											"end": 24840,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "SWAP2"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "JUMPDEST"
										},
										{
											"begin": 24793,
											"end": 24802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP1"
										},
										{
											"begin": 24803,
											"end": 24812,
											"name": "DUP5"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "AND"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "AND"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "MSTORE"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "ADD"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "SWAP1"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "MSTORE"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "ADD"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "KECCAK256"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "SWAP1"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "SSTORE"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "POP"
										},
										{
											"begin": 24881,
											"end": 24890,
											"name": "DUP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "AND"
										},
										{
											"begin": 24873,
											"end": 24879,
											"name": "DUP4"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "AND"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24892,
											"end": 24898,
											"name": "DUP4"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MLOAD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP3"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MSTORE"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "ADD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "POP"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "POP"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MLOAD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SUB"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "LOG3"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "JUMPDEST"
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "DUP4"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "DUP4"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "GT"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "ISZERO"
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPI"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ISZERO"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPI"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "EXP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "NOT"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "REVERT"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5828,
											"end": 5837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "DUP4"
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "DUP6"
										},
										{
											"begin": 5840,
											"end": 5845,
											"name": "SUB"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "SWAP1"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "POP"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "DUP1"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "SWAP2"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "POP"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "SWAP4"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "SWAP3"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 4837,
											"end": 4844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4866,
											"name": "DUP1"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "DUP3"
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "DUP5"
										},
										{
											"begin": 4869,
											"end": 4874,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "SWAP1"
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "POP"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "DUP4"
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "DUP2"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "LT"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "ISZERO"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP3"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SUB"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP3"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SUB"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "REVERT"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "JUMPDEST"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP1"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SWAP2"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "SWAP3"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "SWAP2"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "JUMPDEST"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface.  * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}.  * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms].  * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications.  * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.      * To select a different value for {decimals}, use {_setupDecimals}.      * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 450,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 456,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 458,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 460,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 462,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/whore.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 923,
								"contract": "contracts/whore.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/whore.sol\":4516:9235  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/whore.sol\":4516:9235  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066493f541b909cbf3b1d7cbb745eded46ac48d09015db08d9d2f70e836cae2e964736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066493f541b909cbf3b1d7cbb745eded46ac48d09015db08d9d2f70e836cae2e964736f6c63430006000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x493F541B909CBF EXTCODESIZE SAR PUSH29 0xBB745EDED46AC48D09015DB08D9D2F70E836CAE2E964736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "4516:4719:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066493f541b909cbf3b1d7cbb745eded46ac48d09015db08d9d2f70e836cae2e964736f6c63430006000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x493F541B909CBF EXTCODESIZE SAR PUSH29 0xBB745EDED46AC48D09015DB08D9D2F70E836CAE2E964736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "4516:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4516,
									"end": 9235,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4516,
									"end": 9235,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066493f541b909cbf3b1d7cbb745eded46ac48d09015db08d9d2f70e836cae2e964736f6c63430006000033",
									".code": [
										{
											"begin": 4516,
											"end": 9235,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "ADDRESS"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "EQ"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "MSTORE"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "DUP1"
										},
										{
											"begin": 4516,
											"end": 9235,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"VERSAToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x566572736147616d657300000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5645525341000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/whore.sol\":19275:19279  name */\n  dup2\n    /* \"contracts/whore.sol\":19267:19272  _name */\n  0x03\n    /* \"contracts/whore.sol\":19267:19279  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/whore.sol\":19300:19306  symbol */\n  dup1\n    /* \"contracts/whore.sol\":19290:19297  _symbol */\n  0x04\n    /* \"contracts/whore.sol\":19290:19306  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/whore.sol\":19329:19331  18 */\n  0x12\n    /* \"contracts/whore.sol\":19317:19326  _decimals */\n  0x05\n  0x00\n    /* \"contracts/whore.sol\":19317:19331  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/whore.sol\":19194:19339  constructor (string memory name, string memory symbol) public {\r... */\n  pop\n  pop\n    /* \"contracts/whore.sol\":29111:29128  address msgSender */\n  0x00\n    /* \"contracts/whore.sol\":29131:29143  _msgSender() */\n  tag_8\n    /* \"contracts/whore.sol\":29131:29141  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/whore.sol\":29131:29143  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/whore.sol\":29111:29143  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/whore.sol\":29163:29172  msgSender */\n  dup1\n    /* \"contracts/whore.sol\":29154:29160  _owner */\n  0x05\n  0x01\n    /* \"contracts/whore.sol\":29154:29172  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/whore.sol\":29221:29230  msgSender */\n  dup1\n    /* \"contracts/whore.sol\":29188:29231  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/whore.sol\":29217:29218  0 */\n  0x00\n    /* \"contracts/whore.sol\":29188:29231  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/whore.sol\":29076:29239  constructor () internal {\r... */\n  pop\n    /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\n  jump(tag_10)\n    /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_9:\n    /* \"contracts/whore.sol\":750:765  address payable */\n  0x00\n    /* \"contracts/whore.sol\":785:795  msg.sender */\n  caller\n    /* \"contracts/whore.sol\":778:795  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\ntag_5:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_13\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_14:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_14)\ntag_15:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n  swap1\n  jump\t// out\ntag_17:\n  tag_18\n  swap2\n  swap1\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\ntag_18:\n  swap1\n  jump\t// out\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x39509351\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_34:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_34)\n    tag_36:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":31963:32085  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":30783:30945  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/whore.sol\":30783:30945  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/whore.sol\":32946:33095  function delegates(address delegator)\r... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/whore.sol\":32946:33095  function delegates(address delegator)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":33239:33343  function delegate(address delegatee) external {\r... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"contracts/whore.sol\":33239:33343  function delegate(address delegatee) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/whore.sol\":31841:31890  mapping (address => uint32) public numCheckpoints */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/whore.sol\":31841:31890  mapping (address => uint32) public numCheckpoints */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":29962:30110  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/whore.sol\":35845:37099  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n        /* \"contracts/whore.sol\":35845:37099  function getPriorVotes(address account, uint blockNumber)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":32377:32416  mapping (address => uint) public nonces */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"contracts/whore.sol\":32377:32416  mapping (address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":29320:29399  function owner() public view returns (address) {\r... */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_80:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_80)\n    tag_82:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_83:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_21:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":35159:35414  function getCurrentVotes(address account)\r... */\n    tag_22:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_91:\n        /* \"contracts/whore.sol\":35159:35414  function getCurrentVotes(address account)\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":33777:34958  function delegateBySig(\r... */\n    tag_23:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"contracts/whore.sol\":33777:34958  function delegateBySig(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_24:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_97:\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":32179:32296  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":31702:31772  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_26:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_102:\n        /* \"contracts/whore.sol\":31702:31772  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/whore.sol\":30265:30509  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_27:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_105:\n        /* \"contracts/whore.sol\":30265:30509  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n    tag_33:\n        /* \"contracts/whore.sol\":19446:19459  string memory */\n      0x60\n        /* \"contracts/whore.sol\":19479:19484  _name */\n      0x03\n        /* \"contracts/whore.sol\":19472:19484  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/whore.sol\":19409:19492  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/whore.sol\":21598:21602  bool */\n      0x00\n        /* \"contracts/whore.sol\":21615:21654  _approve(_msgSender(), spender, amount) */\n      tag_112\n        /* \"contracts/whore.sol\":21624:21636  _msgSender() */\n      tag_113\n        /* \"contracts/whore.sol\":21624:21634  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":21624:21636  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/whore.sol\":21638:21645  spender */\n      dup5\n        /* \"contracts/whore.sol\":21647:21653  amount */\n      dup5\n        /* \"contracts/whore.sol\":21615:21623  _approve */\n      tag_115\n        /* \"contracts/whore.sol\":21615:21654  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/whore.sol\":21672:21676  true */\n      0x01\n        /* \"contracts/whore.sol\":21665:21676  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":21515:21684  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n    tag_42:\n        /* \"contracts/whore.sol\":20537:20544  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":20564:20576  _totalSupply */\n      sload(0x02)\n        /* \"contracts/whore.sol\":20557:20576  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20484:20584  function totalSupply() public view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":31963:32085  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_44:\n        /* \"contracts/whore.sol\":32005:32085  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/whore.sol\":31963:32085  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_47:\n        /* \"contracts/whore.sol\":22264:22268  bool */\n      0x00\n        /* \"contracts/whore.sol\":22281:22317  _transfer(sender, recipient, amount) */\n      tag_118\n        /* \"contracts/whore.sol\":22291:22297  sender */\n      dup5\n        /* \"contracts/whore.sol\":22299:22308  recipient */\n      dup5\n        /* \"contracts/whore.sol\":22310:22316  amount */\n      dup5\n        /* \"contracts/whore.sol\":22281:22290  _transfer */\n      tag_119\n        /* \"contracts/whore.sol\":22281:22317  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/whore.sol\":22328:22449  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_120\n        /* \"contracts/whore.sol\":22337:22343  sender */\n      dup5\n        /* \"contracts/whore.sol\":22345:22357  _msgSender() */\n      tag_121\n        /* \"contracts/whore.sol\":22345:22355  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":22345:22357  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_122\n        /* \"contracts/whore.sol\":22397:22403  amount */\n      dup6\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":22359:22370  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":22359:22378  _allowances[sender] */\n      0x00\n        /* \"contracts/whore.sol\":22371:22377  sender */\n      dup12\n        /* \"contracts/whore.sol\":22359:22378  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":22359:22392  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":22379:22391  _msgSender() */\n      tag_123\n        /* \"contracts/whore.sol\":22379:22389  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":22379:22391  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/whore.sol\":22359:22392  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":22359:22396  _allowances[sender][_msgSender()].sub */\n      tag_124\n      swap1\n        /* \"contracts/whore.sol\":22359:22448  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/whore.sol\":22328:22336  _approve */\n      tag_115\n        /* \"contracts/whore.sol\":22328:22449  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/whore.sol\":22467:22471  true */\n      0x01\n        /* \"contracts/whore.sol\":22460:22471  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":22158:22479  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n    tag_49:\n        /* \"contracts/whore.sol\":20377:20382  uint8 */\n      0x00\n        /* \"contracts/whore.sol\":20402:20411  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/whore.sol\":20395:20411  return _decimals */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20336:20419  function decimals() public view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_52:\n        /* \"contracts/whore.sol\":22976:22980  bool */\n      0x00\n        /* \"contracts/whore.sol\":22993:23076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_127\n        /* \"contracts/whore.sol\":23002:23014  _msgSender() */\n      tag_128\n        /* \"contracts/whore.sol\":23002:23012  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":23002:23014  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/whore.sol\":23016:23023  spender */\n      dup5\n        /* \"contracts/whore.sol\":23025:23075  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_129\n        /* \"contracts/whore.sol\":23064:23074  addedValue */\n      dup6\n        /* \"contracts/whore.sol\":23025:23036  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":23025:23050  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":23037:23049  _msgSender() */\n      tag_130\n        /* \"contracts/whore.sol\":23037:23047  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":23037:23049  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/whore.sol\":23025:23050  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":23025:23059  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/whore.sol\":23051:23058  spender */\n      dup10\n        /* \"contracts/whore.sol\":23025:23059  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":23025:23063  _allowances[_msgSender()][spender].add */\n      tag_131\n      swap1\n        /* \"contracts/whore.sol\":23025:23075  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"contracts/whore.sol\":22993:23001  _approve */\n      tag_115\n        /* \"contracts/whore.sol\":22993:23076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/whore.sol\":23094:23098  true */\n      0x01\n        /* \"contracts/whore.sol\":23087:23098  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":22888:23106  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":30783:30945  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_55:\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      tag_133\n        /* \"contracts/whore.sol\":29542:29552  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29538  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":29524:29591  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/whore.sol\":30855:30874  _mint(_to, _amount) */\n      tag_136\n        /* \"contracts/whore.sol\":30861:30864  _to */\n      dup3\n        /* \"contracts/whore.sol\":30866:30873  _amount */\n      dup3\n        /* \"contracts/whore.sol\":30855:30860  _mint */\n      tag_137\n        /* \"contracts/whore.sol\":30855:30874  _mint(_to, _amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/whore.sol\":30885:30937  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_138\n        /* \"contracts/whore.sol\":30908:30909  0 */\n      0x00\n        /* \"contracts/whore.sol\":30912:30922  _delegates */\n      0x06\n        /* \"contracts/whore.sol\":30912:30927  _delegates[_to] */\n      0x00\n        /* \"contracts/whore.sol\":30923:30926  _to */\n      dup6\n        /* \"contracts/whore.sol\":30912:30927  _delegates[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30929:30936  _amount */\n      dup4\n        /* \"contracts/whore.sol\":30885:30899  _moveDelegates */\n      tag_139\n        /* \"contracts/whore.sol\":30885:30937  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/whore.sol\":30783:30945  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":32946:33095  function delegates(address delegator)\r... */\n    tag_58:\n        /* \"contracts/whore.sol\":33034:33041  address */\n      0x00\n        /* \"contracts/whore.sol\":33066:33076  _delegates */\n      0x06\n        /* \"contracts/whore.sol\":33066:33087  _delegates[delegator] */\n      0x00\n        /* \"contracts/whore.sol\":33077:33086  delegator */\n      dup4\n        /* \"contracts/whore.sol\":33066:33087  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":33059:33087  return _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":32946:33095  function delegates(address delegator)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":33239:33343  function delegate(address delegatee) external {\r... */\n    tag_61:\n        /* \"contracts/whore.sol\":33303:33335  _delegate(msg.sender, delegatee) */\n      tag_142\n        /* \"contracts/whore.sol\":33313:33323  msg.sender */\n      caller\n        /* \"contracts/whore.sol\":33325:33334  delegatee */\n      dup3\n        /* \"contracts/whore.sol\":33303:33312  _delegate */\n      tag_143\n        /* \"contracts/whore.sol\":33303:33335  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/whore.sol\":33239:33343  function delegate(address delegatee) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":31841:31890  mapping (address => uint32) public numCheckpoints */\n    tag_64:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n    tag_67:\n        /* \"contracts/whore.sol\":20713:20720  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":20740:20749  _balances */\n      dup1\n        /* \"contracts/whore.sol\":20740:20758  _balances[account] */\n      0x00\n        /* \"contracts/whore.sol\":20750:20757  account */\n      dup4\n        /* \"contracts/whore.sol\":20740:20758  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":20733:20758  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20647:20766  function balanceOf(address account) public view override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":29962:30110  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_69:\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      tag_146\n        /* \"contracts/whore.sol\":29542:29552  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29538  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":29524:29591  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/whore.sol\":30069:30070  0 */\n      0x00\n        /* \"contracts/whore.sol\":30032:30072  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30053:30059  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30032:30072  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":30100:30101  0 */\n      0x00\n        /* \"contracts/whore.sol\":30083:30089  _owner */\n      0x05\n      0x01\n        /* \"contracts/whore.sol\":30083:30102  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":29962:30110  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/whore.sol\":35845:37099  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_72:\n        /* \"contracts/whore.sol\":35953:35960  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":36000:36012  block.number */\n      number\n        /* \"contracts/whore.sol\":35986:35997  blockNumber */\n      dup3\n        /* \"contracts/whore.sol\":35986:36012  blockNumber < block.number */\n      lt\n        /* \"contracts/whore.sol\":35978:36057  require(blockNumber < block.number, \"VERSA::getPriorVotes: not yet determined\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_018fc8af80b4a731c3ce32406a52798414ad910485cbdce7f8efa30829d690ff\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/whore.sol\":36070:36089  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/whore.sol\":36092:36106  numCheckpoints */\n      0x08\n        /* \"contracts/whore.sol\":36092:36115  numCheckpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":36107:36114  account */\n      dup6\n        /* \"contracts/whore.sol\":36092:36115  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":36070:36115  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":36146:36147  0 */\n      0x00\n        /* \"contracts/whore.sol\":36130:36142  nCheckpoints */\n      dup2\n        /* \"contracts/whore.sol\":36130:36147  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":36126:36184  if (nCheckpoints == 0) {\r... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/whore.sol\":36171:36172  0 */\n      0x00\n        /* \"contracts/whore.sol\":36164:36172  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"contracts/whore.sol\":36126:36184  if (nCheckpoints == 0) {\r... */\n    tag_151:\n        /* \"contracts/whore.sol\":36296:36307  blockNumber */\n      dup3\n        /* \"contracts/whore.sol\":36244:36255  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":36244:36264  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":36256:36263  account */\n      dup7\n        /* \"contracts/whore.sol\":36244:36264  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36244:36282  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/whore.sol\":36280:36281  1 */\n      0x01\n        /* \"contracts/whore.sol\":36265:36277  nCheckpoints */\n      dup5\n        /* \"contracts/whore.sol\":36265:36281  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":36244:36282  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36244:36292  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":36244:36307  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":36240:36387  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n      tag_152\n      jumpi\n        /* \"contracts/whore.sol\":36331:36342  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":36331:36351  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":36343:36350  account */\n      dup6\n        /* \"contracts/whore.sol\":36331:36351  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36331:36369  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/whore.sol\":36367:36368  1 */\n      0x01\n        /* \"contracts/whore.sol\":36352:36364  nCheckpoints */\n      dup4\n        /* \"contracts/whore.sol\":36352:36368  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":36331:36369  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36331:36375  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/whore.sol\":36324:36375  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"contracts/whore.sol\":36240:36387  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n    tag_152:\n        /* \"contracts/whore.sol\":36484:36495  blockNumber */\n      dup3\n        /* \"contracts/whore.sol\":36448:36459  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":36448:36468  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":36460:36467  account */\n      dup7\n        /* \"contracts/whore.sol\":36448:36468  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36448:36471  checkpoints[account][0] */\n      0x00\n        /* \"contracts/whore.sol\":36469:36470  0 */\n      dup1\n        /* \"contracts/whore.sol\":36448:36471  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36448:36481  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":36448:36495  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":36444:36532  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/whore.sol\":36519:36520  0 */\n      0x00\n        /* \"contracts/whore.sol\":36512:36520  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"contracts/whore.sol\":36444:36532  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n    tag_153:\n        /* \"contracts/whore.sol\":36544:36556  uint32 lower */\n      0x00\n        /* \"contracts/whore.sol\":36559:36560  0 */\n      dup1\n        /* \"contracts/whore.sol\":36544:36560  uint32 lower = 0 */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":36571:36583  uint32 upper */\n      0x00\n        /* \"contracts/whore.sol\":36601:36602  1 */\n      0x01\n        /* \"contracts/whore.sol\":36586:36598  nCheckpoints */\n      dup4\n        /* \"contracts/whore.sol\":36586:36602  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":36571:36602  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":36613:37041  while (upper > lower) {\r... */\n    tag_154:\n        /* \"contracts/whore.sol\":36628:36633  lower */\n      dup2\n        /* \"contracts/whore.sol\":36620:36633  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":36620:36625  upper */\n      dup2\n        /* \"contracts/whore.sol\":36620:36633  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":36613:37041  while (upper > lower) {\r... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/whore.sol\":36650:36663  uint32 center */\n      0x00\n        /* \"contracts/whore.sol\":36692:36693  2 */\n      0x02\n        /* \"contracts/whore.sol\":36683:36688  lower */\n      dup4\n        /* \"contracts/whore.sol\":36675:36680  upper */\n      dup4\n        /* \"contracts/whore.sol\":36675:36688  upper - lower */\n      sub\n        /* \"contracts/whore.sol\":36674:36693  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      div\n        /* \"contracts/whore.sol\":36666:36671  upper */\n      dup3\n        /* \"contracts/whore.sol\":36666:36693  upper - (upper - lower) / 2 */\n      sub\n        /* \"contracts/whore.sol\":36650:36693  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":36735:36755  Checkpoint memory cp */\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/whore.sol\":36758:36769  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":36758:36778  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":36770:36777  account */\n      dup10\n        /* \"contracts/whore.sol\":36758:36778  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36758:36786  checkpoints[account][center] */\n      0x00\n        /* \"contracts/whore.sol\":36779:36785  center */\n      dup4\n        /* \"contracts/whore.sol\":36758:36786  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":36735:36786  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/whore.sol\":36821:36832  blockNumber */\n      dup7\n        /* \"contracts/whore.sol\":36805:36807  cp */\n      dup2\n        /* \"contracts/whore.sol\":36805:36817  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/whore.sol\":36805:36832  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":36801:37030  if (cp.fromBlock == blockNumber) {\r... */\n      iszero\n      tag_159\n      jumpi\n        /* \"contracts/whore.sol\":36860:36862  cp */\n      dup1\n        /* \"contracts/whore.sol\":36860:36868  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/whore.sol\":36853:36868  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_149)\n        /* \"contracts/whore.sol\":36801:37030  if (cp.fromBlock == blockNumber) {\r... */\n    tag_159:\n        /* \"contracts/whore.sol\":36909:36920  blockNumber */\n      dup7\n        /* \"contracts/whore.sol\":36894:36896  cp */\n      dup2\n        /* \"contracts/whore.sol\":36894:36906  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/whore.sol\":36894:36920  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/whore.sol\":36890:37030  if (cp.fromBlock < blockNumber) {\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/whore.sol\":36949:36955  center */\n      dup2\n        /* \"contracts/whore.sol\":36941:36955  lower = center */\n      swap4\n      pop\n        /* \"contracts/whore.sol\":36890:37030  if (cp.fromBlock < blockNumber) {\r... */\n      jump(tag_162)\n    tag_161:\n        /* \"contracts/whore.sol\":37013:37014  1 */\n      0x01\n        /* \"contracts/whore.sol\":37004:37010  center */\n      dup3\n        /* \"contracts/whore.sol\":37004:37014  center - 1 */\n      sub\n        /* \"contracts/whore.sol\":36996:37014  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/whore.sol\":36890:37030  if (cp.fromBlock < blockNumber) {\r... */\n    tag_162:\n        /* \"contracts/whore.sol\":36613:37041  while (upper > lower) {\r... */\n      pop\n      pop\n      jump(tag_154)\n    tag_155:\n        /* \"contracts/whore.sol\":37058:37069  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":37058:37078  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":37070:37077  account */\n      dup8\n        /* \"contracts/whore.sol\":37058:37078  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":37058:37085  checkpoints[account][lower] */\n      0x00\n        /* \"contracts/whore.sol\":37079:37084  lower */\n      dup4\n        /* \"contracts/whore.sol\":37058:37085  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":37058:37091  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/whore.sol\":37051:37091  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/whore.sol\":35845:37099  function getPriorVotes(address account, uint blockNumber)\r... */\n    tag_149:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":32377:32416  mapping (address => uint) public nonces */\n    tag_75:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/whore.sol\":29320:29399  function owner() public view returns (address) {\r... */\n    tag_77:\n        /* \"contracts/whore.sol\":29358:29365  address */\n      0x00\n        /* \"contracts/whore.sol\":29385:29391  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29378:29391  return _owner */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":29320:29399  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n    tag_79:\n        /* \"contracts/whore.sol\":19650:19663  string memory */\n      0x60\n        /* \"contracts/whore.sol\":19683:19690  _symbol */\n      0x04\n        /* \"contracts/whore.sol\":19676:19690  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/whore.sol\":19611:19698  function symbol() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_86:\n        /* \"contracts/whore.sol\":23702:23706  bool */\n      0x00\n        /* \"contracts/whore.sol\":23719:23848  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_169\n        /* \"contracts/whore.sol\":23728:23740  _msgSender() */\n      tag_170\n        /* \"contracts/whore.sol\":23728:23738  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":23728:23740  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/whore.sol\":23742:23749  spender */\n      dup5\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_171\n        /* \"contracts/whore.sol\":23790:23805  subtractedValue */\n      dup6\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":23751:23762  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":23751:23776  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/whore.sol\":23763:23775  _msgSender() */\n      tag_172\n        /* \"contracts/whore.sol\":23763:23773  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":23763:23775  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/whore.sol\":23751:23776  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":23751:23785  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/whore.sol\":23777:23784  spender */\n      dup11\n        /* \"contracts/whore.sol\":23751:23785  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":23751:23789  _allowances[_msgSender()][spender].sub */\n      tag_124\n      swap1\n        /* \"contracts/whore.sol\":23751:23847  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/whore.sol\":23719:23727  _approve */\n      tag_115\n        /* \"contracts/whore.sol\":23719:23848  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/whore.sol\":23866:23870  true */\n      0x01\n        /* \"contracts/whore.sol\":23859:23870  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":23609:23878  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_89:\n        /* \"contracts/whore.sol\":21065:21069  bool */\n      0x00\n        /* \"contracts/whore.sol\":21082:21124  _transfer(_msgSender(), recipient, amount) */\n      tag_174\n        /* \"contracts/whore.sol\":21092:21104  _msgSender() */\n      tag_175\n        /* \"contracts/whore.sol\":21092:21102  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":21092:21104  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/whore.sol\":21106:21115  recipient */\n      dup5\n        /* \"contracts/whore.sol\":21117:21123  amount */\n      dup5\n        /* \"contracts/whore.sol\":21082:21091  _transfer */\n      tag_119\n        /* \"contracts/whore.sol\":21082:21124  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/whore.sol\":21142:21146  true */\n      0x01\n        /* \"contracts/whore.sol\":21135:21146  return true */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":20979:21154  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":35159:35414  function getCurrentVotes(address account)\r... */\n    tag_92:\n        /* \"contracts/whore.sol\":35251:35258  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":35276:35295  uint32 nCheckpoints */\n      dup1\n        /* \"contracts/whore.sol\":35298:35312  numCheckpoints */\n      0x08\n        /* \"contracts/whore.sol\":35298:35321  numCheckpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":35313:35320  account */\n      dup5\n        /* \"contracts/whore.sol\":35298:35321  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":35276:35321  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":35354:35355  0 */\n      0x00\n        /* \"contracts/whore.sol\":35339:35351  nCheckpoints */\n      dup2\n        /* \"contracts/whore.sol\":35339:35355  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":35339:35406  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_177\n      jumpi\n        /* \"contracts/whore.sol\":35405:35406  0 */\n      0x00\n        /* \"contracts/whore.sol\":35339:35406  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_178)\n    tag_177:\n        /* \"contracts/whore.sol\":35358:35369  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":35358:35378  checkpoints[account] */\n      0x00\n        /* \"contracts/whore.sol\":35370:35377  account */\n      dup5\n        /* \"contracts/whore.sol\":35358:35378  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":35358:35396  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/whore.sol\":35394:35395  1 */\n      0x01\n        /* \"contracts/whore.sol\":35379:35391  nCheckpoints */\n      dup4\n        /* \"contracts/whore.sol\":35379:35395  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":35358:35396  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":35358:35402  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/whore.sol\":35339:35406  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_178:\n        /* \"contracts/whore.sol\":35332:35406  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":35159:35414  function getCurrentVotes(address account)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":33777:34958  function delegateBySig(\r... */\n    tag_95:\n        /* \"contracts/whore.sol\":33970:33993  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/whore.sol\":32005:32085  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/whore.sol\":34099:34105  name() */\n      tag_180\n        /* \"contracts/whore.sol\":34099:34103  name */\n      tag_33\n        /* \"contracts/whore.sol\":34099:34105  name() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/whore.sol\":34083:34107  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/whore.sol\":34126:34138  getChainId() */\n      tag_181\n        /* \"contracts/whore.sol\":34126:34136  getChainId */\n      tag_182\n        /* \"contracts/whore.sol\":34126:34138  getChainId() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/whore.sol\":34165:34169  this */\n      address\n        /* \"contracts/whore.sol\":34020:34185  abi.encode(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/whore.sol\":34020:34185  abi.encode(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/whore.sol\":33996:34196  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/whore.sol\":33970:34196  bytes32 domainSeparator = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":34209:34227  bytes32 structHash */\n      0x00\n        /* \"contracts/whore.sol\":32225:32296  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/whore.sol\":34321:34330  delegatee */\n      dup9\n        /* \"contracts/whore.sol\":34349:34354  nonce */\n      dup9\n        /* \"contracts/whore.sol\":34373:34379  expiry */\n      dup9\n        /* \"contracts/whore.sol\":34254:34394  abi.encode(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/whore.sol\":34254:34394  abi.encode(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/whore.sol\":34230:34405  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/whore.sol\":34209:34405  bytes32 structHash = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":34418:34432  bytes32 digest */\n      0x00\n        /* \"contracts/whore.sol\":34523:34538  domainSeparator */\n      dup3\n        /* \"contracts/whore.sol\":34557:34567  structHash */\n      dup3\n        /* \"contracts/whore.sol\":34459:34582  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/whore.sol\":34459:34582  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/whore.sol\":34435:34593  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/whore.sol\":34418:34593  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":34606:34623  address signatory */\n      0x00\n        /* \"contracts/whore.sol\":34626:34652  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/whore.sol\":34636:34642  digest */\n      dup3\n        /* \"contracts/whore.sol\":34644:34645  v */\n      dup9\n        /* \"contracts/whore.sol\":34647:34648  r */\n      dup9\n        /* \"contracts/whore.sol\":34650:34651  s */\n      dup9\n        /* \"contracts/whore.sol\":34626:34652  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_184:\n        /* \"contracts/whore.sol\":34626:34652  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/whore.sol\":34606:34652  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":34692:34693  0 */\n      0x00\n        /* \"contracts/whore.sol\":34671:34694  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":34671:34680  signatory */\n      dup2\n        /* \"contracts/whore.sol\":34671:34694  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":34663:34738  require(signatory != address(0), \"VERSA::delegateBySig: invalid signature\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c7a1ba371af039472495f9bd83d8f06dfd4a777a3cf4068dfd1d7962f1fe8006\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/whore.sol\":34766:34772  nonces */\n      0x09\n        /* \"contracts/whore.sol\":34766:34783  nonces[signatory] */\n      0x00\n        /* \"contracts/whore.sol\":34773:34782  signatory */\n      dup3\n        /* \"contracts/whore.sol\":34766:34783  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/whore.sol\":34766:34785  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/whore.sol\":34757:34762  nonce */\n      dup10\n        /* \"contracts/whore.sol\":34757:34785  nonce == nonces[signatory]++ */\n      eq\n        /* \"contracts/whore.sol\":34749:34825  require(nonce == nonces[signatory]++, \"VERSA::delegateBySig: invalid nonce\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e7cf3b87e0cff2b4ac778fcc8c3ce968f02c806baec2b92c1c391d868475f013\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/whore.sol\":34851:34857  expiry */\n      dup8\n        /* \"contracts/whore.sol\":34844:34847  now */\n      timestamp\n        /* \"contracts/whore.sol\":34844:34857  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/whore.sol\":34836:34901  require(now <= expiry, \"VERSA::delegateBySig: signature expired\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_35bbd66a404ecab5400ea987b29286fde22b2e9272c10e62471021d1506fe2c1\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/whore.sol\":34919:34950  _delegate(signatory, delegatee) */\n      tag_188\n        /* \"contracts/whore.sol\":34929:34938  signatory */\n      dup2\n        /* \"contracts/whore.sol\":34940:34949  delegatee */\n      dup12\n        /* \"contracts/whore.sol\":34919:34928  _delegate */\n      tag_143\n        /* \"contracts/whore.sol\":34919:34950  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/whore.sol\":34912:34950  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/whore.sol\":33777:34958  function delegateBySig(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_98:\n        /* \"contracts/whore.sol\":21306:21313  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":21333:21344  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":21333:21351  _allowances[owner] */\n      0x00\n        /* \"contracts/whore.sol\":21345:21350  owner */\n      dup5\n        /* \"contracts/whore.sol\":21333:21351  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":21333:21360  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/whore.sol\":21352:21359  spender */\n      dup4\n        /* \"contracts/whore.sol\":21333:21360  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":21326:21360  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":21217:21368  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":32179:32296  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_100:\n        /* \"contracts/whore.sol\":32225:32296  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/whore.sol\":32179:32296  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/whore.sol\":31702:31772  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_103:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/whore.sol\":30265:30509  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_106:\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      tag_191\n        /* \"contracts/whore.sol\":29542:29552  _msgSender */\n      tag_114\n        /* \"contracts/whore.sol\":29542:29554  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29538  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":29532:29554  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":29524:29591  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/whore.sol\":30374:30375  0 */\n      0x00\n        /* \"contracts/whore.sol\":30354:30376  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30354:30362  newOwner */\n      dup2\n        /* \"contracts/whore.sol\":30354:30376  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":30346:30419  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/whore.sol\":30464:30472  newOwner */\n      dup1\n        /* \"contracts/whore.sol\":30435:30473  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30456:30462  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":30435:30473  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":30493:30501  newOwner */\n      dup1\n        /* \"contracts/whore.sol\":30484:30490  _owner */\n      0x05\n      0x01\n        /* \"contracts/whore.sol\":30484:30501  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":30265:30509  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_114:\n        /* \"contracts/whore.sol\":750:765  address payable */\n      0x00\n        /* \"contracts/whore.sol\":785:795  msg.sender */\n      caller\n        /* \"contracts/whore.sol\":778:795  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":697:803  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":26756:27102  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n    tag_115:\n        /* \"contracts/whore.sol\":26875:26876  0 */\n      0x00\n        /* \"contracts/whore.sol\":26858:26877  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":26858:26863  owner */\n      dup4\n        /* \"contracts/whore.sol\":26858:26877  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":26850:26918  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/whore.sol\":26956:26957  0 */\n      0x00\n        /* \"contracts/whore.sol\":26937:26958  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":26937:26944  spender */\n      dup3\n        /* \"contracts/whore.sol\":26937:26958  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":26929:26997  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/whore.sol\":27040:27046  amount */\n      dup1\n        /* \"contracts/whore.sol\":27010:27021  _allowances */\n      0x01\n        /* \"contracts/whore.sol\":27010:27028  _allowances[owner] */\n      0x00\n        /* \"contracts/whore.sol\":27022:27027  owner */\n      dup6\n        /* \"contracts/whore.sol\":27010:27028  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":27010:27037  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/whore.sol\":27029:27036  spender */\n      dup5\n        /* \"contracts/whore.sol\":27010:27037  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":27010:27046  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":27078:27085  spender */\n      dup2\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":27071:27076  owner */\n      dup4\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/whore.sol\":27087:27093  amount */\n      dup4\n        /* \"contracts/whore.sol\":27062:27094  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":26756:27102  function _approve(address owner, address spender, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":24368:24907  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n    tag_119:\n        /* \"contracts/whore.sol\":24492:24493  0 */\n      0x00\n        /* \"contracts/whore.sol\":24474:24494  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24474:24480  sender */\n      dup4\n        /* \"contracts/whore.sol\":24474:24494  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":24466:24536  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/whore.sol\":24576:24577  0 */\n      0x00\n        /* \"contracts/whore.sol\":24555:24578  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24555:24564  recipient */\n      dup3\n        /* \"contracts/whore.sol\":24555:24578  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":24547:24618  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/whore.sol\":24631:24678  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_202\n        /* \"contracts/whore.sol\":24652:24658  sender */\n      dup4\n        /* \"contracts/whore.sol\":24660:24669  recipient */\n      dup4\n        /* \"contracts/whore.sol\":24671:24677  amount */\n      dup4\n        /* \"contracts/whore.sol\":24631:24651  _beforeTokenTransfer */\n      tag_203\n        /* \"contracts/whore.sol\":24631:24678  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"contracts/whore.sol\":24733:24739  amount */\n      dup2\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":24711:24720  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24711:24728  _balances[sender] */\n      dup1\n        /* \"contracts/whore.sol\":24721:24727  sender */\n      dup8\n        /* \"contracts/whore.sol\":24711:24728  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":24711:24732  _balances[sender].sub */\n      tag_124\n      swap1\n        /* \"contracts/whore.sol\":24711:24782  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/whore.sol\":24691:24700  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24691:24708  _balances[sender] */\n      dup1\n        /* \"contracts/whore.sol\":24701:24707  sender */\n      dup6\n        /* \"contracts/whore.sol\":24691:24708  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":24691:24782  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":24816:24848  _balances[recipient].add(amount) */\n      tag_205\n        /* \"contracts/whore.sol\":24841:24847  amount */\n      dup2\n        /* \"contracts/whore.sol\":24816:24825  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24816:24836  _balances[recipient] */\n      dup1\n        /* \"contracts/whore.sol\":24826:24835  recipient */\n      dup6\n        /* \"contracts/whore.sol\":24816:24836  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":24816:24840  _balances[recipient].add */\n      tag_131\n      swap1\n        /* \"contracts/whore.sol\":24816:24848  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/whore.sol\":24793:24802  _balances */\n      0x00\n        /* \"contracts/whore.sol\":24793:24813  _balances[recipient] */\n      dup1\n        /* \"contracts/whore.sol\":24803:24812  recipient */\n      dup5\n        /* \"contracts/whore.sol\":24793:24813  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":24793:24848  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":24881:24890  recipient */\n      dup2\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":24873:24879  sender */\n      dup4\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/whore.sol\":24892:24898  amount */\n      dup4\n        /* \"contracts/whore.sol\":24864:24899  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":24368:24907  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":5682:5874  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_124:\n        /* \"contracts/whore.sol\":5768:5775  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":5801:5802  a */\n      dup4\n        /* \"contracts/whore.sol\":5796:5797  b */\n      dup4\n        /* \"contracts/whore.sol\":5796:5802  b <= a */\n      gt\n      iszero\n        /* \"contracts/whore.sol\":5804:5816  errorMessage */\n      dup3\n        /* \"contracts/whore.sol\":5788:5817  require(b <= a, errorMessage) */\n      swap1\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_208:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_208)\n    tag_210:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":5788:5817  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_211:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n      pop\n        /* \"contracts/whore.sol\":5828:5837  uint256 c */\n      0x00\n        /* \"contracts/whore.sol\":5844:5845  b */\n      dup4\n        /* \"contracts/whore.sol\":5840:5841  a */\n      dup6\n        /* \"contracts/whore.sol\":5840:5845  a - b */\n      sub\n        /* \"contracts/whore.sol\":5828:5845  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":5865:5866  c */\n      dup1\n        /* \"contracts/whore.sol\":5858:5866  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":5682:5874  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":4779:4960  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_131:\n        /* \"contracts/whore.sol\":4837:4844  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":4857:4866  uint256 c */\n      dup1\n        /* \"contracts/whore.sol\":4873:4874  b */\n      dup3\n        /* \"contracts/whore.sol\":4869:4870  a */\n      dup5\n        /* \"contracts/whore.sol\":4869:4874  a + b */\n      add\n        /* \"contracts/whore.sol\":4857:4874  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":4898:4899  a */\n      dup4\n        /* \"contracts/whore.sol\":4893:4894  c */\n      dup2\n        /* \"contracts/whore.sol\":4893:4899  c >= a */\n      lt\n      iszero\n        /* \"contracts/whore.sol\":4885:4931  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/whore.sol\":4951:4952  c */\n      dup1\n        /* \"contracts/whore.sol\":4944:4952  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":4779:4960  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":25188:25566  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_137:\n        /* \"contracts/whore.sol\":25291:25292  0 */\n      0x00\n        /* \"contracts/whore.sol\":25272:25293  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":25272:25279  account */\n      dup3\n        /* \"contracts/whore.sol\":25272:25293  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":25264:25329  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/whore.sol\":25342:25391  _beforeTokenTransfer(address(0), account, amount) */\n      tag_216\n        /* \"contracts/whore.sol\":25371:25372  0 */\n      0x00\n        /* \"contracts/whore.sol\":25375:25382  account */\n      dup4\n        /* \"contracts/whore.sol\":25384:25390  amount */\n      dup4\n        /* \"contracts/whore.sol\":25342:25362  _beforeTokenTransfer */\n      tag_203\n        /* \"contracts/whore.sol\":25342:25391  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/whore.sol\":25419:25443  _totalSupply.add(amount) */\n      tag_217\n        /* \"contracts/whore.sol\":25436:25442  amount */\n      dup2\n        /* \"contracts/whore.sol\":25419:25431  _totalSupply */\n      sload(0x02)\n        /* \"contracts/whore.sol\":25419:25435  _totalSupply.add */\n      tag_131\n      swap1\n        /* \"contracts/whore.sol\":25419:25443  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/whore.sol\":25404:25416  _totalSupply */\n      0x02\n        /* \"contracts/whore.sol\":25404:25443  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":25475:25505  _balances[account].add(amount) */\n      tag_218\n        /* \"contracts/whore.sol\":25498:25504  amount */\n      dup2\n        /* \"contracts/whore.sol\":25475:25484  _balances */\n      0x00\n        /* \"contracts/whore.sol\":25475:25493  _balances[account] */\n      dup1\n        /* \"contracts/whore.sol\":25485:25492  account */\n      dup6\n        /* \"contracts/whore.sol\":25475:25493  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/whore.sol\":25475:25497  _balances[account].add */\n      tag_131\n      swap1\n        /* \"contracts/whore.sol\":25475:25505  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/whore.sol\":25454:25463  _balances */\n      0x00\n        /* \"contracts/whore.sol\":25454:25472  _balances[account] */\n      dup1\n        /* \"contracts/whore.sol\":25464:25471  account */\n      dup5\n        /* \"contracts/whore.sol\":25454:25472  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":25454:25505  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":25542:25549  account */\n      dup2\n        /* \"contracts/whore.sol\":25521:25558  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":25538:25539  0 */\n      0x00\n        /* \"contracts/whore.sol\":25521:25558  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/whore.sol\":25551:25557  amount */\n      dup4\n        /* \"contracts/whore.sol\":25521:25558  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/whore.sol\":25188:25566  function _mint(address account, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":37554:38501  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r... */\n    tag_139:\n        /* \"contracts/whore.sol\":37660:37666  dstRep */\n      dup2\n        /* \"contracts/whore.sol\":37650:37666  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":37650:37656  srcRep */\n      dup4\n        /* \"contracts/whore.sol\":37650:37666  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/whore.sol\":37650:37680  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"contracts/whore.sol\":37679:37680  0 */\n      0x00\n        /* \"contracts/whore.sol\":37670:37676  amount */\n      dup2\n        /* \"contracts/whore.sol\":37670:37680  amount > 0 */\n      gt\n        /* \"contracts/whore.sol\":37650:37680  srcRep != dstRep && amount > 0 */\n    tag_220:\n        /* \"contracts/whore.sol\":37646:38494  if (srcRep != dstRep && amount > 0) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/whore.sol\":37719:37720  0 */\n      0x00\n        /* \"contracts/whore.sol\":37701:37721  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":37701:37707  srcRep */\n      dup4\n        /* \"contracts/whore.sol\":37701:37721  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":37697:38082  if (srcRep != address(0)) {\r... */\n      tag_222\n      jumpi\n        /* \"contracts/whore.sol\":37790:37806  uint32 srcRepNum */\n      0x00\n        /* \"contracts/whore.sol\":37809:37823  numCheckpoints */\n      0x08\n        /* \"contracts/whore.sol\":37809:37831  numCheckpoints[srcRep] */\n      0x00\n        /* \"contracts/whore.sol\":37824:37830  srcRep */\n      dup6\n        /* \"contracts/whore.sol\":37809:37831  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":37790:37831  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":37850:37867  uint256 srcRepOld */\n      0x00\n        /* \"contracts/whore.sol\":37882:37883  0 */\n      dup1\n        /* \"contracts/whore.sol\":37870:37879  srcRepNum */\n      dup3\n        /* \"contracts/whore.sol\":37870:37883  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":37870:37930  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_223\n      jumpi\n        /* \"contracts/whore.sol\":37929:37930  0 */\n      0x00\n        /* \"contracts/whore.sol\":37870:37930  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_224)\n    tag_223:\n        /* \"contracts/whore.sol\":37886:37897  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":37886:37905  checkpoints[srcRep] */\n      0x00\n        /* \"contracts/whore.sol\":37898:37904  srcRep */\n      dup7\n        /* \"contracts/whore.sol\":37886:37905  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":37886:37920  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"contracts/whore.sol\":37918:37919  1 */\n      0x01\n        /* \"contracts/whore.sol\":37906:37915  srcRepNum */\n      dup5\n        /* \"contracts/whore.sol\":37906:37919  srcRepNum - 1 */\n      sub\n        /* \"contracts/whore.sol\":37886:37920  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":37886:37926  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/whore.sol\":37870:37930  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_224:\n        /* \"contracts/whore.sol\":37850:37930  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":37949:37966  uint256 srcRepNew */\n      0x00\n        /* \"contracts/whore.sol\":37969:37990  srcRepOld.sub(amount) */\n      tag_225\n        /* \"contracts/whore.sol\":37983:37989  amount */\n      dup5\n        /* \"contracts/whore.sol\":37969:37978  srcRepOld */\n      dup4\n        /* \"contracts/whore.sol\":37969:37982  srcRepOld.sub */\n      tag_226\n      swap1\n        /* \"contracts/whore.sol\":37969:37990  srcRepOld.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/whore.sol\":37949:37990  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":38009:38066  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_227\n        /* \"contracts/whore.sol\":38026:38032  srcRep */\n      dup7\n        /* \"contracts/whore.sol\":38034:38043  srcRepNum */\n      dup5\n        /* \"contracts/whore.sol\":38045:38054  srcRepOld */\n      dup5\n        /* \"contracts/whore.sol\":38056:38065  srcRepNew */\n      dup5\n        /* \"contracts/whore.sol\":38009:38025  _writeCheckpoint */\n      tag_228\n        /* \"contracts/whore.sol\":38009:38066  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/whore.sol\":37697:38082  if (srcRep != address(0)) {\r... */\n      pop\n      pop\n      pop\n    tag_222:\n        /* \"contracts/whore.sol\":38120:38121  0 */\n      0x00\n        /* \"contracts/whore.sol\":38102:38122  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":38102:38108  dstRep */\n      dup3\n        /* \"contracts/whore.sol\":38102:38122  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":38098:38483  if (dstRep != address(0)) {\r... */\n      tag_229\n      jumpi\n        /* \"contracts/whore.sol\":38191:38207  uint32 dstRepNum */\n      0x00\n        /* \"contracts/whore.sol\":38210:38224  numCheckpoints */\n      0x08\n        /* \"contracts/whore.sol\":38210:38232  numCheckpoints[dstRep] */\n      0x00\n        /* \"contracts/whore.sol\":38225:38231  dstRep */\n      dup5\n        /* \"contracts/whore.sol\":38210:38232  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":38191:38232  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":38251:38268  uint256 dstRepOld */\n      0x00\n        /* \"contracts/whore.sol\":38283:38284  0 */\n      dup1\n        /* \"contracts/whore.sol\":38271:38280  dstRepNum */\n      dup3\n        /* \"contracts/whore.sol\":38271:38284  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":38271:38331  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_230\n      jumpi\n        /* \"contracts/whore.sol\":38330:38331  0 */\n      0x00\n        /* \"contracts/whore.sol\":38271:38331  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_231)\n    tag_230:\n        /* \"contracts/whore.sol\":38287:38298  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":38287:38306  checkpoints[dstRep] */\n      0x00\n        /* \"contracts/whore.sol\":38299:38305  dstRep */\n      dup6\n        /* \"contracts/whore.sol\":38287:38306  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38287:38321  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"contracts/whore.sol\":38319:38320  1 */\n      0x01\n        /* \"contracts/whore.sol\":38307:38316  dstRepNum */\n      dup5\n        /* \"contracts/whore.sol\":38307:38320  dstRepNum - 1 */\n      sub\n        /* \"contracts/whore.sol\":38287:38321  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38287:38327  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/whore.sol\":38271:38331  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_231:\n        /* \"contracts/whore.sol\":38251:38331  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":38350:38367  uint256 dstRepNew */\n      0x00\n        /* \"contracts/whore.sol\":38370:38391  dstRepOld.add(amount) */\n      tag_232\n        /* \"contracts/whore.sol\":38384:38390  amount */\n      dup5\n        /* \"contracts/whore.sol\":38370:38379  dstRepOld */\n      dup4\n        /* \"contracts/whore.sol\":38370:38383  dstRepOld.add */\n      tag_131\n      swap1\n        /* \"contracts/whore.sol\":38370:38391  dstRepOld.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/whore.sol\":38350:38391  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":38410:38467  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_233\n        /* \"contracts/whore.sol\":38427:38433  dstRep */\n      dup6\n        /* \"contracts/whore.sol\":38435:38444  dstRepNum */\n      dup5\n        /* \"contracts/whore.sol\":38446:38455  dstRepOld */\n      dup5\n        /* \"contracts/whore.sol\":38457:38466  dstRepNew */\n      dup5\n        /* \"contracts/whore.sol\":38410:38426  _writeCheckpoint */\n      tag_228\n        /* \"contracts/whore.sol\":38410:38467  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/whore.sol\":38098:38483  if (dstRep != address(0)) {\r... */\n      pop\n      pop\n      pop\n    tag_229:\n        /* \"contracts/whore.sol\":37646:38494  if (srcRep != dstRep && amount > 0) {\r... */\n    tag_221:\n        /* \"contracts/whore.sol\":37554:38501  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":37107:37546  function _delegate(address delegator, address delegatee)\r... */\n    tag_143:\n        /* \"contracts/whore.sol\":37198:37221  address currentDelegate */\n      0x00\n        /* \"contracts/whore.sol\":37224:37234  _delegates */\n      0x06\n        /* \"contracts/whore.sol\":37224:37245  _delegates[delegator] */\n      0x00\n        /* \"contracts/whore.sol\":37235:37244  delegator */\n      dup5\n        /* \"contracts/whore.sol\":37224:37245  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":37198:37245  address currentDelegate = _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":37256:37280  uint256 delegatorBalance */\n      0x00\n        /* \"contracts/whore.sol\":37283:37303  balanceOf(delegator) */\n      tag_235\n        /* \"contracts/whore.sol\":37293:37302  delegator */\n      dup5\n        /* \"contracts/whore.sol\":37283:37292  balanceOf */\n      tag_67\n        /* \"contracts/whore.sol\":37283:37303  balanceOf(delegator) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/whore.sol\":37256:37303  uint256 delegatorBalance = balanceOf(delegator) */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":37384:37393  delegatee */\n      dup3\n        /* \"contracts/whore.sol\":37360:37370  _delegates */\n      0x06\n        /* \"contracts/whore.sol\":37360:37381  _delegates[delegator] */\n      0x00\n        /* \"contracts/whore.sol\":37371:37380  delegator */\n      dup7\n        /* \"contracts/whore.sol\":37360:37381  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/whore.sol\":37360:37393  _delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":37455:37464  delegatee */\n      dup3\n        /* \"contracts/whore.sol\":37411:37465  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":37438:37453  currentDelegate */\n      dup3\n        /* \"contracts/whore.sol\":37411:37465  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/whore.sol\":37427:37436  delegator */\n      dup6\n        /* \"contracts/whore.sol\":37411:37465  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/whore.sol\":37478:37538  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_236\n        /* \"contracts/whore.sol\":37493:37508  currentDelegate */\n      dup3\n        /* \"contracts/whore.sol\":37510:37519  delegatee */\n      dup5\n        /* \"contracts/whore.sol\":37521:37537  delegatorBalance */\n      dup4\n        /* \"contracts/whore.sol\":37478:37492  _moveDelegates */\n      tag_139\n        /* \"contracts/whore.sol\":37478:37538  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/whore.sol\":37107:37546  function _delegate(address delegator, address delegatee)\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":39391:39544  function getChainId() internal pure returns (uint) {\r... */\n    tag_182:\n        /* \"contracts/whore.sol\":39436:39440  uint */\n      0x00\n        /* \"contracts/whore.sol\":39453:39468  uint256 chainId */\n      dup1\n        /* \"contracts/whore.sol\":39501:39510  chainid() */\n      chainid\n        /* \"contracts/whore.sol\":39490:39510  chainId := chainid() */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":39529:39536  chainId */\n      dup1\n        /* \"contracts/whore.sol\":39522:39536  return chainId */\n      swap2\n      pop\n      pop\n        /* \"contracts/whore.sol\":39391:39544  function getChainId() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/whore.sol\":28127:28219  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_203:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":5243:5379  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_226:\n        /* \"contracts/whore.sol\":5301:5308  uint256 */\n      0x00\n        /* \"contracts/whore.sol\":5328:5371  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_240\n        /* \"contracts/whore.sol\":5332:5333  a */\n      dup4\n        /* \"contracts/whore.sol\":5335:5336  b */\n      dup4\n        /* \"contracts/whore.sol\":5328:5371  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/whore.sol\":5328:5331  sub */\n      tag_124\n        /* \"contracts/whore.sol\":5328:5371  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_240:\n        /* \"contracts/whore.sol\":5321:5371  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":5243:5379  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":38509:39214  function _writeCheckpoint(\r... */\n    tag_228:\n        /* \"contracts/whore.sol\":38688:38706  uint32 blockNumber */\n      0x00\n        /* \"contracts/whore.sol\":38709:38786  safe32(block.number, \"VERSA::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_242\n        /* \"contracts/whore.sol\":38716:38728  block.number */\n      number\n        /* \"contracts/whore.sol\":38709:38786  safe32(block.number, \"VERSA::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_0bb1f902a94f810e692f0e0e5711b6c52f36227f9406fd275e4db6bdf07fd1da\n      0x35\n      swap2\n      codecopy\n        /* \"contracts/whore.sol\":38709:38715  safe32 */\n      tag_243\n        /* \"contracts/whore.sol\":38709:38786  safe32(block.number, \"VERSA::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_242:\n        /* \"contracts/whore.sol\":38688:38786  uint32 blockNumber = safe32(block.number, \"VERSA::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":38818:38819  0 */\n      0x00\n        /* \"contracts/whore.sol\":38803:38815  nCheckpoints */\n      dup5\n        /* \"contracts/whore.sol\":38803:38819  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/whore.sol\":38803:38888  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"contracts/whore.sol\":38877:38888  blockNumber */\n      dup1\n        /* \"contracts/whore.sol\":38823:38888  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":38823:38834  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":38823:38845  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/whore.sol\":38835:38844  delegatee */\n      dup8\n        /* \"contracts/whore.sol\":38823:38845  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38823:38863  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/whore.sol\":38861:38862  1 */\n      0x01\n        /* \"contracts/whore.sol\":38846:38858  nCheckpoints */\n      dup8\n        /* \"contracts/whore.sol\":38846:38862  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":38823:38863  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38823:38873  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/whore.sol\":38823:38888  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/whore.sol\":38803:38888  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_244:\n        /* \"contracts/whore.sol\":38799:39138  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/whore.sol\":38954:38962  newVotes */\n      dup2\n        /* \"contracts/whore.sol\":38905:38916  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":38905:38927  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/whore.sol\":38917:38926  delegatee */\n      dup8\n        /* \"contracts/whore.sol\":38905:38927  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38905:38945  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/whore.sol\":38943:38944  1 */\n      0x01\n        /* \"contracts/whore.sol\":38928:38940  nCheckpoints */\n      dup8\n        /* \"contracts/whore.sol\":38928:38944  nCheckpoints - 1 */\n      sub\n        /* \"contracts/whore.sol\":38905:38945  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38905:38951  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"contracts/whore.sol\":38905:38962  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":38799:39138  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      jump(tag_246)\n    tag_245:\n        /* \"contracts/whore.sol\":39034:39067  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/whore.sol\":39045:39056  blockNumber */\n      dup3\n        /* \"contracts/whore.sol\":39034:39067  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/whore.sol\":39058:39066  newVotes */\n      dup4\n        /* \"contracts/whore.sol\":39034:39067  Checkpoint(blockNumber, newVotes) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/whore.sol\":38995:39006  checkpoints */\n      0x07\n        /* \"contracts/whore.sol\":38995:39017  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/whore.sol\":39007:39016  delegatee */\n      dup8\n        /* \"contracts/whore.sol\":38995:39017  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38995:39031  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"contracts/whore.sol\":39018:39030  nCheckpoints */\n      dup7\n        /* \"contracts/whore.sol\":38995:39031  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/whore.sol\":38995:39067  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/whore.sol\":39125:39126  1 */\n      0x01\n        /* \"contracts/whore.sol\":39110:39122  nCheckpoints */\n      dup5\n        /* \"contracts/whore.sol\":39110:39126  nCheckpoints + 1 */\n      add\n        /* \"contracts/whore.sol\":39082:39096  numCheckpoints */\n      0x08\n        /* \"contracts/whore.sol\":39082:39107  numCheckpoints[delegatee] */\n      0x00\n        /* \"contracts/whore.sol\":39097:39106  delegatee */\n      dup8\n        /* \"contracts/whore.sol\":39082:39107  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/whore.sol\":39082:39126  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/whore.sol\":38799:39138  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n    tag_246:\n        /* \"contracts/whore.sol\":39176:39185  delegatee */\n      dup5\n        /* \"contracts/whore.sol\":39155:39206  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"contracts/whore.sol\":39187:39195  oldVotes */\n      dup5\n        /* \"contracts/whore.sol\":39197:39205  newVotes */\n      dup5\n        /* \"contracts/whore.sol\":39155:39206  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/whore.sol\":38509:39214  function _writeCheckpoint(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":39222:39383  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r... */\n    tag_243:\n        /* \"contracts/whore.sol\":39297:39303  uint32 */\n      0x00\n        /* \"contracts/whore.sol\":39328:39333  2**32 */\n      0x0100000000\n        /* \"contracts/whore.sol\":39324:39325  n */\n      dup4\n        /* \"contracts/whore.sol\":39324:39333  n < 2**32 */\n      lt\n        /* \"contracts/whore.sol\":39335:39347  errorMessage */\n      dup3\n        /* \"contracts/whore.sol\":39316:39348  require(n < 2**32, errorMessage) */\n      swap1\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_249:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_251\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_249)\n    tag_251:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/whore.sol\":39316:39348  require(n < 2**32, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_252\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_252:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n      pop\n        /* \"contracts/whore.sol\":39373:39374  n */\n      dup3\n        /* \"contracts/whore.sol\":39359:39375  return uint32(n) */\n      swap1\n      pop\n        /* \"contracts/whore.sol\":39222:39383  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/whore.sol\":30617:39547  contract VERSAToken is ERC20(\"VersaGames\", \"VERSA\"), Ownable {\r... */\n    tag_158:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_018fc8af80b4a731c3ce32406a52798414ad910485cbdce7f8efa30829d690ff 56455253413a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_0bb1f902a94f810e692f0e0e5711b6c52f36227f9406fd275e4db6bdf07fd1da 56455253413a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_35bbd66a404ecab5400ea987b29286fde22b2e9272c10e62471021d1506fe2c1 56455253413a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c7a1ba371af039472495f9bd83d8f06dfd4a777a3cf4068dfd1d7962f1fe8006 56455253413a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n    data_e7cf3b87e0cff2b4ac778fcc8c3ce968f02c806baec2b92c1c391d868475f013 56455253413a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c7236faea072324e9486f8f38abfc6854dc0578ded9f600c1f9186b33317294b64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060400160405280600a81526020017f566572736147616d6573000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f56455253410000000000000000000000000000000000000000000000000000008152508160039080519060200190620000889291906200017f565b508060049080519060200190620000a19291906200017f565b506012600560006101000a81548160ff021916908360ff16021790555050506000620000d26200017760201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200022e565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001c257805160ff1916838001178555620001f3565b82800160010185558215620001f3579182015b82811115620001f2578251825591602001919060010190620001d5565b5b50905062000202919062000206565b5090565b6200022b91905b80821115620002275760008160009055506001016200020d565b5090565b90565b612f6b806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146108ad578063e7a324dc14610925578063f1127ed814610943578063f2fde38b146109be57610173565b8063a9059cbb14610776578063b4b5ea57146107dc578063c3cda5201461083457610173565b8063715018a61461057f578063782d6fe1146105895780637ecebe00146105eb5780638da5cb5b1461064357806395d89b411461068d578063a457c2d71461071057610173565b80633950935111610130578063395093511461034757806340c10f19146103ad578063587cde1e146103fb5780635c19a95c1461047f5780636fcfff45146104c357806370a082311461052757610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461026157806320606b701461027f57806323b872dd1461029d578063313ce56714610323575b600080fd5b610180610a02565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa4565b604051808215151515815260200191505060405180910390f35b610269610ac2565b6040518082815260200191505060405180910390f35b610287610acc565b6040518082815260200191505060405180910390f35b610309600480360360608110156102b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae8565b604051808215151515815260200191505060405180910390f35b61032b610bc1565b604051808260ff1660ff16815260200191505060405180910390f35b6103936004803603604081101561035d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd8565b604051808215151515815260200191505060405180910390f35b6103f9600480360360408110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8b565b005b61043d6004803603602081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c16004803603602081101561049557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e37565b005b610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e44565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6105696004803603602081101561053d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e67565b6040518082815260200191505060405180910390f35b610587610eaf565b005b6105d56004803603604081101561059f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061103a565b6040518082815260200191505060405180910390f35b61062d6004803603602081101561060157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ff565b6040518082815260200191505060405180910390f35b61064b611417565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610695611441565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106d55780820151818401526020810190506106ba565b50505050905090810190601f1680156107025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61075c6004803603604081101561072657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e3565b604051808215151515815260200191505060405180910390f35b6107c26004803603604081101561078c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b0565b604051808215151515815260200191505060405180910390f35b61081e600480360360208110156107f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ce565b6040518082815260200191505060405180910390f35b6108ab600480360360c081101561084a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506116a4565b005b61090f600480360360408110156108c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a27565b6040518082815260200191505060405180910390f35b61092d611aae565b6040518082815260200191505060405180910390f35b6109956004803603604081101561095957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611aca565b604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390f35b610a00600480360360208110156109d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b0b565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b5050505050905090565b6000610ab8610ab1611d1b565b8484611d23565b6001905092915050565b6000600254905090565b6040518080612dd9604391396043019050604051809103902081565b6000610af5848484611f1a565b610bb684610b01611d1b565b610bb185604051806060016040528060288152602001612e1c60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b67611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b611d23565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c81610be5611d1b565b84610c7c8560016000610bf6611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b611d23565b6001905092915050565b610c93611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d5f8282612323565b610dca6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836124ea565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e413382612787565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610eb7611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611094576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612cc46028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff1614156111015760009150506113f9565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16116111eb57600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101549150506113f9565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111561126c5760009150506113f9565b600080905060006001830390505b8163ffffffff168163ffffffff161115611393576000600283830363ffffffff16816112a257fe5b04820390506112af612ca3565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff16141561136b578060200151955050505050506113f9565b86816000015163ffffffff1610156113855781935061138c565b6001820392505b505061127a565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d95780601f106114ae576101008083540402835291602001916114d9565b820191906000526020600020905b8154815290600101906020018083116114bc57829003601f168201915b5050505050905090565b60006115a66114f0611d1b565b846115a185604051806060016040528060258152602001612f11602591396001600061151a611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b611d23565b6001905092915050565b60006115c46115bd611d1b565b8484611f1a565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff161161163857600061169c565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60006040518080612dd960439139604301905060405180910390206116c7610a02565b805190602001206116d66128f8565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060006040518080612eb4603a9139603a0190506040518091039020888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611881573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611913576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612e696027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505589146119b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612eee6023913960400191505060405180910390fd5b87421115611a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612d8c6027913960400191505060405180910390fd5b611a1b818b612787565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518080612eb4603a9139603a019050604051809103902081565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611b13611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d446026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e906024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d6a6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612e446025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612026576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612cec6023913960400191505060405180910390fd5b612031838383612905565b61209c81604051806060016040528060268152602001612db3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612288576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561224d578082015181840152602081019050612232565b50505050905090810190601f16801561227a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6123d260008383612905565b6123e78160025461229b90919063ffffffff16565b60028190555061243e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156125265750600081115b1561278257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612656576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125c957600061262d565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612644848361290a90919063ffffffff16565b905061265286848484612954565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612781576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126f4576000612758565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b9050600061276f848361229b90919063ffffffff16565b905061277d85848484612954565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006127f684610e67565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46128f28284836124ea565b50505050565b6000804690508091505090565b505050565b600061294c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121db565b905092915050565b600061297843604051806060016040528060358152602001612d0f60359139612be8565b905060008463ffffffff16118015612a0d57508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a7e5781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b8b565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c5e578082015181840152602081019050612c43565b50505050905090810190601f168015612c8b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe56455253413a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220746f20746865207a65726f206164647265737356455253413a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737356455253413a3a64656c656761746542795369673a207369676e6174757265206578706972656445524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737356455253413a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792956455253413a3a64656c656761746542795369673a20696e76616c6964206e6f6e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c7236faea072324e9486f8f38abfc6854dc0578ded9f600c1f9186b33317294b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566572736147616D657300000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5645525341000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x17F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xA1 SWAP3 SWAP2 SWAP1 PUSH3 0x17F JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH3 0xD2 PUSH3 0x177 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x22E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1C2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x202 SWAP2 SWAP1 PUSH3 0x206 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x22B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x227 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x20D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F6B DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9BE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x834 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x710 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x527 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x323 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH2 0xEAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x695 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x702 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92D PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x995 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA00 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B0B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 PUSH2 0xAB1 PUSH2 0x1D1B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2DD9 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF5 DUP5 DUP5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xBB6 DUP5 PUSH2 0xB01 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0xBB1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E1C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB67 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC81 PUSH2 0xBE5 PUSH2 0x1D1B JUMP JUMPDEST DUP5 PUSH2 0xC7C DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBF6 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC93 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5F DUP3 DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH2 0xDCA PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x24EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE41 CALLER DUP3 PUSH2 0x2787 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CC4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x11EB JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1393 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x12A2 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x12AF PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x136B JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1385 JUMPI DUP2 SWAP4 POP PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x127A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A6 PUSH2 0x14F0 PUSH2 0x1D1B JUMP JUMPDEST DUP5 PUSH2 0x15A1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F11 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x151A PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C4 PUSH2 0x15BD PUSH2 0x1D1B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1638 JUMPI PUSH1 0x0 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2DD9 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x16C7 PUSH2 0xA02 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x16D6 PUSH2 0x28F8 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2EB4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E69 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EEE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8C PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A1B DUP2 DUP12 PUSH2 0x2787 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2EB4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E90 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D6A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E44 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CEC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2031 DUP4 DUP4 DUP4 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x209C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x212F DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x224D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2232 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x227A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23D2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH1 0x2 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x243E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2526 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2656 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x25C9 JUMPI PUSH1 0x0 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2644 DUP5 DUP4 PUSH2 0x290A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2652 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2954 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2781 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x26F4 JUMPI PUSH1 0x0 PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x276F DUP5 DUP4 PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x277D DUP6 DUP5 DUP5 DUP5 PUSH2 0x2954 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x27F6 DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x28F2 DUP3 DUP5 DUP4 PUSH2 0x24EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D0F PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2A0D JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A7E JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C43 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C8B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x56455253413A3A64656C65676174654279536967 GASPRICE KECCAK256 PUSH20 0x69676E6174757265206578706972656445524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365454950373132446F6D61696E 0x28 PUSH20 0x7472696E67206E616D652C75696E743235362063 PUSH9 0x61696E49642C616464 PUSH19 0x65737320766572696679696E67436F6E747261 PUSH4 0x74294552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737356455253413A3A64656C656761746542 PUSH26 0x5369673A20696E76616C6964207369676E617475726545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 DIFFICULTY PUSH6 0x6C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C723 PUSH16 0xAEA072324E9486F8F38ABFC6854DC057 DUP14 0xED SWAP16 PUSH1 0xC 0x1F SWAP2 DUP7 0xB3 CALLER OR 0x29 0x4B PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "30617:8930:0:-:0;;;19194:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19275:4;19267:5;:12;;;;;;;;;;;;:::i;:::-;;19300:6;19290:7;:16;;;;;;;;;;;;:::i;:::-;;19329:2;19317:9;;:14;;;;;;;;;;;;;;;;;;19194:145;;29111:17;29131:12;:10;;;:12;;:::i;:::-;29111:32;;29163:9;29154:6;;:18;;;;;;;;;;;;;;;;;;29221:9;29188:43;;29217:1;29188:43;;;;;;;;;;;;29076:163;30617:8930;;697:106;750:15;785:10;778:17;;697:106;:::o;30617:8930::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146108ad578063e7a324dc14610925578063f1127ed814610943578063f2fde38b146109be57610173565b8063a9059cbb14610776578063b4b5ea57146107dc578063c3cda5201461083457610173565b8063715018a61461057f578063782d6fe1146105895780637ecebe00146105eb5780638da5cb5b1461064357806395d89b411461068d578063a457c2d71461071057610173565b80633950935111610130578063395093511461034757806340c10f19146103ad578063587cde1e146103fb5780635c19a95c1461047f5780636fcfff45146104c357806370a082311461052757610173565b806306fdde0314610178578063095ea7b3146101fb57806318160ddd1461026157806320606b701461027f57806323b872dd1461029d578063313ce56714610323575b600080fd5b610180610a02565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa4565b604051808215151515815260200191505060405180910390f35b610269610ac2565b6040518082815260200191505060405180910390f35b610287610acc565b6040518082815260200191505060405180910390f35b610309600480360360608110156102b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae8565b604051808215151515815260200191505060405180910390f35b61032b610bc1565b604051808260ff1660ff16815260200191505060405180910390f35b6103936004803603604081101561035d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd8565b604051808215151515815260200191505060405180910390f35b6103f9600480360360408110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c8b565b005b61043d6004803603602081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c16004803603602081101561049557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e37565b005b610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e44565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6105696004803603602081101561053d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e67565b6040518082815260200191505060405180910390f35b610587610eaf565b005b6105d56004803603604081101561059f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061103a565b6040518082815260200191505060405180910390f35b61062d6004803603602081101561060157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ff565b6040518082815260200191505060405180910390f35b61064b611417565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610695611441565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106d55780820151818401526020810190506106ba565b50505050905090810190601f1680156107025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61075c6004803603604081101561072657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e3565b604051808215151515815260200191505060405180910390f35b6107c26004803603604081101561078c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b0565b604051808215151515815260200191505060405180910390f35b61081e600480360360208110156107f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ce565b6040518082815260200191505060405180910390f35b6108ab600480360360c081101561084a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506116a4565b005b61090f600480360360408110156108c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a27565b6040518082815260200191505060405180910390f35b61092d611aae565b6040518082815260200191505060405180910390f35b6109956004803603604081101561095957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611aca565b604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390f35b610a00600480360360208110156109d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b0b565b005b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b5050505050905090565b6000610ab8610ab1611d1b565b8484611d23565b6001905092915050565b6000600254905090565b6040518080612dd9604391396043019050604051809103902081565b6000610af5848484611f1a565b610bb684610b01611d1b565b610bb185604051806060016040528060288152602001612e1c60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b67611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b611d23565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000610c81610be5611d1b565b84610c7c8560016000610bf6611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b611d23565b6001905092915050565b610c93611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d5f8282612323565b610dca6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836124ea565b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e413382612787565b50565b60086020528060005260406000206000915054906101000a900463ffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610eb7611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000438210611094576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612cc46028913960400191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff1614156111015760009150506113f9565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16116111eb57600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101549150506113f9565b82600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111561126c5760009150506113f9565b600080905060006001830390505b8163ffffffff168163ffffffff161115611393576000600283830363ffffffff16816112a257fe5b04820390506112af612ca3565b600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff16141561136b578060200151955050505050506113f9565b86816000015163ffffffff1610156113855781935061138c565b6001820392505b505061127a565b600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b60096020528060005260406000206000915090505481565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114d95780601f106114ae576101008083540402835291602001916114d9565b820191906000526020600020905b8154815290600101906020018083116114bc57829003601f168201915b5050505050905090565b60006115a66114f0611d1b565b846115a185604051806060016040528060258152602001612f11602591396001600061151a611d1b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b611d23565b6001905092915050565b60006115c46115bd611d1b565b8484611f1a565b6001905092915050565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff161161163857600061169c565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60006040518080612dd960439139604301905060405180910390206116c7610a02565b805190602001206116d66128f8565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060006040518080612eb4603a9139603a0190506040518091039020888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611881573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611913576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612e696027913960400191505060405180910390fd5b600960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505589146119b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612eee6023913960400191505060405180910390fd5b87421115611a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612d8c6027913960400191505060405180910390fd5b611a1b818b612787565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518080612eb4603a9139603a019050604051809103902081565b6007602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611b13611d1b565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612d446026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e906024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612d6a6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612e446025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612026576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612cec6023913960400191505060405180910390fd5b612031838383612905565b61209c81604051806060016040528060268152602001612db3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121db9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612288576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561224d578082015181840152602081019050612232565b50505050905090810190601f16801561227a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6123d260008383612905565b6123e78160025461229b90919063ffffffff16565b60028190555061243e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156125265750600081115b1561278257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612656576000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125c957600061262d565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612644848361290a90919063ffffffff16565b905061265286848484612954565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612781576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126f4576000612758565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b9050600061276f848361229b90919063ffffffff16565b905061277d85848484612954565b5050505b5b505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006127f684610e67565b905082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46128f28284836124ea565b50505050565b6000804690508091505090565b505050565b600061294c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121db565b905092915050565b600061297843604051806060016040528060358152602001612d0f60359139612be8565b905060008463ffffffff16118015612a0d57508063ffffffff16600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612a7e5781600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612b8b565b60405180604001604052808263ffffffff16815260200183815250600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612c99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c5e578082015181840152602081019050612c43565b50505050905090810190601f168015612c8b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe56455253413a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220746f20746865207a65726f206164647265737356455253413a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737356455253413a3a64656c656761746542795369673a207369676e6174757265206578706972656445524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737356455253413a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737344656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e74323536206578706972792956455253413a3a64656c656761746542795369673a20696e76616c6964206e6f6e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c7236faea072324e9486f8f38abfc6854dc0578ded9f600c1f9186b33317294b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x943 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9BE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x834 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x710 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x527 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x323 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH2 0xEAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x695 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x702 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x90F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92D PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x995 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA00 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B0B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 PUSH2 0xAB1 PUSH2 0x1D1B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2DD9 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF5 DUP5 DUP5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xBB6 DUP5 PUSH2 0xB01 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0xBB1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E1C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB67 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC81 PUSH2 0xBE5 PUSH2 0x1D1B JUMP JUMPDEST DUP5 PUSH2 0xC7C DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBF6 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC93 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5F DUP3 DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH2 0xDCA PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x24EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE41 CALLER DUP3 PUSH2 0x2787 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CC4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x11EB JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1393 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x12A2 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x12AF PUSH2 0x2CA3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x136B JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x13F9 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1385 JUMPI DUP2 SWAP4 POP PUSH2 0x138C JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x127A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A6 PUSH2 0x14F0 PUSH2 0x1D1B JUMP JUMPDEST DUP5 PUSH2 0x15A1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F11 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x151A PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C4 PUSH2 0x15BD PUSH2 0x1D1B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1638 JUMPI PUSH1 0x0 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2DD9 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH2 0x16C7 PUSH2 0xA02 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x16D6 PUSH2 0x28F8 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2EB4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1913 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E69 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EEE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D8C PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A1B DUP2 DUP12 PUSH2 0x2787 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2EB4 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x1D1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E90 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D6A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E44 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CEC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2031 DUP4 DUP4 DUP4 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x209C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x212F DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x224D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2232 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x227A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23D2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2905 JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH1 0x2 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x243E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2526 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2656 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x25C9 JUMPI PUSH1 0x0 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2644 DUP5 DUP4 PUSH2 0x290A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2652 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2954 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2781 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x26F4 JUMPI PUSH1 0x0 PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x276F DUP5 DUP4 PUSH2 0x229B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x277D DUP6 DUP5 DUP5 DUP5 PUSH2 0x2954 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x27F6 DUP5 PUSH2 0xE67 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x28F2 DUP3 DUP5 DUP4 PUSH2 0x24EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D0F PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2A0D JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2A7E JUMPI DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2C99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C43 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C8B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x56455253413A3A64656C65676174654279536967 GASPRICE KECCAK256 PUSH20 0x69676E6174757265206578706972656445524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E6365454950373132446F6D61696E 0x28 PUSH20 0x7472696E67206E616D652C75696E743235362063 PUSH9 0x61696E49642C616464 PUSH19 0x65737320766572696679696E67436F6E747261 PUSH4 0x74294552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737356455253413A3A64656C656761746542 PUSH26 0x5369673A20696E76616C6964207369676E617475726545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 DIFFICULTY PUSH6 0x6C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 JUMP GASLIMIT MSTORE MSTORE8 COINBASE GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C723 PUSH16 0xAEA072324E9486F8F38ABFC6854DC057 DUP14 0xED SWAP16 PUSH1 0xC 0x1F SWAP2 DUP7 0xB3 CALLER OR 0x29 0x4B PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "30617:8930:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30617:8930:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19409:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19409:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21515:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21515:169:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20484:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31963:122;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22158:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22158:321:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20336:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22888:218;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22888:218:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;30783:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30783:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;32946:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32946:149:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;33239:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33239:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;31841:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;31841:49:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20647:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20647:119:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29962:148;;;:::i;:::-;;35845:1254;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;35845:1254:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;32377:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32377:39:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29320:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;19611:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19611:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23609:269;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23609:269:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20979:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20979:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;35159:255;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;35159:255:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33777:1181;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;33777:1181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21217:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21217:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;32179:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31702:70;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;31702:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30265:244;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30265:244:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;19409:83;19446:13;19479:5;19472:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19409:83;:::o;21515:169::-;21598:4;21615:39;21624:12;:10;:12::i;:::-;21638:7;21647:6;21615:8;:39::i;:::-;21672:4;21665:11;;21515:169;;;;:::o;20484:100::-;20537:7;20564:12;;20557:19;;20484:100;:::o;31963:122::-;32005:80;;;;;;;;;;;;;;;;;;;31963:122;:::o;22158:321::-;22264:4;22281:36;22291:6;22299:9;22310:6;22281:9;:36::i;:::-;22328:121;22337:6;22345:12;:10;:12::i;:::-;22359:89;22397:6;22359:89;;;;;;;;;;;;;;;;;:11;:19;22371:6;22359:19;;;;;;;;;;;;;;;:33;22379:12;:10;:12::i;:::-;22359:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;22328:8;:121::i;:::-;22467:4;22460:11;;22158:321;;;;;:::o;20336:83::-;20377:5;20402:9;;;;;;;;;;;20395:16;;20336:83;:::o;22888:218::-;22976:4;22993:83;23002:12;:10;:12::i;:::-;23016:7;23025:50;23064:10;23025:11;:25;23037:12;:10;:12::i;:::-;23025:25;;;;;;;;;;;;;;;:34;23051:7;23025:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;22993:8;:83::i;:::-;23094:4;23087:11;;22888:218;;;;:::o;30783:162::-;29542:12;:10;:12::i;:::-;29532:22;;:6;;;;;;;;;;;:22;;;29524:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30855:19:::1;30861:3;30866:7;30855:5;:19::i;:::-;30885:52;30908:1;30912:10;:15;30923:3;30912:15;;;;;;;;;;;;;;;;;;;;;;;;;30929:7;30885:14;:52::i;:::-;30783:162:::0;;:::o;32946:149::-;33034:7;33066:10;:21;33077:9;33066:21;;;;;;;;;;;;;;;;;;;;;;;;;33059:28;;32946:149;;;:::o;33239:104::-;33303:32;33313:10;33325:9;33303;:32::i;:::-;33239:104;:::o;31841:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;20647:119::-;20713:7;20740:9;:18;20750:7;20740:18;;;;;;;;;;;;;;;;20733:25;;20647:119;;;:::o;29962:148::-;29542:12;:10;:12::i;:::-;29532:22;;:6;;;;;;;;;;;:22;;;29524:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30069:1:::1;30032:40;;30053:6;;;;;;;;;;;30032:40;;;;;;;;;;;;30100:1;30083:6;;:19;;;;;;;;;;;;;;;;;;29962:148::o:0;35845:1254::-;35953:7;36000:12;35986:11;:26;35978:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36070:19;36092:14;:23;36107:7;36092:23;;;;;;;;;;;;;;;;;;;;;;;;;36070:45;;36146:1;36130:12;:17;;;36126:58;;;36171:1;36164:8;;;;;36126:58;36296:11;36244;:20;36256:7;36244:20;;;;;;;;;;;;;;;:38;36280:1;36265:12;:16;36244:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;36240:147;;36331:11;:20;36343:7;36331:20;;;;;;;;;;;;;;;:38;36367:1;36352:12;:16;36331:38;;;;;;;;;;;;;;;:44;;;36324:51;;;;;36240:147;36484:11;36448;:20;36460:7;36448:20;;;;;;;;;;;;;;;:23;36469:1;36448:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;36444:88;;;36519:1;36512:8;;;;;36444:88;36544:12;36559:1;36544:16;;36571:12;36601:1;36586:12;:16;36571:31;;36613:428;36628:5;36620:13;;:5;:13;;;36613:428;;;36650:13;36692:1;36683:5;36675;:13;36674:19;;;;;;;;36666:5;:27;36650:43;;36735:20;;:::i;:::-;36758:11;:20;36770:7;36758:20;;;;;;;;;;;;;;;:28;36779:6;36758:28;;;;;;;;;;;;;;;36735:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36821:11;36805:2;:12;;;:27;;;36801:229;;;36860:2;:8;;;36853:15;;;;;;;;;36801:229;36909:11;36894:2;:12;;;:26;;;36890:140;;;36949:6;36941:14;;36890:140;;;37013:1;37004:6;:10;36996:18;;36890:140;36613:428;;;;;37058:11;:20;37070:7;37058:20;;;;;;;;;;;;;;;:27;37079:5;37058:27;;;;;;;;;;;;;;;:33;;;37051:40;;;;;35845:1254;;;;;:::o;32377:39::-;;;;;;;;;;;;;;;;;:::o;29320:79::-;29358:7;29385:6;;;;;;;;;;;29378:13;;29320:79;:::o;19611:87::-;19650:13;19683:7;19676:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19611:87;:::o;23609:269::-;23702:4;23719:129;23728:12;:10;:12::i;:::-;23742:7;23751:96;23790:15;23751:96;;;;;;;;;;;;;;;;;:11;:25;23763:12;:10;:12::i;:::-;23751:25;;;;;;;;;;;;;;;:34;23777:7;23751:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;23719:8;:129::i;:::-;23866:4;23859:11;;23609:269;;;;:::o;20979:175::-;21065:4;21082:42;21092:12;:10;:12::i;:::-;21106:9;21117:6;21082:9;:42::i;:::-;21142:4;21135:11;;20979:175;;;;:::o;35159:255::-;35251:7;35276:19;35298:14;:23;35313:7;35298:23;;;;;;;;;;;;;;;;;;;;;;;;;35276:45;;35354:1;35339:12;:16;;;:67;;35405:1;35339:67;;;35358:11;:20;35370:7;35358:20;;;;;;;;;;;;;;;:38;35394:1;35379:12;:16;35358:38;;;;;;;;;;;;;;;:44;;;35339:67;35332:74;;;35159:255;;;:::o;33777:1181::-;33970:23;32005:80;;;;;;;;;;;;;;;;;;;34099:6;:4;:6::i;:::-;34083:24;;;;;;34126:12;:10;:12::i;:::-;34165:4;34020:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34020:165:0;;;33996:200;;;;;;33970:226;;34209:18;32225:71;;;;;;;;;;;;;;;;;;;34321:9;34349:5;34373:6;34254:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34254:140:0;;;34230:175;;;;;;34209:196;;34418:14;34523:15;34557:10;34459:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34459:123:0;;;34435:158;;;;;;34418:175;;34606:17;34626:26;34636:6;34644:1;34647;34650;34626:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34626:26:0;;;;;;;;34606:46;;34692:1;34671:23;;:9;:23;;;;34663:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34766:6;:17;34773:9;34766:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;34757:5;:28;34749:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34851:6;34844:3;:13;;34836:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34919:31;34929:9;34940;34919;:31::i;:::-;34912:38;;;;33777:1181;;;;;;:::o;21217:151::-;21306:7;21333:11;:18;21345:5;21333:18;;;;;;;;;;;;;;;:27;21352:7;21333:27;;;;;;;;;;;;;;;;21326:34;;21217:151;;;;:::o;32179:117::-;32225:71;;;;;;;;;;;;;;;;;;;32179:117;:::o;31702:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30265:244::-;29542:12;:10;:12::i;:::-;29532:22;;:6;;;;;;;;;;;:22;;;29524:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30374:1:::1;30354:22;;:8;:22;;;;30346:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30464:8;30435:38;;30456:6;;;;;;;;;;;30435:38;;;;;;;;;;;;30493:8;30484:6;;:17;;;;;;;;;;;;;;;;;;30265:244:::0;:::o;697:106::-;750:15;785:10;778:17;;697:106;:::o;26756:346::-;26875:1;26858:19;;:5;:19;;;;26850:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26956:1;26937:21;;:7;:21;;;;26929:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27040:6;27010:11;:18;27022:5;27010:18;;;;;;;;;;;;;;;:27;27029:7;27010:27;;;;;;;;;;;;;;;:36;;;;27078:7;27062:32;;27071:5;27062:32;;;27087:6;27062:32;;;;;;;;;;;;;;;;;;26756:346;;;:::o;24368:539::-;24492:1;24474:20;;:6;:20;;;;24466:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24576:1;24555:23;;:9;:23;;;;24547:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24631:47;24652:6;24660:9;24671:6;24631:20;:47::i;:::-;24711:71;24733:6;24711:71;;;;;;;;;;;;;;;;;:9;:17;24721:6;24711:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;24691:9;:17;24701:6;24691:17;;;;;;;;;;;;;;;:91;;;;24816:32;24841:6;24816:9;:20;24826:9;24816:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;24793:9;:20;24803:9;24793:20;;;;;;;;;;;;;;;:55;;;;24881:9;24864:35;;24873:6;24864:35;;;24892:6;24864:35;;;;;;;;;;;;;;;;;;24368:539;;;:::o;5682:192::-;5768:7;5801:1;5796;:6;;5804:12;5788:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5788:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5828:9;5844:1;5840;:5;5828:17;;5865:1;5858:8;;;5682:192;;;;;:::o;4779:181::-;4837:7;4857:9;4873:1;4869;:5;4857:17;;4898:1;4893;:6;;4885:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4951:1;4944:8;;;4779:181;;;;:::o;25188:378::-;25291:1;25272:21;;:7;:21;;;;25264:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25342:49;25371:1;25375:7;25384:6;25342:20;:49::i;:::-;25419:24;25436:6;25419:12;;:16;;:24;;;;:::i;:::-;25404:12;:39;;;;25475:30;25498:6;25475:9;:18;25485:7;25475:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;25454:9;:18;25464:7;25454:18;;;;;;;;;;;;;;;:51;;;;25542:7;25521:37;;25538:1;25521:37;;;25551:6;25521:37;;;;;;;;;;;;;;;;;;25188:378;;:::o;37554:947::-;37660:6;37650:16;;:6;:16;;;;:30;;;;;37679:1;37670:6;:10;37650:30;37646:848;;;37719:1;37701:20;;:6;:20;;;37697:385;;37790:16;37809:14;:22;37824:6;37809:22;;;;;;;;;;;;;;;;;;;;;;;;;37790:41;;37850:17;37882:1;37870:9;:13;;;:60;;37929:1;37870:60;;;37886:11;:19;37898:6;37886:19;;;;;;;;;;;;;;;:34;37918:1;37906:9;:13;37886:34;;;;;;;;;;;;;;;:40;;;37870:60;37850:80;;37949:17;37969:21;37983:6;37969:9;:13;;:21;;;;:::i;:::-;37949:41;;38009:57;38026:6;38034:9;38045;38056;38009:16;:57::i;:::-;37697:385;;;;38120:1;38102:20;;:6;:20;;;38098:385;;38191:16;38210:14;:22;38225:6;38210:22;;;;;;;;;;;;;;;;;;;;;;;;;38191:41;;38251:17;38283:1;38271:9;:13;;;:60;;38330:1;38271:60;;;38287:11;:19;38299:6;38287:19;;;;;;;;;;;;;;;:34;38319:1;38307:9;:13;38287:34;;;;;;;;;;;;;;;:40;;;38271:60;38251:80;;38350:17;38370:21;38384:6;38370:9;:13;;:21;;;;:::i;:::-;38350:41;;38410:57;38427:6;38435:9;38446;38457;38410:16;:57::i;:::-;38098:385;;;;37646:848;37554:947;;;:::o;37107:439::-;37198:23;37224:10;:21;37235:9;37224:21;;;;;;;;;;;;;;;;;;;;;;;;;37198:47;;37256:24;37283:20;37293:9;37283;:20::i;:::-;37256:47;;37384:9;37360:10;:21;37371:9;37360:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;37455:9;37411:54;;37438:15;37411:54;;37427:9;37411:54;;;;;;;;;;;;37478:60;37493:15;37510:9;37521:16;37478:14;:60::i;:::-;37107:439;;;;:::o;39391:153::-;39436:4;39453:15;39501:9;39490:20;;39529:7;39522:14;;;39391:153;:::o;28127:92::-;;;;:::o;5243:136::-;5301:7;5328:43;5332:1;5335;5328:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5321:50;;5243:136;;;;:::o;38509:705::-;38688:18;38709:77;38716:12;38709:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;38688:98;;38818:1;38803:12;:16;;;:85;;;;;38877:11;38823:65;;:11;:22;38835:9;38823:22;;;;;;;;;;;;;;;:40;38861:1;38846:12;:16;38823:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;38803:85;38799:339;;;38954:8;38905:11;:22;38917:9;38905:22;;;;;;;;;;;;;;;:40;38943:1;38928:12;:16;38905:40;;;;;;;;;;;;;;;:46;;:57;;;;38799:339;;;39034:33;;;;;;;;39045:11;39034:33;;;;;;39058:8;39034:33;;;38995:11;:22;39007:9;38995:22;;;;;;;;;;;;;;;:36;39018:12;38995:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39125:1;39110:12;:16;39082:14;:25;39097:9;39082:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;38799:339;39176:9;39155:51;;;39187:8;39197;39155:51;;;;;;;;;;;;;;;;;;;;;;;;38509:705;;;;;:::o;39222:161::-;39297:6;39328:5;39324:1;:9;39335:12;39316:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;39316:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39373:1;39359:16;;39222:161;;;;:::o;30617:8930::-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2427800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1329",
								"checkpoints(address,uint32)": "2249",
								"decimals()": "1195",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1311",
								"getCurrentVotes(address)": "2334",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1236",
								"numCheckpoints(address)": "1317",
								"owner()": "1200",
								"renounceOwnership()": "24470",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "566572736147616D657300000000000000000000000000000000000000000000"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MLOAD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP1"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "ADD"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "PUSH",
									"value": "5645525341000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "DUP2"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "MSTORE"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19275,
									"end": 19279,
									"name": "DUP2"
								},
								{
									"begin": 19267,
									"end": 19272,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "DUP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "MLOAD"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "ADD"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP3"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP2"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "SWAP1"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "JUMPDEST"
								},
								{
									"begin": 19267,
									"end": 19279,
									"name": "POP"
								},
								{
									"begin": 19300,
									"end": 19306,
									"name": "DUP1"
								},
								{
									"begin": 19290,
									"end": 19297,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "DUP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "MLOAD"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "ADD"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP3"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP2"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "SWAP1"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "JUMPDEST"
								},
								{
									"begin": 19290,
									"end": 19306,
									"name": "POP"
								},
								{
									"begin": 19329,
									"end": 19331,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 19317,
									"end": 19326,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 19317,
									"end": 19326,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "EXP"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP2"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SLOAD"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP2"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "MUL"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "NOT"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "AND"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SWAP1"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "DUP4"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "AND"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "MUL"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "OR"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SWAP1"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "SSTORE"
								},
								{
									"begin": 19317,
									"end": 19331,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 19194,
									"end": 19339,
									"name": "POP"
								},
								{
									"begin": 29111,
									"end": 29128,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 29131,
									"end": 29141,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 29131,
									"end": 29141,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29131,
									"end": 29141,
									"name": "SHL"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "SHR"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 29131,
									"end": 29143,
									"name": "JUMPDEST"
								},
								{
									"begin": 29111,
									"end": 29143,
									"name": "SWAP1"
								},
								{
									"begin": 29111,
									"end": 29143,
									"name": "POP"
								},
								{
									"begin": 29163,
									"end": 29172,
									"name": "DUP1"
								},
								{
									"begin": 29154,
									"end": 29160,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 29154,
									"end": 29160,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "EXP"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "DUP2"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "SLOAD"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "DUP2"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "MUL"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "NOT"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "AND"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "SWAP1"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "DUP4"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "AND"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "MUL"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "OR"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "SWAP1"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "SSTORE"
								},
								{
									"begin": 29154,
									"end": 29172,
									"name": "POP"
								},
								{
									"begin": 29221,
									"end": 29230,
									"name": "DUP1"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "AND"
								},
								{
									"begin": 29217,
									"end": 29218,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "AND"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "MLOAD"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "MLOAD"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "DUP1"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "SWAP2"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "SUB"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "SWAP1"
								},
								{
									"begin": 29188,
									"end": 29231,
									"name": "LOG3"
								},
								{
									"begin": 29076,
									"end": 29239,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP"
								},
								{
									"begin": 697,
									"end": 803,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 697,
									"end": 803,
									"name": "JUMPDEST"
								},
								{
									"begin": 750,
									"end": 765,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 785,
									"end": 795,
									"name": "CALLER"
								},
								{
									"begin": 778,
									"end": 795,
									"name": "SWAP1"
								},
								{
									"begin": 778,
									"end": 795,
									"name": "POP"
								},
								{
									"begin": 697,
									"end": 803,
									"name": "SWAP1"
								},
								{
									"begin": 697,
									"end": 803,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SLOAD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "AND"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ISZERO"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "MUL"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SUB"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "AND"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DIV"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "MSTORE"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "KECCAK256"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DIV"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "LT"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPI"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "MLOAD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "NOT"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "AND"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP4"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "OR"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP6"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SSTORE"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP6"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SSTORE"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ISZERO"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPI"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "GT"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ISZERO"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPI"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "MLOAD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SSTORE"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP3"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "GT"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ISZERO"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPI"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP2"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SSTORE"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "ADD"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "POP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "SWAP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "JUMPDEST"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "DUP1"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "CODECOPY"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30617,
									"end": 39547,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7236faea072324e9486f8f38abfc6854dc0578ded9f600c1f9186b33317294b64736f6c63430006000033",
									".code": [
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "MSTORE"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "POP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "LT"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "SHR"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "GT"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "GT"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "GT"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "GT"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "EQ"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPI"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "REVERT"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "AND"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ISZERO"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPI"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP4"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "EXP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "NOT"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "AND"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MSTORE"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "ADD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP3"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "MLOAD"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "DUP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP2"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SUB"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "RETURN"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "AND"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MLOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ISZERO"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MSTORE"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "ADD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "MLOAD"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "DUP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SUB"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP1"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "RETURN"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MLOAD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP3"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MSTORE"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "ADD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "MLOAD"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "DUP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP2"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SUB"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "RETURN"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "JUMPDEST"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "JUMPDEST"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "DUP3"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "DUP2"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "MSTORE"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "ADD"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "POP"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "POP"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "SUB"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "SWAP1"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "RETURN"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "AND"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "AND"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MLOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ISZERO"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MSTORE"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "ADD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "MLOAD"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "DUP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP2"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SUB"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP1"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "RETURN"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MLOAD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP3"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "AND"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "AND"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MSTORE"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "ADD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "MLOAD"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "DUP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP2"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SUB"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "RETURN"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "AND"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MLOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ISZERO"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MSTORE"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "ADD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "MLOAD"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "DUP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SUB"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP1"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "RETURN"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "JUMPDEST"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "DUP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "DUP2"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "ADD"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "DUP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "DUP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "AND"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "ADD"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP3"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP2"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "DUP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "ADD"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP3"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP2"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "SWAP1"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "POP"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "POP"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "POP"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "JUMPDEST"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "STOP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "JUMPDEST"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "ADD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "AND"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "ADD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP3"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "JUMPDEST"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "MLOAD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP3"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "AND"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "AND"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "MSTORE"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "ADD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "MLOAD"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "DUP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SUB"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "RETURN"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "JUMPDEST"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "DUP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "DUP2"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "ADD"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "DUP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "DUP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "AND"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "ADD"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP3"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP2"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "SWAP1"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "POP"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "POP"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "POP"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "JUMPDEST"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "STOP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "JUMPDEST"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "ADD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "AND"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "ADD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP3"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "JUMPDEST"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "MLOAD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP3"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "AND"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "AND"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "MSTORE"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "ADD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "MLOAD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SUB"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "RETURN"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "AND"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP3"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MLOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP3"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MSTORE"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "ADD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "MLOAD"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "DUP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SUB"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "RETURN"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "JUMPDEST"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "JUMPDEST"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "STOP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMPDEST"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "ADD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "AND"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "ADD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP3"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "ADD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP3"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMPDEST"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "MLOAD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP3"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "MSTORE"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "ADD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "MLOAD"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "DUP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SUB"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP1"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "RETURN"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "JUMPDEST"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "ADD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "AND"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "ADD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP3"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "JUMPDEST"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MLOAD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP3"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MSTORE"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "ADD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MLOAD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SUB"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "RETURN"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "JUMPDEST"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "JUMPDEST"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "MLOAD"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "DUP1"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "DUP3"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "AND"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "AND"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "DUP2"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "MSTORE"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "ADD"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "SWAP2"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "POP"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "POP"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "MLOAD"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "DUP1"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "SWAP2"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "SUB"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "SWAP1"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "RETURN"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ISZERO"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPI"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP4"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "EXP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "NOT"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "AND"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MSTORE"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "ADD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP3"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "MLOAD"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "DUP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP2"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SUB"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "RETURN"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "AND"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MLOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ISZERO"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MSTORE"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "ADD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "MLOAD"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "DUP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SUB"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP1"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "RETURN"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "AND"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MLOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ISZERO"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MSTORE"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "ADD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "MLOAD"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "DUP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SUB"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP1"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "RETURN"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "JUMPDEST"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "ADD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "AND"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "ADD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP3"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "JUMPDEST"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "MLOAD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP3"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "MSTORE"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "ADD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "MLOAD"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "DUP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SUB"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "RETURN"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "JUMPDEST"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "AND"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "AND"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "DUP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "ADD"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP3"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP2"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "SWAP1"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "JUMPDEST"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "STOP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "AND"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "AND"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MLOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MSTORE"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "ADD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "MLOAD"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "DUP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SUB"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "RETURN"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "JUMPDEST"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "JUMPDEST"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "DUP3"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "DUP2"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "MSTORE"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "ADD"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "POP"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "POP"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "SUB"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "SWAP1"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "RETURN"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "JUMPDEST"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "AND"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP3"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "AND"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP3"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "JUMPDEST"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MLOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP4"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "AND"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "AND"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP3"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP3"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MLOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SUB"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "RETURN"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "JUMPDEST"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "DUP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "DUP2"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "ADD"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "DUP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "DUP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "AND"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "ADD"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP3"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP2"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "SWAP1"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "POP"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "POP"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "POP"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "JUMPDEST"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "STOP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMPDEST"
										},
										{
											"begin": 19446,
											"end": 19459,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19479,
											"end": 19484,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ISZERO"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "LT"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DIV"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MUL"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "KECCAK256"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SLOAD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "MSTORE"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP4"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "GT"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPI"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SUB"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "AND"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "DUP3"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "ADD"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP2"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "JUMPDEST"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "SWAP1"
										},
										{
											"begin": 19472,
											"end": 19484,
											"name": "POP"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "SWAP1"
										},
										{
											"begin": 19409,
											"end": 19492,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMPDEST"
										},
										{
											"begin": 21598,
											"end": 21602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 21624,
											"end": 21634,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "JUMPDEST"
										},
										{
											"begin": 21638,
											"end": 21645,
											"name": "DUP5"
										},
										{
											"begin": 21647,
											"end": 21653,
											"name": "DUP5"
										},
										{
											"begin": 21615,
											"end": 21623,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 21615,
											"end": 21654,
											"name": "JUMPDEST"
										},
										{
											"begin": 21672,
											"end": 21676,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21665,
											"end": 21676,
											"name": "SWAP1"
										},
										{
											"begin": 21665,
											"end": 21676,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP3"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "SWAP2"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "POP"
										},
										{
											"begin": 21515,
											"end": 21684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMPDEST"
										},
										{
											"begin": 20537,
											"end": 20544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20564,
											"end": 20576,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 20564,
											"end": 20576,
											"name": "SLOAD"
										},
										{
											"begin": 20557,
											"end": 20576,
											"name": "SWAP1"
										},
										{
											"begin": 20557,
											"end": 20576,
											"name": "POP"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "SWAP1"
										},
										{
											"begin": 20484,
											"end": 20584,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "JUMPDEST"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "CODECOPY"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "ADD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "POP"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SUB"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "KECCAK256"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "DUP2"
										},
										{
											"begin": 31963,
											"end": 32085,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMPDEST"
										},
										{
											"begin": 22264,
											"end": 22268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 22291,
											"end": 22297,
											"name": "DUP5"
										},
										{
											"begin": 22299,
											"end": 22308,
											"name": "DUP5"
										},
										{
											"begin": 22310,
											"end": 22316,
											"name": "DUP5"
										},
										{
											"begin": 22281,
											"end": 22290,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 22281,
											"end": 22317,
											"name": "JUMPDEST"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 22337,
											"end": 22343,
											"name": "DUP5"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 22345,
											"end": 22355,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 22345,
											"end": 22357,
											"name": "JUMPDEST"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 22397,
											"end": 22403,
											"name": "DUP6"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MLOAD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "CODECOPY"
										},
										{
											"begin": 22359,
											"end": 22370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22377,
											"name": "DUP12"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22359,
											"end": 22378,
											"name": "KECCAK256"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 22379,
											"end": 22389,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "JUMPDEST"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "DUP2"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "MSTORE"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "ADD"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "KECCAK256"
										},
										{
											"begin": 22359,
											"end": 22392,
											"name": "SLOAD"
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 22359,
											"end": 22396,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP3"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP2"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "SWAP1"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "AND"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 22359,
											"end": 22448,
											"name": "JUMPDEST"
										},
										{
											"begin": 22328,
											"end": 22336,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 22328,
											"end": 22449,
											"name": "JUMPDEST"
										},
										{
											"begin": 22467,
											"end": 22471,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22460,
											"end": 22471,
											"name": "SWAP1"
										},
										{
											"begin": 22460,
											"end": 22471,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP4"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "SWAP3"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "POP"
										},
										{
											"begin": 22158,
											"end": 22479,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMPDEST"
										},
										{
											"begin": 20377,
											"end": 20382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SLOAD"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "EXP"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "DIV"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "AND"
										},
										{
											"begin": 20395,
											"end": 20411,
											"name": "SWAP1"
										},
										{
											"begin": 20395,
											"end": 20411,
											"name": "POP"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "SWAP1"
										},
										{
											"begin": 20336,
											"end": 20419,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMPDEST"
										},
										{
											"begin": 22976,
											"end": 22980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 23002,
											"end": 23012,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 23002,
											"end": 23014,
											"name": "JUMPDEST"
										},
										{
											"begin": 23016,
											"end": 23023,
											"name": "DUP5"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 23064,
											"end": 23074,
											"name": "DUP6"
										},
										{
											"begin": 23025,
											"end": 23036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 23037,
											"end": 23047,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 23037,
											"end": 23049,
											"name": "JUMPDEST"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23025,
											"end": 23050,
											"name": "KECCAK256"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23051,
											"end": 23058,
											"name": "DUP10"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "DUP2"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "MSTORE"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "ADD"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "KECCAK256"
										},
										{
											"begin": 23025,
											"end": 23059,
											"name": "SLOAD"
										},
										{
											"begin": 23025,
											"end": 23063,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 23025,
											"end": 23063,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "SWAP2"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "SWAP1"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "AND"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 23025,
											"end": 23075,
											"name": "JUMPDEST"
										},
										{
											"begin": 22993,
											"end": 23001,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 22993,
											"end": 23076,
											"name": "JUMPDEST"
										},
										{
											"begin": 23094,
											"end": 23098,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23087,
											"end": 23098,
											"name": "SWAP1"
										},
										{
											"begin": 23087,
											"end": 23098,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP3"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "SWAP2"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "POP"
										},
										{
											"begin": 22888,
											"end": 23106,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "JUMPDEST"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 29542,
											"end": 29552,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMPDEST"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SLOAD"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "EXP"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "DIV"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "EQ"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPI"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "REVERT"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPDEST"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 30861,
											"end": 30864,
											"name": "DUP3"
										},
										{
											"begin": 30866,
											"end": 30873,
											"name": "DUP3"
										},
										{
											"begin": 30855,
											"end": 30860,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 30855,
											"end": 30874,
											"name": "JUMPDEST"
										},
										{
											"begin": 30885,
											"end": 30937,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 30908,
											"end": 30909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30912,
											"end": 30922,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30923,
											"end": 30926,
											"name": "DUP6"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "AND"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "AND"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "DUP2"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "MSTORE"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "ADD"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "SWAP1"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "DUP2"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "MSTORE"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "ADD"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "KECCAK256"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "SWAP1"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "SLOAD"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "SWAP1"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "EXP"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "SWAP1"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "DIV"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30912,
											"end": 30927,
											"name": "AND"
										},
										{
											"begin": 30929,
											"end": 30936,
											"name": "DUP4"
										},
										{
											"begin": 30885,
											"end": 30899,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 30885,
											"end": 30937,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30885,
											"end": 30937,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 30885,
											"end": 30937,
											"name": "JUMPDEST"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "POP"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "POP"
										},
										{
											"begin": 30783,
											"end": 30945,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "JUMPDEST"
										},
										{
											"begin": 33034,
											"end": 33041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 33066,
											"end": 33076,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 33077,
											"end": 33086,
											"name": "DUP4"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "AND"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "AND"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "DUP2"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "MSTORE"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "ADD"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "SWAP1"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "DUP2"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "MSTORE"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "ADD"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "KECCAK256"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "SWAP1"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "SLOAD"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "SWAP1"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "EXP"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "SWAP1"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "DIV"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33087,
											"name": "AND"
										},
										{
											"begin": 33059,
											"end": 33087,
											"name": "SWAP1"
										},
										{
											"begin": 33059,
											"end": 33087,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP2"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "SWAP1"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "POP"
										},
										{
											"begin": 32946,
											"end": 33095,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "JUMPDEST"
										},
										{
											"begin": 33303,
											"end": 33335,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 33313,
											"end": 33323,
											"name": "CALLER"
										},
										{
											"begin": 33325,
											"end": 33334,
											"name": "DUP3"
										},
										{
											"begin": 33303,
											"end": 33312,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 33303,
											"end": 33335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 33303,
											"end": 33335,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 33303,
											"end": 33335,
											"name": "JUMPDEST"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "POP"
										},
										{
											"begin": 33239,
											"end": 33343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "JUMPDEST"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "MSTORE"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "MSTORE"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "KECCAK256"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "POP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SLOAD"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "EXP"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "SWAP1"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DIV"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "AND"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "DUP2"
										},
										{
											"begin": 31841,
											"end": 31890,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMPDEST"
										},
										{
											"begin": 20713,
											"end": 20720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20740,
											"end": 20749,
											"name": "DUP1"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20750,
											"end": 20757,
											"name": "DUP4"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "AND"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "AND"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "DUP2"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "MSTORE"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "ADD"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "SWAP1"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "DUP2"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "MSTORE"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "ADD"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "KECCAK256"
										},
										{
											"begin": 20740,
											"end": 20758,
											"name": "SLOAD"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "SWAP1"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP2"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "SWAP1"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "POP"
										},
										{
											"begin": 20647,
											"end": 20766,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "JUMPDEST"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 29542,
											"end": 29552,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMPDEST"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SLOAD"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "EXP"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "DIV"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "EQ"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPI"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "REVERT"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPDEST"
										},
										{
											"begin": 30069,
											"end": 30070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "AND"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "SWAP1"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "SLOAD"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "SWAP1"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "EXP"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "SWAP1"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "DIV"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30053,
											"end": 30059,
											"name": "AND"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "AND"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "MLOAD"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "MLOAD"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "DUP1"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "SWAP2"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "SUB"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "SWAP1"
										},
										{
											"begin": 30032,
											"end": 30072,
											"name": "LOG3"
										},
										{
											"begin": 30100,
											"end": 30101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30083,
											"end": 30089,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 30083,
											"end": 30089,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "EXP"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "DUP2"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "SLOAD"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "DUP2"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "MUL"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "NOT"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "AND"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "SWAP1"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "DUP4"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "AND"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "MUL"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "OR"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "SWAP1"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "SSTORE"
										},
										{
											"begin": 30083,
											"end": 30102,
											"name": "POP"
										},
										{
											"begin": 29962,
											"end": 30110,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMPDEST"
										},
										{
											"begin": 35953,
											"end": 35960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36000,
											"end": 36012,
											"name": "NUMBER"
										},
										{
											"begin": 35986,
											"end": 35997,
											"name": "DUP3"
										},
										{
											"begin": 35986,
											"end": 36012,
											"name": "LT"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "JUMPI"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "MLOAD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "MSTORE"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "ADD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP1"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP1"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "ADD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP3"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SUB"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP3"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "MSTORE"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "MSTORE"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "ADD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP1"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH data",
											"value": "18FC8AF80B4A731C3CE32406A52798414AD910485CBDCE7F8EFA30829D690FF"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SWAP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "CODECOPY"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "ADD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SWAP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "POP"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "POP"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "MLOAD"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "DUP1"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SWAP2"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SUB"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "SWAP1"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "REVERT"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 35978,
											"end": 36057,
											"name": "JUMPDEST"
										},
										{
											"begin": 36070,
											"end": 36089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36092,
											"end": 36106,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36107,
											"end": 36114,
											"name": "DUP6"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "AND"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "AND"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "DUP2"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "MSTORE"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "ADD"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "SWAP1"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "DUP2"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "MSTORE"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "ADD"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "KECCAK256"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "SWAP1"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "SLOAD"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "SWAP1"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "EXP"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "SWAP1"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "DIV"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36092,
											"end": 36115,
											"name": "AND"
										},
										{
											"begin": 36070,
											"end": 36115,
											"name": "SWAP1"
										},
										{
											"begin": 36070,
											"end": 36115,
											"name": "POP"
										},
										{
											"begin": 36146,
											"end": 36147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36130,
											"end": 36142,
											"name": "DUP2"
										},
										{
											"begin": 36130,
											"end": 36147,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36130,
											"end": 36147,
											"name": "AND"
										},
										{
											"begin": 36130,
											"end": 36147,
											"name": "EQ"
										},
										{
											"begin": 36126,
											"end": 36184,
											"name": "ISZERO"
										},
										{
											"begin": 36126,
											"end": 36184,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 36126,
											"end": 36184,
											"name": "JUMPI"
										},
										{
											"begin": 36171,
											"end": 36172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36164,
											"end": 36172,
											"name": "SWAP2"
										},
										{
											"begin": 36164,
											"end": 36172,
											"name": "POP"
										},
										{
											"begin": 36164,
											"end": 36172,
											"name": "POP"
										},
										{
											"begin": 36164,
											"end": 36172,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 36164,
											"end": 36172,
											"name": "JUMP"
										},
										{
											"begin": 36126,
											"end": 36184,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 36126,
											"end": 36184,
											"name": "JUMPDEST"
										},
										{
											"begin": 36296,
											"end": 36307,
											"name": "DUP3"
										},
										{
											"begin": 36244,
											"end": 36255,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36256,
											"end": 36263,
											"name": "DUP7"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "DUP2"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "MSTORE"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "ADD"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "SWAP1"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "DUP2"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "MSTORE"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "ADD"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36244,
											"end": 36264,
											"name": "KECCAK256"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36280,
											"end": 36281,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 36265,
											"end": 36277,
											"name": "DUP5"
										},
										{
											"begin": 36265,
											"end": 36281,
											"name": "SUB"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "DUP2"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "MSTORE"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "ADD"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "SWAP1"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "DUP2"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "MSTORE"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "ADD"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36244,
											"end": 36282,
											"name": "KECCAK256"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "ADD"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "SWAP1"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "SLOAD"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "SWAP1"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "EXP"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "SWAP1"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "DIV"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36292,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36307,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36244,
											"end": 36307,
											"name": "AND"
										},
										{
											"begin": 36244,
											"end": 36307,
											"name": "GT"
										},
										{
											"begin": 36240,
											"end": 36387,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 36240,
											"end": 36387,
											"name": "JUMPI"
										},
										{
											"begin": 36331,
											"end": 36342,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36343,
											"end": 36350,
											"name": "DUP6"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "AND"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "AND"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "DUP2"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "MSTORE"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "ADD"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "SWAP1"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "DUP2"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "MSTORE"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "ADD"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36331,
											"end": 36351,
											"name": "KECCAK256"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36367,
											"end": 36368,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 36352,
											"end": 36364,
											"name": "DUP4"
										},
										{
											"begin": 36352,
											"end": 36368,
											"name": "SUB"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "AND"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "AND"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "DUP2"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "MSTORE"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "ADD"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "SWAP1"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "DUP2"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "MSTORE"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "ADD"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36331,
											"end": 36369,
											"name": "KECCAK256"
										},
										{
											"begin": 36331,
											"end": 36375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 36331,
											"end": 36375,
											"name": "ADD"
										},
										{
											"begin": 36331,
											"end": 36375,
											"name": "SLOAD"
										},
										{
											"begin": 36324,
											"end": 36375,
											"name": "SWAP2"
										},
										{
											"begin": 36324,
											"end": 36375,
											"name": "POP"
										},
										{
											"begin": 36324,
											"end": 36375,
											"name": "POP"
										},
										{
											"begin": 36324,
											"end": 36375,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 36324,
											"end": 36375,
											"name": "JUMP"
										},
										{
											"begin": 36240,
											"end": 36387,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 36240,
											"end": 36387,
											"name": "JUMPDEST"
										},
										{
											"begin": 36484,
											"end": 36495,
											"name": "DUP3"
										},
										{
											"begin": 36448,
											"end": 36459,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36460,
											"end": 36467,
											"name": "DUP7"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "AND"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "AND"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "DUP2"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "MSTORE"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "ADD"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "SWAP1"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "DUP2"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "MSTORE"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "ADD"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36468,
											"name": "KECCAK256"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36469,
											"end": 36470,
											"name": "DUP1"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "AND"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "DUP2"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "MSTORE"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "ADD"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "SWAP1"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "DUP2"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "MSTORE"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "ADD"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36471,
											"name": "KECCAK256"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "ADD"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "SWAP1"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "SLOAD"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "SWAP1"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "EXP"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "SWAP1"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "DIV"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36448,
											"end": 36481,
											"name": "AND"
										},
										{
											"begin": 36448,
											"end": 36495,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36448,
											"end": 36495,
											"name": "AND"
										},
										{
											"begin": 36448,
											"end": 36495,
											"name": "GT"
										},
										{
											"begin": 36444,
											"end": 36532,
											"name": "ISZERO"
										},
										{
											"begin": 36444,
											"end": 36532,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 36444,
											"end": 36532,
											"name": "JUMPI"
										},
										{
											"begin": 36519,
											"end": 36520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36512,
											"end": 36520,
											"name": "SWAP2"
										},
										{
											"begin": 36512,
											"end": 36520,
											"name": "POP"
										},
										{
											"begin": 36512,
											"end": 36520,
											"name": "POP"
										},
										{
											"begin": 36512,
											"end": 36520,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 36512,
											"end": 36520,
											"name": "JUMP"
										},
										{
											"begin": 36444,
											"end": 36532,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 36444,
											"end": 36532,
											"name": "JUMPDEST"
										},
										{
											"begin": 36544,
											"end": 36556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36559,
											"end": 36560,
											"name": "DUP1"
										},
										{
											"begin": 36544,
											"end": 36560,
											"name": "SWAP1"
										},
										{
											"begin": 36544,
											"end": 36560,
											"name": "POP"
										},
										{
											"begin": 36571,
											"end": 36583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36601,
											"end": 36602,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 36586,
											"end": 36598,
											"name": "DUP4"
										},
										{
											"begin": 36586,
											"end": 36602,
											"name": "SUB"
										},
										{
											"begin": 36571,
											"end": 36602,
											"name": "SWAP1"
										},
										{
											"begin": 36571,
											"end": 36602,
											"name": "POP"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "JUMPDEST"
										},
										{
											"begin": 36628,
											"end": 36633,
											"name": "DUP2"
										},
										{
											"begin": 36620,
											"end": 36633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36620,
											"end": 36633,
											"name": "AND"
										},
										{
											"begin": 36620,
											"end": 36625,
											"name": "DUP2"
										},
										{
											"begin": 36620,
											"end": 36633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36620,
											"end": 36633,
											"name": "AND"
										},
										{
											"begin": 36620,
											"end": 36633,
											"name": "GT"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "ISZERO"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "JUMPI"
										},
										{
											"begin": 36650,
											"end": 36663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36692,
											"end": 36693,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 36683,
											"end": 36688,
											"name": "DUP4"
										},
										{
											"begin": 36675,
											"end": 36680,
											"name": "DUP4"
										},
										{
											"begin": 36675,
											"end": 36688,
											"name": "SUB"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "AND"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "DUP2"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "JUMPI"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "INVALID"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "JUMPDEST"
										},
										{
											"begin": 36674,
											"end": 36693,
											"name": "DIV"
										},
										{
											"begin": 36666,
											"end": 36671,
											"name": "DUP3"
										},
										{
											"begin": 36666,
											"end": 36693,
											"name": "SUB"
										},
										{
											"begin": 36650,
											"end": 36693,
											"name": "SWAP1"
										},
										{
											"begin": 36650,
											"end": 36693,
											"name": "POP"
										},
										{
											"begin": 36735,
											"end": 36755,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 36735,
											"end": 36755,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 36735,
											"end": 36755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 36735,
											"end": 36755,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 36735,
											"end": 36755,
											"name": "JUMPDEST"
										},
										{
											"begin": 36758,
											"end": 36769,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36770,
											"end": 36777,
											"name": "DUP10"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "AND"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "AND"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "DUP2"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "MSTORE"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "ADD"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "SWAP1"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "DUP2"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "MSTORE"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "ADD"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36758,
											"end": 36778,
											"name": "KECCAK256"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36779,
											"end": 36785,
											"name": "DUP4"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "AND"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "AND"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "DUP2"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "MSTORE"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "DUP2"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "MSTORE"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36758,
											"end": 36786,
											"name": "KECCAK256"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "MLOAD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "MSTORE"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP2"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP3"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SLOAD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "EXP"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DIV"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "AND"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "AND"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "AND"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP2"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "MSTORE"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP3"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "ADD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SLOAD"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "DUP2"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "MSTORE"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "POP"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "POP"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "SWAP1"
										},
										{
											"begin": 36735,
											"end": 36786,
											"name": "POP"
										},
										{
											"begin": 36821,
											"end": 36832,
											"name": "DUP7"
										},
										{
											"begin": 36805,
											"end": 36807,
											"name": "DUP2"
										},
										{
											"begin": 36805,
											"end": 36817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36805,
											"end": 36817,
											"name": "ADD"
										},
										{
											"begin": 36805,
											"end": 36817,
											"name": "MLOAD"
										},
										{
											"begin": 36805,
											"end": 36832,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36805,
											"end": 36832,
											"name": "AND"
										},
										{
											"begin": 36805,
											"end": 36832,
											"name": "EQ"
										},
										{
											"begin": 36801,
											"end": 37030,
											"name": "ISZERO"
										},
										{
											"begin": 36801,
											"end": 37030,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 36801,
											"end": 37030,
											"name": "JUMPI"
										},
										{
											"begin": 36860,
											"end": 36862,
											"name": "DUP1"
										},
										{
											"begin": 36860,
											"end": 36868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 36860,
											"end": 36868,
											"name": "ADD"
										},
										{
											"begin": 36860,
											"end": 36868,
											"name": "MLOAD"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "SWAP6"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "POP"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 36853,
											"end": 36868,
											"name": "JUMP"
										},
										{
											"begin": 36801,
											"end": 37030,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 36801,
											"end": 37030,
											"name": "JUMPDEST"
										},
										{
											"begin": 36909,
											"end": 36920,
											"name": "DUP7"
										},
										{
											"begin": 36894,
											"end": 36896,
											"name": "DUP2"
										},
										{
											"begin": 36894,
											"end": 36906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36894,
											"end": 36906,
											"name": "ADD"
										},
										{
											"begin": 36894,
											"end": 36906,
											"name": "MLOAD"
										},
										{
											"begin": 36894,
											"end": 36920,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36894,
											"end": 36920,
											"name": "AND"
										},
										{
											"begin": 36894,
											"end": 36920,
											"name": "LT"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "ISZERO"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "JUMPI"
										},
										{
											"begin": 36949,
											"end": 36955,
											"name": "DUP2"
										},
										{
											"begin": 36941,
											"end": 36955,
											"name": "SWAP4"
										},
										{
											"begin": 36941,
											"end": 36955,
											"name": "POP"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "JUMP"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "JUMPDEST"
										},
										{
											"begin": 37013,
											"end": 37014,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 37004,
											"end": 37010,
											"name": "DUP3"
										},
										{
											"begin": 37004,
											"end": 37014,
											"name": "SUB"
										},
										{
											"begin": 36996,
											"end": 37014,
											"name": "SWAP3"
										},
										{
											"begin": 36996,
											"end": 37014,
											"name": "POP"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 36890,
											"end": 37030,
											"name": "JUMPDEST"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "POP"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "POP"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "JUMP"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 36613,
											"end": 37041,
											"name": "JUMPDEST"
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37070,
											"end": 37077,
											"name": "DUP8"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "AND"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "AND"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "DUP2"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "MSTORE"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "ADD"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "SWAP1"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "DUP2"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "MSTORE"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "ADD"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "KECCAK256"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37079,
											"end": 37084,
											"name": "DUP4"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "AND"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "AND"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "DUP2"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "MSTORE"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "ADD"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "SWAP1"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "DUP2"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "MSTORE"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "ADD"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37058,
											"end": 37085,
											"name": "KECCAK256"
										},
										{
											"begin": 37058,
											"end": 37091,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 37058,
											"end": 37091,
											"name": "ADD"
										},
										{
											"begin": 37058,
											"end": 37091,
											"name": "SLOAD"
										},
										{
											"begin": 37051,
											"end": 37091,
											"name": "SWAP4"
										},
										{
											"begin": 37051,
											"end": 37091,
											"name": "POP"
										},
										{
											"begin": 37051,
											"end": 37091,
											"name": "POP"
										},
										{
											"begin": 37051,
											"end": 37091,
											"name": "POP"
										},
										{
											"begin": 37051,
											"end": 37091,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMPDEST"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP3"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "SWAP2"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "POP"
										},
										{
											"begin": 35845,
											"end": 37099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "JUMPDEST"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MSTORE"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "MSTORE"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "KECCAK256"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SWAP1"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "POP"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "SLOAD"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "DUP2"
										},
										{
											"begin": 32377,
											"end": 32416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "JUMPDEST"
										},
										{
											"begin": 29358,
											"end": 29365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "SWAP1"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "SLOAD"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "SWAP1"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "EXP"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "SWAP1"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "DIV"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29385,
											"end": 29391,
											"name": "AND"
										},
										{
											"begin": 29378,
											"end": 29391,
											"name": "SWAP1"
										},
										{
											"begin": 29378,
											"end": 29391,
											"name": "POP"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "SWAP1"
										},
										{
											"begin": 29320,
											"end": 29399,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMPDEST"
										},
										{
											"begin": 19650,
											"end": 19663,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19683,
											"end": 19690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ISZERO"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "LT"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DIV"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MUL"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "KECCAK256"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SLOAD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "MSTORE"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP4"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "GT"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPI"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SUB"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "AND"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "DUP3"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "ADD"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP2"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "JUMPDEST"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "SWAP1"
										},
										{
											"begin": 19676,
											"end": 19690,
											"name": "POP"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "SWAP1"
										},
										{
											"begin": 19611,
											"end": 19698,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMPDEST"
										},
										{
											"begin": 23702,
											"end": 23706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 23728,
											"end": 23738,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 23728,
											"end": 23740,
											"name": "JUMPDEST"
										},
										{
											"begin": 23742,
											"end": 23749,
											"name": "DUP5"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 23790,
											"end": 23805,
											"name": "DUP6"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MLOAD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "CODECOPY"
										},
										{
											"begin": 23751,
											"end": 23762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 23763,
											"end": 23773,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "JUMPDEST"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23751,
											"end": 23776,
											"name": "KECCAK256"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23777,
											"end": 23784,
											"name": "DUP11"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "DUP2"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "MSTORE"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "ADD"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "KECCAK256"
										},
										{
											"begin": 23751,
											"end": 23785,
											"name": "SLOAD"
										},
										{
											"begin": 23751,
											"end": 23789,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 23751,
											"end": 23789,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP3"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP2"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "SWAP1"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "AND"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 23751,
											"end": 23847,
											"name": "JUMPDEST"
										},
										{
											"begin": 23719,
											"end": 23727,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 23719,
											"end": 23848,
											"name": "JUMPDEST"
										},
										{
											"begin": 23866,
											"end": 23870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23859,
											"end": 23870,
											"name": "SWAP1"
										},
										{
											"begin": 23859,
											"end": 23870,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP3"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "SWAP2"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "POP"
										},
										{
											"begin": 23609,
											"end": 23878,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMPDEST"
										},
										{
											"begin": 21065,
											"end": 21069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 21092,
											"end": 21102,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 21092,
											"end": 21104,
											"name": "JUMPDEST"
										},
										{
											"begin": 21106,
											"end": 21115,
											"name": "DUP5"
										},
										{
											"begin": 21117,
											"end": 21123,
											"name": "DUP5"
										},
										{
											"begin": 21082,
											"end": 21091,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 21082,
											"end": 21124,
											"name": "JUMPDEST"
										},
										{
											"begin": 21142,
											"end": 21146,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21135,
											"end": 21146,
											"name": "SWAP1"
										},
										{
											"begin": 21135,
											"end": 21146,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP3"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "SWAP2"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "POP"
										},
										{
											"begin": 20979,
											"end": 21154,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "JUMPDEST"
										},
										{
											"begin": 35251,
											"end": 35258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35276,
											"end": 35295,
											"name": "DUP1"
										},
										{
											"begin": 35298,
											"end": 35312,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35313,
											"end": 35320,
											"name": "DUP5"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "AND"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "AND"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "DUP2"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "MSTORE"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "ADD"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "SWAP1"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "DUP2"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "MSTORE"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "ADD"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "KECCAK256"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "SWAP1"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "SLOAD"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "SWAP1"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "EXP"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "SWAP1"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "DIV"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 35298,
											"end": 35321,
											"name": "AND"
										},
										{
											"begin": 35276,
											"end": 35321,
											"name": "SWAP1"
										},
										{
											"begin": 35276,
											"end": 35321,
											"name": "POP"
										},
										{
											"begin": 35354,
											"end": 35355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35339,
											"end": 35351,
											"name": "DUP2"
										},
										{
											"begin": 35339,
											"end": 35355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 35339,
											"end": 35355,
											"name": "AND"
										},
										{
											"begin": 35339,
											"end": 35355,
											"name": "GT"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "JUMPI"
										},
										{
											"begin": 35405,
											"end": 35406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "JUMP"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "JUMPDEST"
										},
										{
											"begin": 35358,
											"end": 35369,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35370,
											"end": 35377,
											"name": "DUP5"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "AND"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "AND"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "DUP2"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "MSTORE"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "ADD"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "SWAP1"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "DUP2"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "MSTORE"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "ADD"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35358,
											"end": 35378,
											"name": "KECCAK256"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35395,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 35379,
											"end": 35391,
											"name": "DUP4"
										},
										{
											"begin": 35379,
											"end": 35395,
											"name": "SUB"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "AND"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "AND"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "DUP2"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "MSTORE"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "ADD"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "SWAP1"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "DUP2"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "MSTORE"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "ADD"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35358,
											"end": 35396,
											"name": "KECCAK256"
										},
										{
											"begin": 35358,
											"end": 35402,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 35358,
											"end": 35402,
											"name": "ADD"
										},
										{
											"begin": 35358,
											"end": 35402,
											"name": "SLOAD"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 35339,
											"end": 35406,
											"name": "JUMPDEST"
										},
										{
											"begin": 35332,
											"end": 35406,
											"name": "SWAP2"
										},
										{
											"begin": 35332,
											"end": 35406,
											"name": "POP"
										},
										{
											"begin": 35332,
											"end": 35406,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP2"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "SWAP1"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "POP"
										},
										{
											"begin": 35159,
											"end": 35414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "JUMPDEST"
										},
										{
											"begin": 33970,
											"end": 33993,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "CODECOPY"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "ADD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "POP"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "MLOAD"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "DUP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP2"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SUB"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "SWAP1"
										},
										{
											"begin": 32005,
											"end": 32085,
											"name": "KECCAK256"
										},
										{
											"begin": 34099,
											"end": 34105,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 34099,
											"end": 34103,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 34099,
											"end": 34105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 34099,
											"end": 34105,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 34099,
											"end": 34105,
											"name": "JUMPDEST"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "DUP1"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "MLOAD"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "SWAP1"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "ADD"
										},
										{
											"begin": 34083,
											"end": 34107,
											"name": "KECCAK256"
										},
										{
											"begin": 34126,
											"end": 34138,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 34126,
											"end": 34136,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 34126,
											"end": 34138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 34126,
											"end": 34138,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 34126,
											"end": 34138,
											"name": "JUMPDEST"
										},
										{
											"begin": 34165,
											"end": 34169,
											"name": "ADDRESS"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MLOAD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "ADD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP1"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP6"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP2"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MSTORE"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "ADD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP5"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP2"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MSTORE"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "ADD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP4"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP2"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MSTORE"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "ADD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP3"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "AND"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "AND"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "DUP2"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MSTORE"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "ADD"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "SWAP5"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "POP"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "POP"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "POP"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "POP"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "POP"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "SWAP1"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34020,
											"end": 34185,
											"name": "MSTORE"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "DUP1"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "MLOAD"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "SWAP1"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "ADD"
										},
										{
											"begin": 33996,
											"end": 34196,
											"name": "KECCAK256"
										},
										{
											"begin": 33970,
											"end": 34196,
											"name": "SWAP1"
										},
										{
											"begin": 33970,
											"end": 34196,
											"name": "POP"
										},
										{
											"begin": 34209,
											"end": 34227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "CODECOPY"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "ADD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "POP"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SUB"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "KECCAK256"
										},
										{
											"begin": 34321,
											"end": 34330,
											"name": "DUP9"
										},
										{
											"begin": 34349,
											"end": 34354,
											"name": "DUP9"
										},
										{
											"begin": 34373,
											"end": 34379,
											"name": "DUP9"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MLOAD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "ADD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP1"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP6"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP2"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MSTORE"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "ADD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP5"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "AND"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "AND"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP2"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MSTORE"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "ADD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP4"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP2"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MSTORE"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "ADD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP3"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "DUP2"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MSTORE"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "ADD"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "SWAP5"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "POP"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "POP"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "POP"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "POP"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "POP"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "SWAP1"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34254,
											"end": 34394,
											"name": "MSTORE"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "DUP1"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "MLOAD"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "SWAP1"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "ADD"
										},
										{
											"begin": 34230,
											"end": 34405,
											"name": "KECCAK256"
										},
										{
											"begin": 34209,
											"end": 34405,
											"name": "SWAP1"
										},
										{
											"begin": 34209,
											"end": 34405,
											"name": "POP"
										},
										{
											"begin": 34418,
											"end": 34432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34523,
											"end": 34538,
											"name": "DUP3"
										},
										{
											"begin": 34557,
											"end": 34567,
											"name": "DUP3"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MLOAD"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "ADD"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP1"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP1"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP2"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MSTORE"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "POP"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "ADD"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP4"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP2"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MSTORE"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "ADD"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP3"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "DUP2"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MSTORE"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "ADD"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "SWAP3"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "POP"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "POP"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "POP"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "SWAP1"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34459,
											"end": 34582,
											"name": "MSTORE"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "DUP1"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "MLOAD"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "SWAP1"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "ADD"
										},
										{
											"begin": 34435,
											"end": 34593,
											"name": "KECCAK256"
										},
										{
											"begin": 34418,
											"end": 34593,
											"name": "SWAP1"
										},
										{
											"begin": 34418,
											"end": 34593,
											"name": "POP"
										},
										{
											"begin": 34606,
											"end": 34623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 34636,
											"end": 34642,
											"name": "DUP3"
										},
										{
											"begin": 34644,
											"end": 34645,
											"name": "DUP9"
										},
										{
											"begin": 34647,
											"end": 34648,
											"name": "DUP9"
										},
										{
											"begin": 34650,
											"end": 34651,
											"name": "DUP9"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MLOAD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ADD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MLOAD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP1"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP6"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ADD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP5"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "AND"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "AND"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ADD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP4"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ADD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP3"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MSTORE"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ADD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SWAP5"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MLOAD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP2"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SUB"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SWAP1"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP1"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP5"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SUB"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SWAP1"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "DUP6"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "GAS"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "STATICCALL"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MLOAD"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "SUB"
										},
										{
											"begin": 34626,
											"end": 34652,
											"name": "MLOAD"
										},
										{
											"begin": 34606,
											"end": 34652,
											"name": "SWAP1"
										},
										{
											"begin": 34606,
											"end": 34652,
											"name": "POP"
										},
										{
											"begin": 34692,
											"end": 34693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "AND"
										},
										{
											"begin": 34671,
											"end": 34680,
											"name": "DUP2"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "AND"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "EQ"
										},
										{
											"begin": 34671,
											"end": 34694,
											"name": "ISZERO"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "JUMPI"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "MLOAD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "MSTORE"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "ADD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP1"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP1"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "ADD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP3"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SUB"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP3"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "MSTORE"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "MSTORE"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "ADD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP1"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH data",
											"value": "C7A1BA371AF039472495F9BD83D8F06DFD4A777A3CF4068DFD1D7962F1FE8006"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SWAP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "CODECOPY"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "ADD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SWAP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "POP"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "POP"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "MLOAD"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "DUP1"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SWAP2"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SUB"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "SWAP1"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "REVERT"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 34663,
											"end": 34738,
											"name": "JUMPDEST"
										},
										{
											"begin": 34766,
											"end": 34772,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34773,
											"end": 34782,
											"name": "DUP3"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "AND"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "AND"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "DUP2"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "MSTORE"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "ADD"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "SWAP1"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "DUP2"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "MSTORE"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "ADD"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "KECCAK256"
										},
										{
											"begin": 34766,
											"end": 34783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "DUP2"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SLOAD"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "DUP1"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SWAP3"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SWAP2"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SWAP1"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "ADD"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SWAP2"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SWAP1"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "POP"
										},
										{
											"begin": 34766,
											"end": 34785,
											"name": "SSTORE"
										},
										{
											"begin": 34757,
											"end": 34762,
											"name": "DUP10"
										},
										{
											"begin": 34757,
											"end": 34785,
											"name": "EQ"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "JUMPI"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "MLOAD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "MSTORE"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "ADD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP1"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP1"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "ADD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP3"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SUB"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP3"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "MSTORE"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "MSTORE"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "ADD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP1"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH data",
											"value": "E7CF3B87E0CFF2B4AC778FCC8C3CE968F02C806BAEC2B92C1C391D868475F013"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SWAP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "CODECOPY"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "ADD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SWAP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "POP"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "POP"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "MLOAD"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "DUP1"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SWAP2"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SUB"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "SWAP1"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "REVERT"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 34749,
											"end": 34825,
											"name": "JUMPDEST"
										},
										{
											"begin": 34851,
											"end": 34857,
											"name": "DUP8"
										},
										{
											"begin": 34844,
											"end": 34847,
											"name": "TIMESTAMP"
										},
										{
											"begin": 34844,
											"end": 34857,
											"name": "GT"
										},
										{
											"begin": 34844,
											"end": 34857,
											"name": "ISZERO"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "JUMPI"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "MLOAD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "MSTORE"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "ADD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "ADD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP3"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SUB"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP3"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "MSTORE"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "MSTORE"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "ADD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH data",
											"value": "35BBD66A404ECAB5400EA987B29286FDE22B2E9272C10E62471021D1506FE2C1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SWAP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "CODECOPY"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "ADD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SWAP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "POP"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "POP"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "MLOAD"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "DUP1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SWAP2"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SUB"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "SWAP1"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "REVERT"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 34836,
											"end": 34901,
											"name": "JUMPDEST"
										},
										{
											"begin": 34919,
											"end": 34950,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 34929,
											"end": 34938,
											"name": "DUP2"
										},
										{
											"begin": 34940,
											"end": 34949,
											"name": "DUP12"
										},
										{
											"begin": 34919,
											"end": 34928,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 34919,
											"end": 34950,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 34919,
											"end": 34950,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 34919,
											"end": 34950,
											"name": "JUMPDEST"
										},
										{
											"begin": 34912,
											"end": 34950,
											"name": "POP"
										},
										{
											"begin": 34912,
											"end": 34950,
											"name": "POP"
										},
										{
											"begin": 34912,
											"end": 34950,
											"name": "POP"
										},
										{
											"begin": 34912,
											"end": 34950,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "POP"
										},
										{
											"begin": 33777,
											"end": 34958,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21306,
											"end": 21313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21344,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21345,
											"end": 21350,
											"name": "DUP5"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21352,
											"end": 21359,
											"name": "DUP4"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21360,
											"name": "SLOAD"
										},
										{
											"begin": 21326,
											"end": 21360,
											"name": "SWAP1"
										},
										{
											"begin": 21326,
											"end": 21360,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP3"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21217,
											"end": 21368,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "JUMPDEST"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "CODECOPY"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "ADD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "POP"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "MLOAD"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "DUP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP2"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SUB"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "SWAP1"
										},
										{
											"begin": 32225,
											"end": 32296,
											"name": "KECCAK256"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "DUP2"
										},
										{
											"begin": 32179,
											"end": 32296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "JUMPDEST"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "KECCAK256"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "MSTORE"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "KECCAK256"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP2"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SLOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "EXP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DIV"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "AND"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "ADD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SLOAD"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "SWAP1"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "POP"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "DUP3"
										},
										{
											"begin": 31702,
											"end": 31772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "JUMPDEST"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 29542,
											"end": 29552,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 29542,
											"end": 29554,
											"name": "JUMPDEST"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SLOAD"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "EXP"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "SWAP1"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "DIV"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29538,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "AND"
										},
										{
											"begin": 29532,
											"end": 29554,
											"name": "EQ"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPI"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP3"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MSTORE"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "ADD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "POP"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "MLOAD"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "DUP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP2"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SUB"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "SWAP1"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "REVERT"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 29524,
											"end": 29591,
											"name": "JUMPDEST"
										},
										{
											"begin": 30374,
											"end": 30375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "AND"
										},
										{
											"begin": 30354,
											"end": 30362,
											"name": "DUP2"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "AND"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "EQ"
										},
										{
											"begin": 30354,
											"end": 30376,
											"name": "ISZERO"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "JUMPI"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "MLOAD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "MSTORE"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "ADD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP1"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP1"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "ADD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP3"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SUB"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP3"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "MSTORE"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "MSTORE"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "ADD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP1"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SWAP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "CODECOPY"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "ADD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SWAP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "POP"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "POP"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "MLOAD"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "DUP1"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SWAP2"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SUB"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "SWAP1"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "REVERT"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 30346,
											"end": 30419,
											"name": "JUMPDEST"
										},
										{
											"begin": 30464,
											"end": 30472,
											"name": "DUP1"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "AND"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "SWAP1"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "SLOAD"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "SWAP1"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "EXP"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "SWAP1"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "DIV"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30456,
											"end": 30462,
											"name": "AND"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "AND"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "MLOAD"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "MLOAD"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "DUP1"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "SWAP2"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "SUB"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "SWAP1"
										},
										{
											"begin": 30435,
											"end": 30473,
											"name": "LOG3"
										},
										{
											"begin": 30493,
											"end": 30501,
											"name": "DUP1"
										},
										{
											"begin": 30484,
											"end": 30490,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 30484,
											"end": 30490,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "EXP"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "DUP2"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "SLOAD"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "DUP2"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "MUL"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "NOT"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "AND"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "SWAP1"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "DUP4"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "AND"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "MUL"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "OR"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "SWAP1"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "SSTORE"
										},
										{
											"begin": 30484,
											"end": 30501,
											"name": "POP"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "POP"
										},
										{
											"begin": 30265,
											"end": 30509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 795,
											"name": "CALLER"
										},
										{
											"begin": 778,
											"end": 795,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "JUMPDEST"
										},
										{
											"begin": 26875,
											"end": 26876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "AND"
										},
										{
											"begin": 26858,
											"end": 26863,
											"name": "DUP4"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "AND"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "EQ"
										},
										{
											"begin": 26858,
											"end": 26877,
											"name": "ISZERO"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "JUMPI"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MLOAD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP3"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SUB"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP3"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MSTORE"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "CODECOPY"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "ADD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "POP"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "POP"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "MLOAD"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "DUP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP2"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SUB"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "SWAP1"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "REVERT"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 26850,
											"end": 26918,
											"name": "JUMPDEST"
										},
										{
											"begin": 26956,
											"end": 26957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "AND"
										},
										{
											"begin": 26937,
											"end": 26944,
											"name": "DUP3"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "AND"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "EQ"
										},
										{
											"begin": 26937,
											"end": 26958,
											"name": "ISZERO"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "JUMPI"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MLOAD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP3"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SUB"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP3"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MSTORE"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "CODECOPY"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "ADD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "POP"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "POP"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "MLOAD"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "DUP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP2"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SUB"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "SWAP1"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "REVERT"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 26929,
											"end": 26997,
											"name": "JUMPDEST"
										},
										{
											"begin": 27040,
											"end": 27046,
											"name": "DUP1"
										},
										{
											"begin": 27010,
											"end": 27021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27022,
											"end": 27027,
											"name": "DUP6"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "KECCAK256"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27029,
											"end": 27036,
											"name": "DUP5"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "AND"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "MSTORE"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "ADD"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27010,
											"end": 27037,
											"name": "KECCAK256"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "DUP2"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "SWAP1"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "SSTORE"
										},
										{
											"begin": 27010,
											"end": 27046,
											"name": "POP"
										},
										{
											"begin": 27078,
											"end": 27085,
											"name": "DUP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "AND"
										},
										{
											"begin": 27071,
											"end": 27076,
											"name": "DUP4"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "AND"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 27087,
											"end": 27093,
											"name": "DUP4"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MLOAD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP3"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MSTORE"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "ADD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "POP"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "POP"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "MLOAD"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "DUP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP2"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SUB"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "SWAP1"
										},
										{
											"begin": 27062,
											"end": 27094,
											"name": "LOG3"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "POP"
										},
										{
											"begin": 26756,
											"end": 27102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "JUMPDEST"
										},
										{
											"begin": 24492,
											"end": 24493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "AND"
										},
										{
											"begin": 24474,
											"end": 24480,
											"name": "DUP4"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "AND"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "EQ"
										},
										{
											"begin": 24474,
											"end": 24494,
											"name": "ISZERO"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "JUMPI"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MLOAD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP3"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SUB"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP3"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MSTORE"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "CODECOPY"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "ADD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "POP"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "POP"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "MLOAD"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "DUP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP2"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SUB"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "SWAP1"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "REVERT"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 24466,
											"end": 24536,
											"name": "JUMPDEST"
										},
										{
											"begin": 24576,
											"end": 24577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "AND"
										},
										{
											"begin": 24555,
											"end": 24564,
											"name": "DUP3"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "AND"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "EQ"
										},
										{
											"begin": 24555,
											"end": 24578,
											"name": "ISZERO"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "JUMPI"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MLOAD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP3"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SUB"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP3"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MSTORE"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "CODECOPY"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "ADD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "POP"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "POP"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "MLOAD"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "DUP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP2"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SUB"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "SWAP1"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "REVERT"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 24547,
											"end": 24618,
											"name": "JUMPDEST"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 24652,
											"end": 24658,
											"name": "DUP4"
										},
										{
											"begin": 24660,
											"end": 24669,
											"name": "DUP4"
										},
										{
											"begin": 24671,
											"end": 24677,
											"name": "DUP4"
										},
										{
											"begin": 24631,
											"end": 24651,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 24631,
											"end": 24678,
											"name": "JUMPDEST"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 24733,
											"end": 24739,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MLOAD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "CODECOPY"
										},
										{
											"begin": 24711,
											"end": 24720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP1"
										},
										{
											"begin": 24721,
											"end": 24727,
											"name": "DUP8"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "DUP2"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "MSTORE"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "ADD"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "KECCAK256"
										},
										{
											"begin": 24711,
											"end": 24728,
											"name": "SLOAD"
										},
										{
											"begin": 24711,
											"end": 24732,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 24711,
											"end": 24732,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP3"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP2"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "SWAP1"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "AND"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 24711,
											"end": 24782,
											"name": "JUMPDEST"
										},
										{
											"begin": 24691,
											"end": 24700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP1"
										},
										{
											"begin": 24701,
											"end": 24707,
											"name": "DUP6"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "AND"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "AND"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "MSTORE"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "ADD"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "SWAP1"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "MSTORE"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "ADD"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24691,
											"end": 24708,
											"name": "KECCAK256"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "DUP2"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "SWAP1"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "SSTORE"
										},
										{
											"begin": 24691,
											"end": 24782,
											"name": "POP"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 24841,
											"end": 24847,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP1"
										},
										{
											"begin": 24826,
											"end": 24835,
											"name": "DUP6"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "MSTORE"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "ADD"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "DUP2"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "MSTORE"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "ADD"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "KECCAK256"
										},
										{
											"begin": 24816,
											"end": 24836,
											"name": "SLOAD"
										},
										{
											"begin": 24816,
											"end": 24840,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 24816,
											"end": 24840,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "SWAP2"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "SWAP1"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "AND"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 24816,
											"end": 24848,
											"name": "JUMPDEST"
										},
										{
											"begin": 24793,
											"end": 24802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP1"
										},
										{
											"begin": 24803,
											"end": 24812,
											"name": "DUP5"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "AND"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "AND"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "MSTORE"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "ADD"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "SWAP1"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "MSTORE"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "ADD"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24793,
											"end": 24813,
											"name": "KECCAK256"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "DUP2"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "SWAP1"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "SSTORE"
										},
										{
											"begin": 24793,
											"end": 24848,
											"name": "POP"
										},
										{
											"begin": 24881,
											"end": 24890,
											"name": "DUP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "AND"
										},
										{
											"begin": 24873,
											"end": 24879,
											"name": "DUP4"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "AND"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24892,
											"end": 24898,
											"name": "DUP4"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MLOAD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP3"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MSTORE"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "ADD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "POP"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "POP"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "MLOAD"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "DUP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP2"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SUB"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "SWAP1"
										},
										{
											"begin": 24864,
											"end": 24899,
											"name": "LOG3"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "POP"
										},
										{
											"begin": 24368,
											"end": 24907,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "JUMPDEST"
										},
										{
											"begin": 5768,
											"end": 5775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "DUP4"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "DUP4"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "GT"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "ISZERO"
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPI"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ISZERO"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPI"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "EXP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "NOT"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "AND"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MSTORE"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "ADD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP3"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "MLOAD"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "REVERT"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5828,
											"end": 5837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "DUP4"
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "DUP6"
										},
										{
											"begin": 5840,
											"end": 5845,
											"name": "SUB"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "SWAP1"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "POP"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "DUP1"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "SWAP2"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "POP"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "SWAP4"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "SWAP3"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5682,
											"end": 5874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 4837,
											"end": 4844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4866,
											"name": "DUP1"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "DUP3"
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "DUP5"
										},
										{
											"begin": 4869,
											"end": 4874,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "SWAP1"
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "POP"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "DUP4"
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "DUP2"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "LT"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "ISZERO"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP3"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SUB"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP3"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SUB"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "SWAP1"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "REVERT"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 4885,
											"end": 4931,
											"name": "JUMPDEST"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP1"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "SWAP2"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4944,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "SWAP3"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "SWAP2"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "POP"
										},
										{
											"begin": 4779,
											"end": 4960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25188,
											"end": 25566,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 25188,
											"end": 25566,
											"name": "JUMPDEST"
										},
										{
											"begin": 25291,
											"end": 25292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "AND"
										},
										{
											"begin": 25272,
											"end": 25279,
											"name": "DUP3"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "AND"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "EQ"
										},
										{
											"begin": 25272,
											"end": 25293,
											"name": "ISZERO"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "JUMPI"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MLOAD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MSTORE"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "ADD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP1"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP1"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "ADD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP3"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "SUB"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP3"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MSTORE"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MSTORE"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "ADD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP1"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MSTORE"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "POP"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "ADD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "SWAP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "POP"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "POP"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "MLOAD"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "DUP1"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "SWAP2"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "SUB"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "SWAP1"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "REVERT"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 25264,
											"end": 25329,
											"name": "JUMPDEST"
										},
										{
											"begin": 25342,
											"end": 25391,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 25371,
											"end": 25372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25375,
											"end": 25382,
											"name": "DUP4"
										},
										{
											"begin": 25384,
											"end": 25390,
											"name": "DUP4"
										},
										{
											"begin": 25342,
											"end": 25362,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 25342,
											"end": 25391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25342,
											"end": 25391,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 25342,
											"end": 25391,
											"name": "JUMPDEST"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 25436,
											"end": 25442,
											"name": "DUP2"
										},
										{
											"begin": 25419,
											"end": 25431,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25419,
											"end": 25431,
											"name": "SLOAD"
										},
										{
											"begin": 25419,
											"end": 25435,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 25419,
											"end": 25435,
											"name": "SWAP1"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "SWAP2"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "SWAP1"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "AND"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 25419,
											"end": 25443,
											"name": "JUMPDEST"
										},
										{
											"begin": 25404,
											"end": 25416,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 25404,
											"end": 25443,
											"name": "DUP2"
										},
										{
											"begin": 25404,
											"end": 25443,
											"name": "SWAP1"
										},
										{
											"begin": 25404,
											"end": 25443,
											"name": "SSTORE"
										},
										{
											"begin": 25404,
											"end": 25443,
											"name": "POP"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 25498,
											"end": 25504,
											"name": "DUP2"
										},
										{
											"begin": 25475,
											"end": 25484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "DUP1"
										},
										{
											"begin": 25485,
											"end": 25492,
											"name": "DUP6"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "AND"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "AND"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "DUP2"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "MSTORE"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "ADD"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "SWAP1"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "DUP2"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "MSTORE"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "ADD"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "KECCAK256"
										},
										{
											"begin": 25475,
											"end": 25493,
											"name": "SLOAD"
										},
										{
											"begin": 25475,
											"end": 25497,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 25475,
											"end": 25497,
											"name": "SWAP1"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "SWAP2"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "SWAP1"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "AND"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 25475,
											"end": 25505,
											"name": "JUMPDEST"
										},
										{
											"begin": 25454,
											"end": 25463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "DUP1"
										},
										{
											"begin": 25464,
											"end": 25471,
											"name": "DUP5"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "AND"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "AND"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "DUP2"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "MSTORE"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "ADD"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "SWAP1"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "DUP2"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "MSTORE"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "ADD"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25454,
											"end": 25472,
											"name": "KECCAK256"
										},
										{
											"begin": 25454,
											"end": 25505,
											"name": "DUP2"
										},
										{
											"begin": 25454,
											"end": 25505,
											"name": "SWAP1"
										},
										{
											"begin": 25454,
											"end": 25505,
											"name": "SSTORE"
										},
										{
											"begin": 25454,
											"end": 25505,
											"name": "POP"
										},
										{
											"begin": 25542,
											"end": 25549,
											"name": "DUP2"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "AND"
										},
										{
											"begin": 25538,
											"end": 25539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "AND"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25551,
											"end": 25557,
											"name": "DUP4"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "MLOAD"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "DUP1"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "DUP3"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "DUP2"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "MSTORE"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "ADD"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "SWAP2"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "POP"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "POP"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "MLOAD"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "DUP1"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "SWAP2"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "SUB"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "SWAP1"
										},
										{
											"begin": 25521,
											"end": 25558,
											"name": "LOG3"
										},
										{
											"begin": 25188,
											"end": 25566,
											"name": "POP"
										},
										{
											"begin": 25188,
											"end": 25566,
											"name": "POP"
										},
										{
											"begin": 25188,
											"end": 25566,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "JUMPDEST"
										},
										{
											"begin": 37660,
											"end": 37666,
											"name": "DUP2"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "AND"
										},
										{
											"begin": 37650,
											"end": 37656,
											"name": "DUP4"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "AND"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "EQ"
										},
										{
											"begin": 37650,
											"end": 37666,
											"name": "ISZERO"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "DUP1"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "ISZERO"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "JUMPI"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "POP"
										},
										{
											"begin": 37679,
											"end": 37680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37670,
											"end": 37676,
											"name": "DUP2"
										},
										{
											"begin": 37670,
											"end": 37680,
											"name": "GT"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 37650,
											"end": 37680,
											"name": "JUMPDEST"
										},
										{
											"begin": 37646,
											"end": 38494,
											"name": "ISZERO"
										},
										{
											"begin": 37646,
											"end": 38494,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 37646,
											"end": 38494,
											"name": "JUMPI"
										},
										{
											"begin": 37719,
											"end": 37720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37701,
											"end": 37721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37701,
											"end": 37721,
											"name": "AND"
										},
										{
											"begin": 37701,
											"end": 37707,
											"name": "DUP4"
										},
										{
											"begin": 37701,
											"end": 37721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37701,
											"end": 37721,
											"name": "AND"
										},
										{
											"begin": 37701,
											"end": 37721,
											"name": "EQ"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "JUMPI"
										},
										{
											"begin": 37790,
											"end": 37806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37809,
											"end": 37823,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37824,
											"end": 37830,
											"name": "DUP6"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "AND"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "AND"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "DUP2"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "MSTORE"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "ADD"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "SWAP1"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "DUP2"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "MSTORE"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "ADD"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "KECCAK256"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "SWAP1"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "SLOAD"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "SWAP1"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "EXP"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "SWAP1"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "DIV"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37809,
											"end": 37831,
											"name": "AND"
										},
										{
											"begin": 37790,
											"end": 37831,
											"name": "SWAP1"
										},
										{
											"begin": 37790,
											"end": 37831,
											"name": "POP"
										},
										{
											"begin": 37850,
											"end": 37867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37882,
											"end": 37883,
											"name": "DUP1"
										},
										{
											"begin": 37870,
											"end": 37879,
											"name": "DUP3"
										},
										{
											"begin": 37870,
											"end": 37883,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37870,
											"end": 37883,
											"name": "AND"
										},
										{
											"begin": 37870,
											"end": 37883,
											"name": "GT"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "JUMPI"
										},
										{
											"begin": 37929,
											"end": 37930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "JUMP"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "JUMPDEST"
										},
										{
											"begin": 37886,
											"end": 37897,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37898,
											"end": 37904,
											"name": "DUP7"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "AND"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "AND"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "DUP2"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "MSTORE"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "ADD"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "SWAP1"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "DUP2"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "MSTORE"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "ADD"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37886,
											"end": 37905,
											"name": "KECCAK256"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37918,
											"end": 37919,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 37906,
											"end": 37915,
											"name": "DUP5"
										},
										{
											"begin": 37906,
											"end": 37919,
											"name": "SUB"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "AND"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "AND"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "DUP2"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "MSTORE"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "ADD"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "SWAP1"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "DUP2"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "MSTORE"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "ADD"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37886,
											"end": 37920,
											"name": "KECCAK256"
										},
										{
											"begin": 37886,
											"end": 37926,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 37886,
											"end": 37926,
											"name": "ADD"
										},
										{
											"begin": 37886,
											"end": 37926,
											"name": "SLOAD"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 37870,
											"end": 37930,
											"name": "JUMPDEST"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "SWAP1"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "POP"
										},
										{
											"begin": 37949,
											"end": 37966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 37983,
											"end": 37989,
											"name": "DUP5"
										},
										{
											"begin": 37969,
											"end": 37978,
											"name": "DUP4"
										},
										{
											"begin": 37969,
											"end": 37982,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 37969,
											"end": 37982,
											"name": "SWAP1"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "SWAP2"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "SWAP1"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "AND"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 37969,
											"end": 37990,
											"name": "JUMPDEST"
										},
										{
											"begin": 37949,
											"end": 37990,
											"name": "SWAP1"
										},
										{
											"begin": 37949,
											"end": 37990,
											"name": "POP"
										},
										{
											"begin": 38009,
											"end": 38066,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 38026,
											"end": 38032,
											"name": "DUP7"
										},
										{
											"begin": 38034,
											"end": 38043,
											"name": "DUP5"
										},
										{
											"begin": 38045,
											"end": 38054,
											"name": "DUP5"
										},
										{
											"begin": 38056,
											"end": 38065,
											"name": "DUP5"
										},
										{
											"begin": 38009,
											"end": 38025,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 38009,
											"end": 38066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 38009,
											"end": 38066,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 38009,
											"end": 38066,
											"name": "JUMPDEST"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "POP"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "POP"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "POP"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 37697,
											"end": 38082,
											"name": "JUMPDEST"
										},
										{
											"begin": 38120,
											"end": 38121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38102,
											"end": 38122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38102,
											"end": 38122,
											"name": "AND"
										},
										{
											"begin": 38102,
											"end": 38108,
											"name": "DUP3"
										},
										{
											"begin": 38102,
											"end": 38122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38102,
											"end": 38122,
											"name": "AND"
										},
										{
											"begin": 38102,
											"end": 38122,
											"name": "EQ"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "JUMPI"
										},
										{
											"begin": 38191,
											"end": 38207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38210,
											"end": 38224,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38225,
											"end": 38231,
											"name": "DUP5"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "AND"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "AND"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "DUP2"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "MSTORE"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "ADD"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "SWAP1"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "DUP2"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "MSTORE"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "ADD"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "KECCAK256"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "SWAP1"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "SLOAD"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "SWAP1"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "EXP"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "SWAP1"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "DIV"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38210,
											"end": 38232,
											"name": "AND"
										},
										{
											"begin": 38191,
											"end": 38232,
											"name": "SWAP1"
										},
										{
											"begin": 38191,
											"end": 38232,
											"name": "POP"
										},
										{
											"begin": 38251,
											"end": 38268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38283,
											"end": 38284,
											"name": "DUP1"
										},
										{
											"begin": 38271,
											"end": 38280,
											"name": "DUP3"
										},
										{
											"begin": 38271,
											"end": 38284,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38271,
											"end": 38284,
											"name": "AND"
										},
										{
											"begin": 38271,
											"end": 38284,
											"name": "GT"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "JUMPI"
										},
										{
											"begin": 38330,
											"end": 38331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "JUMP"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "JUMPDEST"
										},
										{
											"begin": 38287,
											"end": 38298,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38299,
											"end": 38305,
											"name": "DUP6"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "AND"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "AND"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "DUP2"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "MSTORE"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "ADD"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "SWAP1"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "DUP2"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "MSTORE"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "ADD"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38287,
											"end": 38306,
											"name": "KECCAK256"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38319,
											"end": 38320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38307,
											"end": 38316,
											"name": "DUP5"
										},
										{
											"begin": 38307,
											"end": 38320,
											"name": "SUB"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "AND"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "AND"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "DUP2"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "MSTORE"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "ADD"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "SWAP1"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "DUP2"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "MSTORE"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "ADD"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38287,
											"end": 38321,
											"name": "KECCAK256"
										},
										{
											"begin": 38287,
											"end": 38327,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38287,
											"end": 38327,
											"name": "ADD"
										},
										{
											"begin": 38287,
											"end": 38327,
											"name": "SLOAD"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 38271,
											"end": 38331,
											"name": "JUMPDEST"
										},
										{
											"begin": 38251,
											"end": 38331,
											"name": "SWAP1"
										},
										{
											"begin": 38251,
											"end": 38331,
											"name": "POP"
										},
										{
											"begin": 38350,
											"end": 38367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 38384,
											"end": 38390,
											"name": "DUP5"
										},
										{
											"begin": 38370,
											"end": 38379,
											"name": "DUP4"
										},
										{
											"begin": 38370,
											"end": 38383,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 38370,
											"end": 38383,
											"name": "SWAP1"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "SWAP2"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "SWAP1"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "AND"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 38370,
											"end": 38391,
											"name": "JUMPDEST"
										},
										{
											"begin": 38350,
											"end": 38391,
											"name": "SWAP1"
										},
										{
											"begin": 38350,
											"end": 38391,
											"name": "POP"
										},
										{
											"begin": 38410,
											"end": 38467,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 38427,
											"end": 38433,
											"name": "DUP6"
										},
										{
											"begin": 38435,
											"end": 38444,
											"name": "DUP5"
										},
										{
											"begin": 38446,
											"end": 38455,
											"name": "DUP5"
										},
										{
											"begin": 38457,
											"end": 38466,
											"name": "DUP5"
										},
										{
											"begin": 38410,
											"end": 38426,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 38410,
											"end": 38467,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 38410,
											"end": 38467,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 38410,
											"end": 38467,
											"name": "JUMPDEST"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "POP"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "POP"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "POP"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 38098,
											"end": 38483,
											"name": "JUMPDEST"
										},
										{
											"begin": 37646,
											"end": 38494,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 37646,
											"end": 38494,
											"name": "JUMPDEST"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "POP"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "POP"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "POP"
										},
										{
											"begin": 37554,
											"end": 38501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "JUMPDEST"
										},
										{
											"begin": 37198,
											"end": 37221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37224,
											"end": 37234,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37235,
											"end": 37244,
											"name": "DUP5"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "AND"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "AND"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "DUP2"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "MSTORE"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "ADD"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "SWAP1"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "DUP2"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "MSTORE"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "ADD"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "KECCAK256"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "SWAP1"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "SLOAD"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "SWAP1"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "EXP"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "SWAP1"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "DIV"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37224,
											"end": 37245,
											"name": "AND"
										},
										{
											"begin": 37198,
											"end": 37245,
											"name": "SWAP1"
										},
										{
											"begin": 37198,
											"end": 37245,
											"name": "POP"
										},
										{
											"begin": 37256,
											"end": 37280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37283,
											"end": 37303,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 37293,
											"end": 37302,
											"name": "DUP5"
										},
										{
											"begin": 37283,
											"end": 37292,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 37283,
											"end": 37303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 37283,
											"end": 37303,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 37283,
											"end": 37303,
											"name": "JUMPDEST"
										},
										{
											"begin": 37256,
											"end": 37303,
											"name": "SWAP1"
										},
										{
											"begin": 37256,
											"end": 37303,
											"name": "POP"
										},
										{
											"begin": 37384,
											"end": 37393,
											"name": "DUP3"
										},
										{
											"begin": 37360,
											"end": 37370,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37371,
											"end": 37380,
											"name": "DUP7"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "AND"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "AND"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "DUP2"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "MSTORE"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "ADD"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "SWAP1"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "DUP2"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "MSTORE"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "ADD"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "KECCAK256"
										},
										{
											"begin": 37360,
											"end": 37381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "EXP"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "DUP2"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "SLOAD"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "DUP2"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "MUL"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "NOT"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "AND"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "SWAP1"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "DUP4"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "AND"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "MUL"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "OR"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "SWAP1"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "SSTORE"
										},
										{
											"begin": 37360,
											"end": 37393,
											"name": "POP"
										},
										{
											"begin": 37455,
											"end": 37464,
											"name": "DUP3"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "AND"
										},
										{
											"begin": 37438,
											"end": 37453,
											"name": "DUP3"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "AND"
										},
										{
											"begin": 37427,
											"end": 37436,
											"name": "DUP6"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "AND"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "MLOAD"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "MLOAD"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "DUP1"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "SWAP2"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "SUB"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "SWAP1"
										},
										{
											"begin": 37411,
											"end": 37465,
											"name": "LOG4"
										},
										{
											"begin": 37478,
											"end": 37538,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 37493,
											"end": 37508,
											"name": "DUP3"
										},
										{
											"begin": 37510,
											"end": 37519,
											"name": "DUP5"
										},
										{
											"begin": 37521,
											"end": 37537,
											"name": "DUP4"
										},
										{
											"begin": 37478,
											"end": 37492,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 37478,
											"end": 37538,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 37478,
											"end": 37538,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 37478,
											"end": 37538,
											"name": "JUMPDEST"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "POP"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "POP"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "POP"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "POP"
										},
										{
											"begin": 37107,
											"end": 37546,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 39391,
											"end": 39544,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 39391,
											"end": 39544,
											"name": "JUMPDEST"
										},
										{
											"begin": 39436,
											"end": 39440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39453,
											"end": 39468,
											"name": "DUP1"
										},
										{
											"begin": 39501,
											"end": 39510,
											"name": "CHAINID"
										},
										{
											"begin": 39490,
											"end": 39510,
											"name": "SWAP1"
										},
										{
											"begin": 39490,
											"end": 39510,
											"name": "POP"
										},
										{
											"begin": 39529,
											"end": 39536,
											"name": "DUP1"
										},
										{
											"begin": 39522,
											"end": 39536,
											"name": "SWAP2"
										},
										{
											"begin": 39522,
											"end": 39536,
											"name": "POP"
										},
										{
											"begin": 39522,
											"end": 39536,
											"name": "POP"
										},
										{
											"begin": 39391,
											"end": 39544,
											"name": "SWAP1"
										},
										{
											"begin": 39391,
											"end": 39544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "JUMPDEST"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "POP"
										},
										{
											"begin": 28127,
											"end": 28219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP4"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "DUP4"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "MLOAD"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "DUP1"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "ADD"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "MSTORE"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "DUP1"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "DUP2"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "MSTORE"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "ADD"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "DUP2"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "MSTORE"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "POP"
										},
										{
											"begin": 5328,
											"end": 5331,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 5328,
											"end": 5371,
											"name": "JUMPDEST"
										},
										{
											"begin": 5321,
											"end": 5371,
											"name": "SWAP1"
										},
										{
											"begin": 5321,
											"end": 5371,
											"name": "POP"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "SWAP3"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "SWAP2"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "POP"
										},
										{
											"begin": 5243,
											"end": 5379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "JUMPDEST"
										},
										{
											"begin": 38688,
											"end": 38706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 38716,
											"end": 38728,
											"name": "NUMBER"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "MLOAD"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "DUP1"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "ADD"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "MSTORE"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "DUP1"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "DUP2"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "MSTORE"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "ADD"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH data",
											"value": "BB1F902A94F810E692F0E0E5711B6C52F36227F9406FD275E4DB6BDF07FD1DA"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "SWAP2"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "CODECOPY"
										},
										{
											"begin": 38709,
											"end": 38715,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 38709,
											"end": 38786,
											"name": "JUMPDEST"
										},
										{
											"begin": 38688,
											"end": 38786,
											"name": "SWAP1"
										},
										{
											"begin": 38688,
											"end": 38786,
											"name": "POP"
										},
										{
											"begin": 38818,
											"end": 38819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38803,
											"end": 38815,
											"name": "DUP5"
										},
										{
											"begin": 38803,
											"end": 38819,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38803,
											"end": 38819,
											"name": "AND"
										},
										{
											"begin": 38803,
											"end": 38819,
											"name": "GT"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "DUP1"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "ISZERO"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "JUMPI"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "POP"
										},
										{
											"begin": 38877,
											"end": 38888,
											"name": "DUP1"
										},
										{
											"begin": 38823,
											"end": 38888,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38888,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38834,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38835,
											"end": 38844,
											"name": "DUP8"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "DUP2"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "MSTORE"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "ADD"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "SWAP1"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "DUP2"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "MSTORE"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "ADD"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38823,
											"end": 38845,
											"name": "KECCAK256"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38861,
											"end": 38862,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38846,
											"end": 38858,
											"name": "DUP8"
										},
										{
											"begin": 38846,
											"end": 38862,
											"name": "SUB"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "DUP2"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "MSTORE"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "ADD"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "SWAP1"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "DUP2"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "MSTORE"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "ADD"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38823,
											"end": 38863,
											"name": "KECCAK256"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "ADD"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "SWAP1"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "SLOAD"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "SWAP1"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "EXP"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "SWAP1"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "DIV"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38873,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38888,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38823,
											"end": 38888,
											"name": "AND"
										},
										{
											"begin": 38823,
											"end": 38888,
											"name": "EQ"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 38803,
											"end": 38888,
											"name": "JUMPDEST"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "ISZERO"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "JUMPI"
										},
										{
											"begin": 38954,
											"end": 38962,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38916,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38917,
											"end": 38926,
											"name": "DUP8"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "AND"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "AND"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "MSTORE"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "ADD"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "SWAP1"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "MSTORE"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "ADD"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38905,
											"end": 38927,
											"name": "KECCAK256"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38943,
											"end": 38944,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38928,
											"end": 38940,
											"name": "DUP8"
										},
										{
											"begin": 38928,
											"end": 38944,
											"name": "SUB"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "AND"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "AND"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "MSTORE"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "ADD"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "SWAP1"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "MSTORE"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "ADD"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38905,
											"end": 38945,
											"name": "KECCAK256"
										},
										{
											"begin": 38905,
											"end": 38951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38905,
											"end": 38951,
											"name": "ADD"
										},
										{
											"begin": 38905,
											"end": 38962,
											"name": "DUP2"
										},
										{
											"begin": 38905,
											"end": 38962,
											"name": "SWAP1"
										},
										{
											"begin": 38905,
											"end": 38962,
											"name": "SSTORE"
										},
										{
											"begin": 38905,
											"end": 38962,
											"name": "POP"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "JUMP"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "JUMPDEST"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "MLOAD"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "DUP1"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "MSTORE"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "DUP1"
										},
										{
											"begin": 39045,
											"end": 39056,
											"name": "DUP3"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "AND"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "MSTORE"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 39058,
											"end": 39066,
											"name": "DUP4"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "MSTORE"
										},
										{
											"begin": 39034,
											"end": 39067,
											"name": "POP"
										},
										{
											"begin": 38995,
											"end": 39006,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39007,
											"end": 39016,
											"name": "DUP8"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "MSTORE"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "SWAP1"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "MSTORE"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38995,
											"end": 39017,
											"name": "KECCAK256"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39018,
											"end": 39030,
											"name": "DUP7"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "MSTORE"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "SWAP1"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "MSTORE"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38995,
											"end": 39031,
											"name": "KECCAK256"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP3"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "MLOAD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "EXP"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SLOAD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "MUL"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "NOT"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SWAP1"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP4"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "AND"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "MUL"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "OR"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SWAP1"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SSTORE"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "POP"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP3"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "MLOAD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "DUP2"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "ADD"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SSTORE"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "SWAP1"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "POP"
										},
										{
											"begin": 38995,
											"end": 39067,
											"name": "POP"
										},
										{
											"begin": 39125,
											"end": 39126,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 39110,
											"end": 39122,
											"name": "DUP5"
										},
										{
											"begin": 39110,
											"end": 39126,
											"name": "ADD"
										},
										{
											"begin": 39082,
											"end": 39096,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39097,
											"end": 39106,
											"name": "DUP8"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "AND"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "AND"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "DUP2"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "MSTORE"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "ADD"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "SWAP1"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "DUP2"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "MSTORE"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "ADD"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "KECCAK256"
										},
										{
											"begin": 39082,
											"end": 39107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "EXP"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "DUP2"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "SLOAD"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "DUP2"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "MUL"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "NOT"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "AND"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "SWAP1"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "DUP4"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "AND"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "MUL"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "OR"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "SWAP1"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "SSTORE"
										},
										{
											"begin": 39082,
											"end": 39126,
											"name": "POP"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 38799,
											"end": 39138,
											"name": "JUMPDEST"
										},
										{
											"begin": 39176,
											"end": 39185,
											"name": "DUP5"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "AND"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 39187,
											"end": 39195,
											"name": "DUP5"
										},
										{
											"begin": 39197,
											"end": 39205,
											"name": "DUP5"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "MLOAD"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP1"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP4"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP2"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "MSTORE"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "ADD"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP3"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP2"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "MSTORE"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "ADD"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "SWAP3"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "POP"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "POP"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "POP"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "MLOAD"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "DUP1"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "SWAP2"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "SUB"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "SWAP1"
										},
										{
											"begin": 39155,
											"end": 39206,
											"name": "LOG2"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "POP"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "POP"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "POP"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "POP"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "POP"
										},
										{
											"begin": 38509,
											"end": 39214,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "JUMPDEST"
										},
										{
											"begin": 39297,
											"end": 39303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39328,
											"end": 39333,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 39324,
											"end": 39325,
											"name": "DUP4"
										},
										{
											"begin": 39324,
											"end": 39333,
											"name": "LT"
										},
										{
											"begin": 39335,
											"end": 39347,
											"name": "DUP3"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "JUMPI"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MLOAD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MSTORE"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP3"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SUB"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP3"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MSTORE"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP4"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MLOAD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MSTORE"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MLOAD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP4"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "AND"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ISZERO"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "JUMPI"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP3"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SUB"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MLOAD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP4"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SUB"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "EXP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SUB"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "NOT"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "AND"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MSTORE"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "ADD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "JUMPDEST"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP3"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "MLOAD"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "DUP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP2"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SUB"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "SWAP1"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "REVERT"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "JUMPDEST"
										},
										{
											"begin": 39316,
											"end": 39348,
											"name": "POP"
										},
										{
											"begin": 39373,
											"end": 39374,
											"name": "DUP3"
										},
										{
											"begin": 39359,
											"end": 39375,
											"name": "SWAP1"
										},
										{
											"begin": 39359,
											"end": 39375,
											"name": "POP"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "SWAP3"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "SWAP2"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "POP"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "POP"
										},
										{
											"begin": 39222,
											"end": 39383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMPDEST"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "MLOAD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "ADD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "MSTORE"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "AND"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "MSTORE"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "ADD"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "DUP2"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "MSTORE"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "POP"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "SWAP1"
										},
										{
											"begin": 30617,
											"end": 39547,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"18FC8AF80B4A731C3CE32406A52798414AD910485CBDCE7F8EFA30829D690FF": "56455253413a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"35BBD66A404ECAB5400EA987B29286FDE22B2E9272C10E62471021D1506FE2C1": "56455253413a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"BB1F902A94F810E692F0E0E5711B6C52F36227F9406FD275E4DB6BDF07FD1DA": "56455253413a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"C7A1BA371AF039472495F9BD83D8F06DFD4A777A3CF4068DFD1D7962F1FE8006": "56455253413a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
										"E7CF3B87E0CFF2B4AC778FCC8C3CE968F02C806BAEC2B92C1C391D868475F013": "56455253413a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/whore.sol\":\"VERSAToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/whore.sol\":{\"keccak256\":\"0xbdc5c04da67ed97a96518c1e289f65275cf9fabaa2101a25b92ed2bd715ef3c3\",\"urls\":[\"bzz-raw://098d86d6e7f0cbd22969e0f83e17956c733fa9e2e5d04d599aa7f2f310060717\",\"dweb:/ipfs/QmPAC3BT5YHcxoUe1L1PZ71kYn764cDfQrUZ6RLg7h5WMN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 450,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 456,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 458,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 460,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 462,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 923,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1056,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1067,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1061_storage))"
							},
							{
								"astId": 1071,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 1085,
								"contract": "contracts/whore.sol:VERSAToken",
								"label": "nonces",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1061_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)1061_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)1061_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct VERSAToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)1061_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)1061_storage": {
								"encoding": "inplace",
								"label": "struct VERSAToken.Checkpoint",
								"members": [
									{
										"astId": 1058,
										"contract": "contracts/whore.sol:VERSAToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1060,
										"contract": "contracts/whore.sol:VERSAToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"contracts/whore.sol": {
				"ast": {
					"absolutePath": "contracts/whore.sol",
					"exportedSymbols": {
						"Address": [
							435
						],
						"Context": [
							22
						],
						"ERC20": [
							918
						],
						"IERC20": [
							90
						],
						"Ownable": [
							1019
						],
						"SafeMath": [
							276
						],
						"VERSAToken": [
							1641
						]
					},
					"id": 1642,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "127:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "767:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "785:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "785:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "778:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "750:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:17:0"
									},
									"scope": 22,
									"src": "697:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "876:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1670,
													"src": "887:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "887:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "1028:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1028:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "1021:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "862:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "862:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "861:14:0"
									},
									"scope": 22,
									"src": "811:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1642,
							"src": "664:383:0"
						},
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1114:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP.",
							"fullyImplemented": false,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"functionSelector": "18160ddd",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1333:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "1359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1358:9:0"
									},
									"scope": 90,
									"src": "1313:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"functionSelector": "70a08231",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "1475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1474:17:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "1515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1514:9:0"
									},
									"scope": 90,
									"src": "1456:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.",
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1771:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1770:35:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1823:6:0"
									},
									"scope": 90,
									"src": "1753:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n     * This value changes when {approve} or {transferFrom} are called.",
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2133:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2132:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2188:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2187:9:0"
									},
									"scope": 90,
									"src": "2114:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n     * Emits an {Approval} event.",
									"functionSelector": "095ea7b3",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2882:33:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "2934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2933:6:0"
									},
									"scope": 90,
									"src": "2866:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.",
									"functionSelector": "23b872dd",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3280:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3296:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3315:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3279:51:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3348:6:0"
									},
									"scope": 90,
									"src": "3258:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n     * Note that `value` may be zero.",
									"id": 81,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "3547:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "3569:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "3589:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3546:57:0"
									},
									"src": "3532:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 89,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3784:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3807:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "3832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3783:63:0"
									},
									"src": "3769:78:0"
								}
							],
							"scope": 1642,
							"src": "1215:2635:0"
						},
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3912:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 276,
							"linearizedBaseContracts": [
								276
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "4846:114:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 115,
														"src": "4857:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 102,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "4869:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 103,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "4873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4857:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 107,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "4893:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "4898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4893:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4901:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "4885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "4885:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 101,
													"src": "4951:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 114,
												"nodeType": "Return",
												"src": "4944:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `+` operator.\n\n     * Requirements:\n\n     * - Addition cannot overflow.",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "4792:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "4803:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4791:22:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "4837:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4836:9:0"
									},
									"scope": 276,
									"src": "4779:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "5310:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 126,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5332:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 127,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "5335:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5338:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 125,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															132,
															159
														],
														"referencedDeclaration": 159,
														"src": "5328:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5328:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 130,
												"nodeType": "Return",
												"src": "5321:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n\n     * - Subtraction cannot overflow.",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "5256:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "5267:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5255:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 132,
												"src": "5301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5300:9:0"
									},
									"scope": 276,
									"src": "5243:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "5777:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "5796:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 145,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5801:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5796:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 147,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "5804:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "5788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5788:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "5788:29:0"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 158,
														"src": "5828:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 152,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "5840:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 153,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "5844:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5840:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5828:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 156,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 151,
													"src": "5865:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 142,
												"id": 157,
												"nodeType": "Return",
												"src": "5858:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n\n     * - Subtraction cannot overflow.",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "5695:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "5706:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "5717:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5694:50:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 159,
												"src": "5768:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5767:9:0"
									},
									"scope": 276,
									"src": "5682:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "6200:404:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "6436:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6441:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 174,
												"nodeType": "IfStatement",
												"src": "6432:47:0",
												"trueBody": {
													"id": 173,
													"nodeType": "Block",
													"src": "6444:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6466:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 167,
															"id": 172,
															"nodeType": "Return",
															"src": "6459:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "6491:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 177,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "6503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6491:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6527:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "6531:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6527:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "6536:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6527:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6539:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "6519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "6519:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 190,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 176,
													"src": "6595:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 191,
												"nodeType": "Return",
												"src": "6588:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `*` operator.\n\n     * Requirements:\n\n     * - Multiplication cannot overflow.",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "6146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "6157:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6145:22:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "6191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6190:9:0"
									},
									"scope": 276,
									"src": "6133:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "7147:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "7169:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 204,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "7172:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7175:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 202,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															209,
															236
														],
														"referencedDeclaration": 236,
														"src": "7165:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 207,
												"nodeType": "Return",
												"src": "7158:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "7093:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "7104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7092:22:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "7138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7137:9:0"
									},
									"scope": 276,
									"src": "7080:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "7803:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 221,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "7822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7826:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 224,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "7829:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "7814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7814:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "7814:28:0"
											},
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 235,
														"src": "7853:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 232,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "7865:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "7869:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7865:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7853:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 233,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "7977:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 234,
												"nodeType": "Return",
												"src": "7970:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "7721:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "7732:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "7743:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7720:50:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "7794:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7793:9:0"
									},
									"scope": 276,
									"src": "7708:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8518:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "8540:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 247,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8543:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8546:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 245,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															275
														],
														"referencedDeclaration": 275,
														"src": "8536:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8536:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "8529:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "8464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "8475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8463:22:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "8509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8508:9:0"
									},
									"scope": 276,
									"src": "8451:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "9161:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 264,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "9180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9185:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "9188:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "9172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9172:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "9172:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "9219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "9223:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 273,
												"nodeType": "Return",
												"src": "9212:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "9079:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "9090:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "9101:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9078:50:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "9152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9151:9:0"
									},
									"scope": 276,
									"src": "9066:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1642,
							"src": "4516:4719:0"
						},
						{
							"id": 277,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9297:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "10071:553:0",
										"statements": [
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 301,
														"src": "10327:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 284,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "10327:16:0"
											},
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 301,
														"src": "10354:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 287,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10376:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10354:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10519:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10521:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "10545:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "10533:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "10533:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "10521:8:0"
																}
															]
														}
													]
												},
												"externalReferences": [
													{
														"declaration": 279,
														"isOffset": false,
														"isSlot": false,
														"src": "10545:7:0",
														"valueSize": 1
													},
													{
														"declaration": 285,
														"isOffset": false,
														"isSlot": false,
														"src": "10521:8:0",
														"valueSize": 1
													}
												],
												"id": 291,
												"nodeType": "InlineAssembly",
												"src": "10510:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 292,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "10573:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "10585:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "10573:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "10600:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10612:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "10600:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10573:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 299,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10572:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 283,
												"id": 300,
												"nodeType": "Return",
												"src": "10565:51:0"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "10025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10024:17:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "10065:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10064:6:0"
									},
									"scope": 435,
									"src": "10005:619:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "12067:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "12090:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12082:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12082:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12082:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12082:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "12107:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12082:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12115:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "12074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12074:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "12074:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 323,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "12173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 320,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "12154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12154:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12154:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "12154:26:0"
											}
										]
									},
									"documentation": "CHANGE FUCTION\nfunction sendValue(address payable recipient, uint256 amount) internal {\nrequire(address(this).balance >= amount, \"Address: insufficient balance\");\n// solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n(bool success, ) = recipient.call{ value: amount }(\"\");\nrequire(success, \"Address: unable to send value, recipient may have reverted\");\n}",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "12015:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12015:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "12042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12014:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12067:0:0"
									},
									"scope": 435,
									"src": "11996:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "13042:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 337,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "13071:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "13079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13085:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 336,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															343,
															362
														],
														"referencedDeclaration": 362,
														"src": "13058:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13058:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 341,
												"nodeType": "Return",
												"src": "13051:67:0"
											}
										]
									},
									"documentation": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n\n     * Requirements:\n\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n\n     * _Available since v3.1._",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "12975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "12991:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12974:35:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "13028:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13028:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13027:14:0"
									},
									"scope": 435,
									"src": "12953:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "13473:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "13513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "13521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13527:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "13530:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 354,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "13491:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 360,
												"nodeType": "Return",
												"src": "13484:59:0"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n\n     * _Available since v3.1._",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "13378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "13394:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13394:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "13413:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13413:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13377:63:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "13459:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13459:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13458:14:0"
									},
									"scope": 435,
									"src": "13356:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "16239:971:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 377,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "16265:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 376,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "16254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16254:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16274:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "16246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16246:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "16246:60:0"
											},
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"name": "targetPayable",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 433,
														"src": "16376:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 382,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16376:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 386,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "16416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 384,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16408:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16408:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16376:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 392,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "16446:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 390,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16438:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16438:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16438:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 395,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "16463:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16438:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16473:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "16430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16430:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "16430:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 403,
															"name": "weiValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "16535:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 400,
															"name": "targetPayable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "16512:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16512:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "16512:32:0"
											},
											{
												"assignments": [
													407,
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 433,
														"src": "16603:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 409,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 433,
														"src": "16617:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16617:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "16656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "16644:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16644:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16644:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16602:59:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 415,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "16672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "16723:484:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 419,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "16801:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16801:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16821:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16801:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 429,
																"nodeType": "Block",
																"src": "17153:47:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 426,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 370,
																					"src": "17175:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 425,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1661,
																					1662
																				],
																				"referencedDeclaration": 1662,
																				"src": "17168:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17168:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 428,
																		"nodeType": "ExpressionStatement",
																		"src": "17168:20:0"
																	}
																]
															},
															"id": 430,
															"nodeType": "IfStatement",
															"src": "16797:403:0",
															"trueBody": {
																"id": 424,
																"nodeType": "Block",
																"src": "16824:323:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17000:136:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "17019:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "17048:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "17042:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17042:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "17023:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17088:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "17092:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "17084:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17084:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "17105:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "17077:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17077:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17077:44:0"
																				}
																			]
																		},
																		"externalReferences": [
																			{
																				"declaration": 409,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17048:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 409,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17092:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 423,
																		"nodeType": "InlineAssembly",
																		"src": "16991:145:0"
																	}
																]
															}
														}
													]
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "16668:539:0",
												"trueBody": {
													"id": 418,
													"nodeType": "Block",
													"src": "16681:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 416,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "16699:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 374,
															"id": 417,
															"nodeType": "Return",
															"src": "16692:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": "CHANGE FUNCTION\nfunction _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\nrequire(isContract(target), \"Address: call to non-contract\");\n// solhint-disable-next-line avoid-low-level-calls\n(bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\nif (success) {\nreturn returndata;\n} else {\n// Look for revert reason and bubble it up if present\nif (returndata.length > 0) {\n// The easiest way to bubble the revert reason is using memory via assembly\n// solhint-disable-next-line no-inline-assembly\nassembly {\nlet returndata_size := mload(returndata)\nrevert(add(32, returndata), returndata_size)\n}\n} else {\nrevert(errorMessage);\n}\n}\n}",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "16126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "16142:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "16161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "16179:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16125:81:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "16225:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16224:14:0"
									},
									"scope": 435,
									"src": "16095:1115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1642,
							"src": "9395:7820:0"
						},
						{
							"id": 436,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17281:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 437,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "18521:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "18521:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 439,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 90,
										"src": "18530:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$90",
											"typeString": "contract IERC20"
										}
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "18530:6:0"
								}
							],
							"contractDependencies": [
								22,
								90
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20PresetMinterPauser}.\n\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 918,
							"linearizedBaseContracts": [
								918,
								90,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 443,
									"libraryName": {
										"contractScope": null,
										"id": 441,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 276,
										"src": "18550:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$276",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "18544:27:0",
									"typeName": {
										"id": 442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18563:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 446,
									"libraryName": {
										"contractScope": null,
										"id": 444,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "18583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$435",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "18577:26:0",
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18595:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 450,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18611:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 449,
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "18620:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "18611:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "18631:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 456,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18666:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 455,
										"keyType": {
											"id": 451,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "18675:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "18666:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 454,
											"keyType": {
												"id": 452,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "18695:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "18686:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18706:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18744:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18781:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 459,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "18781:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 462,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18808:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "18808:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 918,
									"src": "18837:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 463,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "18837:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "19256:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 471,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "19267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 472,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "19275:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "19267:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "19267:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 475,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "19290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 476,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "19300:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "19290:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "19290:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 479,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "19317:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19329:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "19317:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "19317:14:0"
											}
										]
									},
									"documentation": "@dev Sets the values for {name} and {symbol}, initializes {decimals} with\na default value of 18.\n\n     * To select a different value for {decimals}, use {_setupDecimals}.\n\n     * All three of these values are immutable: they can only be set once during\nconstruction.",
									"id": 484,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "19207:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "19227:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19206:42:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19256:0:0"
									},
									"scope": 918,
									"src": "19194:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "19461:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "19479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "19472:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"functionSelector": "06fdde03",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19422:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "19446:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19446:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19445:15:0"
									},
									"scope": 918,
									"src": "19409:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "19665:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "19683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "19676:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"functionSelector": "95d89b41",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19626:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "19650:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19650:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19649:15:0"
									},
									"scope": 918,
									"src": "19611:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "20384:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "20402:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "20395:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\ncalled.\n\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"functionSelector": "313ce567",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20353:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "20377:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 502,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20377:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20376:7:0"
									},
									"scope": 918,
									"src": "20336:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "20546:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "20564:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 515,
												"nodeType": "Return",
												"src": "20557:19:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"functionSelector": "18160ddd",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 510,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20519:8:0"
									},
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20504:2:0"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "20537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20536:9:0"
									},
									"scope": 918,
									"src": "20484:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										35
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "20722:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 525,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "20740:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 527,
													"indexExpression": {
														"argumentTypes": null,
														"id": 526,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "20750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20740:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 528,
												"nodeType": "Return",
												"src": "20733:25:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"functionSelector": "70a08231",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20695:8:0"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "20666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20665:17:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "20713:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20712:9:0"
									},
									"scope": 918,
									"src": "20647:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "21071:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 541,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "21092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21092:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 543,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "21106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 544,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "21117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "21082:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21082:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "21082:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21142:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 539,
												"id": 548,
												"nodeType": "Return",
												"src": "21135:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n\n     * Requirements:\n\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"functionSelector": "a9059cbb",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 536,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21047:8:0"
									},
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "20997:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "21016:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20996:35:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 550,
												"src": "21065:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21064:6:0"
									},
									"scope": 918,
									"src": "20979:175:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "21315:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 560,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "21333:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 562,
														"indexExpression": {
															"argumentTypes": null,
															"id": 561,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "21345:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21333:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 564,
													"indexExpression": {
														"argumentTypes": null,
														"id": 563,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "21352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21333:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "21326:34:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"functionSelector": "dd62ed3e",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21288:8:0"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "21236:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "21251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21235:32:0"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "21306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21305:9:0"
									},
									"scope": 918,
									"src": "21217:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										62
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "21604:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 578,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "21624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21624:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 580,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "21638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "21647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "21615:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21615:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "21615:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21672:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 576,
												"id": 585,
												"nodeType": "Return",
												"src": "21665:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.",
									"functionSelector": "095ea7b3",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 573,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21580:8:0"
									},
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "21532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "21549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21531:33:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "21598:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21597:6:0"
									},
									"scope": 918,
									"src": "21515:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										73
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "22270:209:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 600,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "22291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "22299:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 602,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "22310:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "22281:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22281:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "22281:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "22337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "22345:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22345:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 616,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "22397:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22405:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 609,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "22359:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 611,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 610,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "22371:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22359:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 614,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 612,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "22379:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22379:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22359:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 159,
																"src": "22359:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22359:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "22328:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22328:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "22328:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22467:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 598,
												"id": 622,
												"nodeType": "Return",
												"src": "22460:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for ``sender``'s tokens of at least\n`amount`.",
									"functionSelector": "23b872dd",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22246:8:0"
									},
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "22180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "22196:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "22215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22179:51:0"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "22264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22263:6:0"
									},
									"scope": 918,
									"src": "22158:321:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "22982:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 634,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "23002:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23002:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 636,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "23016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "23064:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 637,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "23025:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 640,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 638,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "23037:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23037:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23025:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 642,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 641,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "23051:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23025:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 116,
																"src": "23025:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23025:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "22993:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22993:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "22993:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23094:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 632,
												"id": 649,
												"nodeType": "Return",
												"src": "23087:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n\n     * Emits an {Approval} event indicating the updated allowance.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.",
									"functionSelector": "39509351",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 651,
												"src": "22915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 651,
												"src": "22932:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22914:37:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 651,
												"src": "22976:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22975:6:0"
									},
									"scope": 918,
									"src": "22888:218:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "23708:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "23728:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23728:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "23742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 671,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "23790:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23807:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 664,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "23751:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 667,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 665,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "23763:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23763:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23751:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 669,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 668,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "23777:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23751:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 159,
																"src": "23751:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23751:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "23719:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23719:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "23719:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23866:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 659,
												"id": 677,
												"nodeType": "Return",
												"src": "23859:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n\n     * Emits an {Approval} event indicating the updated allowance.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"functionSelector": "a457c2d7",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 679,
												"src": "23636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 679,
												"src": "23653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23635:42:0"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 679,
												"src": "23702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23701:6:0"
									},
									"scope": 918,
									"src": "23609:269:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "24455:452:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 689,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "24474:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24492:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 690,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24484:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24474:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24496:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "24466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24466:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "24466:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 699,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "24555:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24576:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24568:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24568:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24555:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24580:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "24547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24547:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "24547:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 709,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "24652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 710,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "24660:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 711,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "24671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "24631:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24631:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "24631:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 714,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "24691:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 716,
														"indexExpression": {
															"argumentTypes": null,
															"id": 715,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "24701:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24691:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 721,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "24733:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24741:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 717,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "24711:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 719,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 718,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "24721:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24711:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 159,
															"src": "24711:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24711:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24691:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "24691:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 726,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "24793:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 728,
														"indexExpression": {
															"argumentTypes": null,
															"id": 727,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "24803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24793:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 733,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "24841:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 729,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "24816:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 731,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "24826:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24816:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 116,
															"src": "24816:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24816:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24793:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "24793:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "24873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "24881:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "24892:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "24864:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24864:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "24859:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n     * Emits a {Transfer} event.\n\n     * Requirements:\n\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 744,
												"src": "24387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 744,
												"src": "24403:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 744,
												"src": "24422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24386:51:0"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24455:0:0"
									},
									"scope": 918,
									"src": "24368:539:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "25253:313:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 752,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "25272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25291:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25283:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25283:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25272:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25295:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "25264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25264:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "25264:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25371:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25363:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25363:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 766,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "25375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 767,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "25384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "25342:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25342:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "25342:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 770,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "25404:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 773,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "25436:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 771,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "25419:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 116,
															"src": "25419:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25419:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25404:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "25404:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 777,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "25454:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 779,
														"indexExpression": {
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "25464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25454:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 784,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "25498:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 780,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "25475:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 782,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 781,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "25485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25475:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 116,
															"src": "25475:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25475:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25454:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "25454:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25538:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25530:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 793,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "25542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 794,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "25551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "25521:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25521:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "EmitStatement",
												"src": "25516:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n     * Emits a {Transfer} event with `from` set to the zero address.\n\n     * Requirements\n\n     * - `to` cannot be the zero address.",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "25203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "25220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25202:33:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25253:0:0"
									},
									"scope": 918,
									"src": "25188:378:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "25963:353:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 806,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "25982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26001:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 807,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25993:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25993:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25982:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26005:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "25974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25974:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "25974:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 816,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "26075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26092:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26084:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26084:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26084:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 821,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "26096:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "26054:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26054:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "26054:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "26116:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 826,
														"indexExpression": {
															"argumentTypes": null,
															"id": 825,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "26126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26116:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 831,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "26160:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26168:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 827,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "26137:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 829,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 828,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "26147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26137:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 159,
															"src": "26137:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26137:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26116:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "26116:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 836,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "26216:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 839,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "26248:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 837,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "26231:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "26231:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26231:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26216:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "26216:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 844,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "26280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26297:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 845,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26289:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 849,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "26301:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "26271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26271:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "EmitStatement",
												"src": "26266:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n     * Emits a {Transfer} event with `to` set to the zero address.\n\n     * Requirements\n\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "25913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "25930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25912:33:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25963:0:0"
									},
									"scope": 918,
									"src": "25898:418:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "26839:263:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "26858:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26875:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26867:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 864,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26867:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26858:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26879:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "26850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26850:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "26850:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 873,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "26937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26956:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26948:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26948:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26937:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26960:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "26929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26929:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "26929:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 882,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "27010:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 885,
															"indexExpression": {
																"argumentTypes": null,
																"id": 883,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "27022:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27010:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 886,
														"indexExpression": {
															"argumentTypes": null,
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "27029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27010:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 887,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "27040:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27010:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "27010:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "27071:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 892,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "27078:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 893,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "27087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "27062:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27062:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "EmitStatement",
												"src": "27057:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n     * Emits an {Approval} event.\n\n     * Requirements:\n\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "26774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "26789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "26806:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26773:48:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26839:0:0"
									},
									"scope": 918,
									"src": "26756:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "27484:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 902,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "27495:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 903,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "27507:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "27495:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "27495:21:0"
											}
										]
									},
									"documentation": "@dev Sets {decimals} to a value other than the default one of 18.\n\n     * WARNING: This function should only be called from the constructor. Most\napplications that interact with token contracts will not expect\n{decimals} to ever change, and may work incorrectly if it does.",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "27458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 898,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "27458:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27457:17:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27484:0:0"
									},
									"scope": 918,
									"src": "27434:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "28216:3:0",
										"statements": []
									},
									"documentation": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n\n     * Calling conditions:\n\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be to transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].",
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "28157:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "28171:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "28183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28156:42:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28216:0:0"
									},
									"scope": 918,
									"src": "28127:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1642,
							"src": "18503:9719:0"
						},
						{
							"id": 919,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28285:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 920,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "28839:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "28839:7:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 1019,
							"linearizedBaseContracts": [
								1019,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 923,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1019,
									"src": "28854:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28854:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 929,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "28912:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 929,
												"src": "28943:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28911:57:0"
									},
									"src": "28885:84:0"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "29100:139:0",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 949,
														"src": "29111:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 932,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29111:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 934,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "29131:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29131:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29111:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 937,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "29154:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 938,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "29163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29154:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "29154:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29217:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29209:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29209:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29209:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 946,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "29221:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 941,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "29188:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29188:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "EmitStatement",
												"src": "29183:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 950,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29088:2:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29100:0:0"
									},
									"scope": 1019,
									"src": "29076:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "29367:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 955,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "29385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 954,
												"id": 956,
												"nodeType": "Return",
												"src": "29378:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"functionSelector": "8da5cb5b",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29334:2:0"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "29358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29357:9:0"
									},
									"scope": 1019,
									"src": "29320:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "29513:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 961,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "29532:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 962,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "29542:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29542:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "29532:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29556:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "29524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29524:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "29524:67:0"
											},
											{
												"id": 968,
												"nodeType": "PlaceholderStatement",
												"src": "29602:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 970,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29510:2:0"
									},
									"src": "29492:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "30016:94:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 976,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "30053:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30069:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30061:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 975,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "30032:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30032:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "EmitStatement",
												"src": "30027:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 983,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "30083:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30100:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 984,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "30083:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "30083:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"functionSelector": "715018a6",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 973,
											"modifierName": {
												"argumentTypes": null,
												"id": 972,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 970,
												"src": "30006:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30006:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29988:2:0"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30016:0:0"
									},
									"scope": 1019,
									"src": "29962:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "30335:174:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 999,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "30354:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30374:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30366:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30366:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "30354:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30378:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "30346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30346:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "30346:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1009,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "30456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1010,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "30464:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1008,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "30435:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30435:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "EmitStatement",
												"src": "30430:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1013,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "30484:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1014,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "30493:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30484:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "30484:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"functionSelector": "f2fde38b",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 996,
											"modifierName": {
												"argumentTypes": null,
												"id": 995,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 970,
												"src": "30325:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30325:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1018,
												"src": "30292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30291:18:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30335:0:0"
									},
									"scope": 1019,
									"src": "30265:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1642,
							"src": "28819:1693:0"
						},
						{
							"id": 1020,
							"literals": [
								"solidity",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30553:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "566572736147616d6573",
											"id": 1022,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "30646:12:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_be58c39dec61e093cab114d4b17387ab30f6ef646de06d7a9ec7c7b80fdcc5bc",
												"typeString": "literal_string \"VersaGames\""
											},
											"value": "VersaGames"
										},
										{
											"argumentTypes": null,
											"hexValue": "5645525341",
											"id": 1023,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "30660:7:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_b7a313702dce74a1c4bf5c692e5ab84d2799f8bce4151a9dc7b65b85b6dd338e",
												"typeString": "literal_string \"VERSA\""
											},
											"value": "VERSA"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 1021,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 918,
										"src": "30640:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$918",
											"typeString": "contract ERC20"
										}
									},
									"id": 1024,
									"nodeType": "InheritanceSpecifier",
									"src": "30640:28:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1025,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1019,
										"src": "30670:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1019",
											"typeString": "contract Ownable"
										}
									},
									"id": 1026,
									"nodeType": "InheritanceSpecifier",
									"src": "30670:7:0"
								}
							],
							"contractDependencies": [
								22,
								90,
								918,
								1019
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1641,
							"linearizedBaseContracts": [
								1641,
								1019,
								918,
								90,
								22
							],
							"name": "VERSAToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "30844:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1036,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "30861:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1037,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "30866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "30855:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30855:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "30855:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30908:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30900:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30900:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "30912:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1047,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1046,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "30923:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30912:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "30929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1040,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "30885:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30885:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "30885:52:0"
											}
										]
									},
									"documentation": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).",
									"functionSelector": "40c10f19",
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1033,
											"modifierName": {
												"argumentTypes": null,
												"id": 1032,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 970,
												"src": "30834:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30834:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1052,
												"src": "30797:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1052,
												"src": "30810:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30796:30:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30844:0:0"
									},
									"scope": 1641,
									"src": "30783:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1056,
									"name": "_delegates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "31409:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1055,
										"keyType": {
											"id": 1053,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31409:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1054,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31429:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "VERSAToken.Checkpoint",
									"id": 1061,
									"members": [
										{
											"constant": false,
											"id": 1058,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1061,
											"src": "31572:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1057,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "31572:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1060,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1061,
											"src": "31599:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "31599:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1641,
									"src": "31543:77:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1127ed8",
									"id": 1067,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "31702:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint))"
									},
									"typeName": {
										"id": 1066,
										"keyType": {
											"id": 1062,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31711:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31702:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint))"
										},
										"valueType": {
											"id": 1065,
											"keyType": {
												"id": 1063,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "31731:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "31722:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
												"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1064,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1061,
												"src": "31741:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$1061_storage_ptr",
													"typeString": "struct VERSAToken.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fcfff45",
									"id": 1071,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "31841:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 1070,
										"keyType": {
											"id": 1068,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31850:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31841:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 1069,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "31861:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "20606b70",
									"id": 1076,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "31963:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1072,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "31963:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1074,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "32015:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1073,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1650,
											"src": "32005:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1075,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "32005:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7a324dc",
									"id": 1081,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "32179:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1077,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "32179:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 1079,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "32235:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 1078,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1650,
											"src": "32225:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "32225:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 1085,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1641,
									"src": "32377:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1084,
										"keyType": {
											"id": 1082,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "32386:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "32377:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1083,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "32397:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 1093,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "32526:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "32553:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "32583:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32525:85:0"
									},
									"src": "32504:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 1101,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "32733:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "32759:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "32781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32781:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32732:65:0"
									},
									"src": "32706:92:0"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "33048:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1108,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "33066:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1110,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1109,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "33077:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33066:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1107,
												"id": 1111,
												"nodeType": "Return",
												"src": "33059:28:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegator The address to get delegatee for",
									"functionSelector": "587cde1e",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "32965:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32964:19:0"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "33034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33033:9:0"
									},
									"scope": 1641,
									"src": "32946:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "33285:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1119,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "33313:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "33313:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1121,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "33325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1118,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "33303:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33303:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1123,
												"nodeType": "Return",
												"src": "33296:39:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"functionSelector": "5c19a95c",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1125,
												"src": "33257:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33256:19:0"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33285:0:0"
									},
									"scope": 1641,
									"src": "33239:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "33959:999:0",
										"statements": [
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "33970:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1140,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "33970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1145,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "34049:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1149,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 492,
																						"src": "34099:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 1150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34099:6:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "34093:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1147,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "34093:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34093:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1146,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "34083:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34083:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1153,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "34126:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34126:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1157,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1682,
																			"src": "34165:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VERSAToken_$1641",
																				"typeString": "contract VERSAToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VERSAToken_$1641",
																				"typeString": "contract VERSAToken"
																			}
																		],
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34157:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1155,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34157:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34157:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "34020:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "34020:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34020:165:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1142,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "33996:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33996:200:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33970:226:0"
											},
											{
												"assignments": [
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1163,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "34209:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "34209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1173,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "34283:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1168,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "34321:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1169,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "34349:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1170,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "34373:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1165,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "34254:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "34254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34254:140:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1164,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "34230:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34230:175:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34209:196:0"
											},
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "34418:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1174,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "34418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34494:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1180,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "34523:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1181,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "34557:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1177,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "34459:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "34459:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34459:123:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1176,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "34435:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34435:158:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34418:175:0"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "34606:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34606:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "34636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1189,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "34644:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "34647:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1191,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "34650:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1187,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "34626:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34626:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34606:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "34671:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34692:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1196,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34684:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34684:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "34671:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56455253413a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34696:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7a1ba371af039472495f9bd83d8f06dfd4a777a3cf4068dfd1d7962f1fe8006",
																"typeString": "literal_string \"VERSA::delegateBySig: invalid signature\""
															},
															"value": "VERSA::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7a1ba371af039472495f9bd83d8f06dfd4a777a3cf4068dfd1d7962f1fe8006",
																"typeString": "literal_string \"VERSA::delegateBySig: invalid signature\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "34663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34663:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "34663:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1205,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "34757:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "34766:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1206,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "34766:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1208,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1207,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "34773:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34766:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34757:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56455253413a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34787:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7cf3b87e0cff2b4ac778fcc8c3ce968f02c806baec2b92c1c391d868475f013",
																"typeString": "literal_string \"VERSA::delegateBySig: invalid nonce\""
															},
															"value": "VERSA::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7cf3b87e0cff2b4ac778fcc8c3ce968f02c806baec2b92c1c391d868475f013",
																"typeString": "literal_string \"VERSA::delegateBySig: invalid nonce\""
															}
														],
														"id": 1204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "34749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34749:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "34749:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1215,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "34844:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1216,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "34851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34844:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56455253413a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34859:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35bbd66a404ecab5400ea987b29286fde22b2e9272c10e62471021d1506fe2c1",
																"typeString": "literal_string \"VERSA::delegateBySig: signature expired\""
															},
															"value": "VERSA::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35bbd66a404ecab5400ea987b29286fde22b2e9272c10e62471021d1506fe2c1",
																"typeString": "literal_string \"VERSA::delegateBySig: signature expired\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "34836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34836:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "34836:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1222,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "34929:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1223,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "34940:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1221,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "34919:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34919:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1225,
												"nodeType": "Return",
												"src": "34912:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"functionSelector": "c3cda520",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33810:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33838:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "33838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33859:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "33859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1132,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "33881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "33919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33799:136:0"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33959:0:0"
									},
									"scope": 1641,
									"src": "33777:1181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "35265:149:0",
										"statements": [
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1254,
														"src": "35276:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1234,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "35276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1236,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "35298:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1238,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1237,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "35313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35298:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35276:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1240,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "35339:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35354:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "35339:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35405:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "35339:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1243,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "35358:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1244,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "35370:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "35358:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																	"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																}
															},
															"id": 1249,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1246,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "35379:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35394:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35379:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35358:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																"typeString": "struct VERSAToken.Checkpoint storage ref"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "35358:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1233,
												"id": 1253,
												"nodeType": "Return",
												"src": "35332:74:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"functionSelector": "b4b5ea57",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1255,
												"src": "35184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35183:17:0"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1255,
												"src": "35251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35250:9:0"
									},
									"scope": 1641,
									"src": "35159:255:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "35967:1132:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1265,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "35986:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1266,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "36000:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "36000:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35986:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56455253413a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36014:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_018fc8af80b4a731c3ce32406a52798414ad910485cbdce7f8efa30829d690ff",
																"typeString": "literal_string \"VERSA::getPriorVotes: not yet determined\""
															},
															"value": "VERSA::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_018fc8af80b4a731c3ce32406a52798414ad910485cbdce7f8efa30829d690ff",
																"typeString": "literal_string \"VERSA::getPriorVotes: not yet determined\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "35978:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35978:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "35978:79:0"
											},
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1385,
														"src": "36070:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1272,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "36070:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1274,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "36092:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1276,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1275,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "36107:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "36092:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36070:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1278,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "36130:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36146:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "36130:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "36126:58:0",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "36149:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36171:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1263,
															"id": 1282,
															"nodeType": "Return",
															"src": "36164:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1285,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "36244:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1286,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "36256:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36244:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																	"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																}
															},
															"id": 1291,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1288,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "36265:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36280:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36265:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36244:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																"typeString": "struct VERSAToken.Checkpoint storage ref"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1058,
														"src": "36244:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1293,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "36296:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36244:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "36240:147:0",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "36309:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1295,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "36331:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1297,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1296,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "36343:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "36331:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																			"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1301,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1298,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "36352:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36367:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36352:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36331:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																		"typeString": "struct VERSAToken.Checkpoint storage ref"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "36331:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1263,
															"id": 1303,
															"nodeType": "Return",
															"src": "36324:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1306,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "36448:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																	}
																},
																"id": 1308,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "36460:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36448:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																	"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																}
															},
															"id": 1310,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36469:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36448:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																"typeString": "struct VERSAToken.Checkpoint storage ref"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1058,
														"src": "36448:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1312,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "36484:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36448:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "36444:88:0",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "36497:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36519:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1263,
															"id": 1315,
															"nodeType": "Return",
															"src": "36512:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1385,
														"src": "36544:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1318,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "36544:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36559:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36544:16:0"
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1385,
														"src": "36571:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1322,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "36571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1324,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "36586:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36601:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "36586:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36571:31:0"
											},
											{
												"body": {
													"id": 1376,
													"nodeType": "Block",
													"src": "36635:406:0",
													"statements": [
														{
															"assignments": [
																1332
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1332,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1376,
																	"src": "36650:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1331,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "36650:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1341,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1333,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "36666:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1334,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1323,
																					"src": "36675:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1335,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "36683:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "36675:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1337,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "36674:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36692:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "36674:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "36666:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36650:43:0"
														},
														{
															"assignments": [
																1343
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1343,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1376,
																	"src": "36735:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1061_memory_ptr",
																		"typeString": "struct VERSAToken.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1342,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1061,
																		"src": "36735:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1061_storage_ptr",
																			"typeString": "struct VERSAToken.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1349,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1344,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "36758:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1346,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1345,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "36770:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36758:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																		"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																	}
																},
																"id": 1348,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1347,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "36779:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36758:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																	"typeString": "struct VERSAToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36735:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1350,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "36805:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1061_memory_ptr",
																			"typeString": "struct VERSAToken.Checkpoint memory"
																		}
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1058,
																	"src": "36805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1352,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "36821:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36805:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1358,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "36894:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$1061_memory_ptr",
																				"typeString": "struct VERSAToken.Checkpoint memory"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1058,
																		"src": "36894:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1360,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "36909:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "36894:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1373,
																	"nodeType": "Block",
																	"src": "36977:53:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1367,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1323,
																					"src": "36996:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1368,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1332,
																						"src": "37004:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1369,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "37013:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "37004:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "36996:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1372,
																			"nodeType": "ExpressionStatement",
																			"src": "36996:18:0"
																		}
																	]
																},
																"id": 1374,
																"nodeType": "IfStatement",
																"src": "36890:140:0",
																"trueBody": {
																	"id": 1366,
																	"nodeType": "Block",
																	"src": "36922:49:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1362,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "36941:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1363,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1332,
																					"src": "36949:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "36941:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1365,
																			"nodeType": "ExpressionStatement",
																			"src": "36941:14:0"
																		}
																	]
																}
															},
															"id": 1375,
															"nodeType": "IfStatement",
															"src": "36801:229:0",
															"trueBody": {
																"id": 1357,
																"nodeType": "Block",
																"src": "36834:50:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1354,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "36860:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$1061_memory_ptr",
																					"typeString": "struct VERSAToken.Checkpoint memory"
																				}
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1060,
																			"src": "36860:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1263,
																		"id": 1356,
																		"nodeType": "Return",
																		"src": "36853:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1328,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "36620:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1329,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "36628:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "36620:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1377,
												"nodeType": "WhileStatement",
												"src": "36613:428:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1378,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "37058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																}
															},
															"id": 1380,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1379,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "37070:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37058:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1381,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "37079:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37058:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
															"typeString": "struct VERSAToken.Checkpoint storage ref"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1060,
													"src": "37058:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1384,
												"nodeType": "Return",
												"src": "37051:40:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"functionSelector": "782d6fe1",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "35868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "35885:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "35885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35867:35:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "35953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35952:9:0"
									},
									"scope": 1641,
									"src": "35845:1254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "37187:359:0",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1423,
														"src": "37198:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1393,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37198:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1395,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "37224:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1397,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1396,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "37235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37224:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37198:47:0"
											},
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1423,
														"src": "37256:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1402,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "37293:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1401,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "37283:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37283:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37256:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1405,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "37360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1407,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1406,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "37371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37360:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1408,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "37384:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37360:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "37360:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1412,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "37427:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1413,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "37438:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1414,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "37455:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1411,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "37411:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37411:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "EmitStatement",
												"src": "37406:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1418,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "37493:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1419,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "37510:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1420,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "37521:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "37478:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37478:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "37478:60:0"
											}
										]
									},
									"documentation": null,
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "37126:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1424,
												"src": "37145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37125:38:0"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37187:0:0"
									},
									"scope": 1641,
									"src": "37107:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "37635:866:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1433,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "37650:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1434,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "37660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "37650:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1436,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "37670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37679:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "37670:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37650:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1529,
												"nodeType": "IfStatement",
												"src": "37646:848:0",
												"trueBody": {
													"id": 1528,
													"nodeType": "Block",
													"src": "37682:812:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1440,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "37701:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37719:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37711:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1441,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37711:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37711:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "37701:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1483,
															"nodeType": "IfStatement",
															"src": "37697:385:0",
															"trueBody": {
																"id": 1482,
																"nodeType": "Block",
																"src": "37723:359:0",
																"statements": [
																	{
																		"assignments": [
																			1447
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1447,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1482,
																				"src": "37790:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1446,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "37790:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1451,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1448,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "37809:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1450,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1449,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "37824:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37809:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "37790:41:0"
																	},
																	{
																		"assignments": [
																			1453
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1453,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1482,
																				"src": "37850:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1452,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "37850:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1467,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1454,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "37870:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "37882:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "37870:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37929:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "37870:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1457,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1067,
																							"src": "37886:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1459,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1458,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1426,
																							"src": "37898:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "37886:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																							"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1463,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1460,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1447,
																							"src": "37906:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1461,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37918:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "37906:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "37886:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																						"typeString": "struct VERSAToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "37886:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "37850:80:0"
																	},
																	{
																		"assignments": [
																			1469
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1469,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1482,
																				"src": "37949:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1468,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "37949:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1474,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1472,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "37983:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1470,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1453,
																					"src": "37969:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "37969:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37969:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "37949:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1476,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "38026:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1477,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1447,
																					"src": "38034:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1478,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1453,
																					"src": "38045:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1479,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1469,
																					"src": "38056:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1475,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "38009:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38009:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1481,
																		"nodeType": "ExpressionStatement",
																		"src": "38009:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1484,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "38102:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38120:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38112:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1485,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "38112:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38112:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "38102:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1527,
															"nodeType": "IfStatement",
															"src": "38098:385:0",
															"trueBody": {
																"id": 1526,
																"nodeType": "Block",
																"src": "38124:359:0",
																"statements": [
																	{
																		"assignments": [
																			1491
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1491,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1526,
																				"src": "38191:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1490,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "38191:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1495,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1492,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "38210:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1494,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1493,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "38225:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "38210:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "38191:41:0"
																	},
																	{
																		"assignments": [
																			1497
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1497,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1526,
																				"src": "38251:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1496,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "38251:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1511,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1498,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "38271:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38283:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "38271:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38330:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "38271:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1501,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1067,
																							"src": "38287:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1503,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1502,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1428,
																							"src": "38299:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "38287:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																							"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1507,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1504,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1491,
																							"src": "38307:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1505,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38319:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "38307:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "38287:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																						"typeString": "struct VERSAToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1508,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "38287:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "38251:80:0"
																	},
																	{
																		"assignments": [
																			1513
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1513,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1526,
																				"src": "38350:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1512,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "38350:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1518,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1516,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "38384:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1514,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "38370:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 116,
																				"src": "38370:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38370:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "38350:41:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1520,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "38427:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1521,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "38435:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1522,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "38446:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1523,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1513,
																					"src": "38457:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1519,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "38410:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38410:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1525,
																		"nodeType": "ExpressionStatement",
																		"src": "38410:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1531,
												"src": "37578:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1531,
												"src": "37594:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1531,
												"src": "37610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37577:48:0"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37635:0:0"
									},
									"scope": 1641,
									"src": "37554:947:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "38677:537:0",
										"statements": [
											{
												"assignments": [
													1543
												],
												"declarations": [
													{
														"constant": false,
														"id": 1543,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1603,
														"src": "38688:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1542,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "38688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1549,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1545,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "38716:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "38716:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "56455253413a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38730:55:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bb1f902a94f810e692f0e0e5711b6c52f36227f9406fd275e4db6bdf07fd1da",
																"typeString": "literal_string \"VERSA::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "VERSA::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_0bb1f902a94f810e692f0e0e5711b6c52f36227f9406fd275e4db6bdf07fd1da",
																"typeString": "literal_string \"VERSA::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1544,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "38709:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38709:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38688:98:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1550,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "38803:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38818:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "38803:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1553,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "38823:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1555,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1554,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "38835:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "38823:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																		"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																	}
																},
																"id": 1559,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1556,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "38846:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38861:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "38846:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "38823:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																	"typeString": "struct VERSAToken.Checkpoint storage ref"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "38823:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1561,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "38877:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "38823:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38803:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "38980:158:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1576,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "38995:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1579,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1577,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "39007:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38995:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																			"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1578,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "39018:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38995:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																		"typeString": "struct VERSAToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1582,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1543,
																			"src": "39045:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1583,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "39058:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1581,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "39034:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$1061_storage_ptr_$",
																			"typeString": "type(struct VERSAToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39034:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1061_memory",
																		"typeString": "struct VERSAToken.Checkpoint memory"
																	}
																},
																"src": "38995:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																	"typeString": "struct VERSAToken.Checkpoint storage ref"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "38995:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1587,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "39082:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1589,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1588,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "39097:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "39082:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1590,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "39110:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39125:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "39110:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "39082:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1594,
															"nodeType": "ExpressionStatement",
															"src": "39082:44:0"
														}
													]
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "38799:339:0",
												"trueBody": {
													"id": 1575,
													"nodeType": "Block",
													"src": "38890:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1564,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1067,
																				"src": "38905:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct VERSAToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 1569,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1565,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1533,
																				"src": "38917:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "38905:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1061_storage_$",
																				"typeString": "mapping(uint32 => struct VERSAToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 1570,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1566,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "38928:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38943:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "38928:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38905:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1061_storage",
																			"typeString": "struct VERSAToken.Checkpoint storage ref"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1060,
																	"src": "38905:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1572,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "38954:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38905:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1574,
															"nodeType": "ExpressionStatement",
															"src": "38905:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1598,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "39176:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1599,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "39187:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1600,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "39197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1597,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "39155:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39155:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "EmitStatement",
												"src": "39150:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1604,
												"src": "38545:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1604,
												"src": "38573:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1534,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "38573:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1604,
												"src": "38603:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1604,
												"src": "38630:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38534:119:0"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38677:0:0"
									},
									"scope": 1641,
									"src": "38509:705:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "39305:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1614,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "39324:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39328:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39331:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "39328:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "39324:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1619,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "39335:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1660
														],
														"referencedDeclaration": 1660,
														"src": "39316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39316:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "39316:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1624,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "39373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39366:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1622,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "39366:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39366:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1626,
												"nodeType": "Return",
												"src": "39359:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "39238:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "39238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "39246:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39237:36:0"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "39297:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1610,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "39297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39296:8:0"
									},
									"scope": 1641,
									"src": "39222:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "39442:102:0",
										"statements": [
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1639,
														"src": "39453:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "39453:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39488:24:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39490:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "39501:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "39501:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "39490:7:0"
																}
															]
														}
													]
												},
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "39490:7:0",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "39479:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1637,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1634,
													"src": "39529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1638,
												"nodeType": "Return",
												"src": "39522:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39410:2:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1640,
												"src": "39436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "39436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39435:6:0"
									},
									"scope": 1641,
									"src": "39391:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1642,
							"src": "30617:8930:0"
						}
					],
					"src": "127:39420:0"
				},
				"id": 0
			}
		}
	}
}